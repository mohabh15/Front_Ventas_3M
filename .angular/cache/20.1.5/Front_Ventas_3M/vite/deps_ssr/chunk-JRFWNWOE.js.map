{
  "version": 3,
  "sources": ["../../../../../../node_modules/lodash.camelcase/index.js", "../../../../../../node_modules/@protobufjs/aspromise/index.js", "../../../../../../node_modules/@protobufjs/base64/index.js", "../../../../../../node_modules/@protobufjs/eventemitter/index.js", "../../../../../../node_modules/@protobufjs/float/index.js", "../../../../../../node_modules/@protobufjs/inquire/index.js", "../../../../../../node_modules/@protobufjs/utf8/index.js", "../../../../../../node_modules/@protobufjs/pool/index.js", "../../../../../../node_modules/protobufjs/src/util/longbits.js", "../../../../../../node_modules/protobufjs/src/util/minimal.js", "../../../../../../node_modules/protobufjs/src/writer.js", "../../../../../../node_modules/protobufjs/src/writer_buffer.js", "../../../../../../node_modules/protobufjs/src/reader.js", "../../../../../../node_modules/protobufjs/src/reader_buffer.js", "../../../../../../node_modules/protobufjs/src/rpc/service.js", "../../../../../../node_modules/protobufjs/src/rpc.js", "../../../../../../node_modules/protobufjs/src/roots.js", "../../../../../../node_modules/protobufjs/src/index-minimal.js", "../../../../../../node_modules/@protobufjs/codegen/index.js", "../../../../../../node_modules/@protobufjs/fetch/index.js", "../../../../../../node_modules/@protobufjs/path/index.js", "../../../../../../node_modules/protobufjs/src/namespace.js", "../../../../../../node_modules/protobufjs/src/mapfield.js", "../../../../../../node_modules/protobufjs/src/method.js", "../../../../../../node_modules/protobufjs/src/service.js", "../../../../../../node_modules/protobufjs/src/message.js", "../../../../../../node_modules/protobufjs/src/decoder.js", "../../../../../../node_modules/protobufjs/src/verifier.js", "../../../../../../node_modules/protobufjs/src/converter.js", "../../../../../../node_modules/protobufjs/src/wrappers.js", "../../../../../../node_modules/protobufjs/src/type.js", "../../../../../../node_modules/protobufjs/src/root.js", "../../../../../../node_modules/protobufjs/src/util.js", "../../../../../../node_modules/protobufjs/src/types.js", "../../../../../../node_modules/protobufjs/src/field.js", "../../../../../../node_modules/protobufjs/src/oneof.js", "../../../../../../node_modules/protobufjs/src/object.js", "../../../../../../node_modules/protobufjs/src/enum.js", "../../../../../../node_modules/protobufjs/src/encoder.js", "../../../../../../node_modules/protobufjs/src/index-light.js", "../../../../../../node_modules/protobufjs/src/tokenize.js", "../../../../../../node_modules/protobufjs/src/parse.js", "../../../../../../node_modules/protobufjs/src/common.js", "../../../../../../node_modules/protobufjs/src/index.js", "../../../../../../node_modules/protobufjs/index.js", "../../../../../../node_modules/protobufjs/google/protobuf/descriptor.json", "../../../../../../node_modules/protobufjs/ext/descriptor/index.js", "../../../../../../node_modules/protobufjs/google/protobuf/api.json", "../../../../../../node_modules/protobufjs/google/protobuf/source_context.json", "../../../../../../node_modules/protobufjs/google/protobuf/type.json", "../../../../../../node_modules/@grpc/proto-loader/build/src/util.js", "../../../../../../node_modules/long/umd/index.js", "../../../../../../node_modules/@grpc/proto-loader/build/src/index.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/constants.js", "../../../../../../node_modules/@grpc/grpc-js/package.json", "../../../../../../node_modules/@grpc/grpc-js/build/src/logging.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/error.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/metadata.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/call-credentials.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/tls-helpers.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/channel-credentials.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/load-balancer.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/service-config.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/connectivity-state.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/uri-parser.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/resolver.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/picker.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/backoff-timeout.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/load-balancer-child-handler.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/resolving-load-balancer.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/channel-options.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/subchannel-address.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/admin.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/call.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/call-interface.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/client-interceptors.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/client.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/make-client.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/channelz.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/subchannel.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/resolver-dns.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/http_proxy.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/stream-decoder.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/subchannel-call.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/call-number.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/transport.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/subchannel-pool.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/filter-stack.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/compression-algorithms.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/filter.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/compression-filter.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/deadline.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/control-plane-status.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/load-balancing-call.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/resolving-call.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/retrying-call.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/subchannel-interface.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/internal-channel.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/channel.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/server-call.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/server-credentials.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/server.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/status-builder.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/duration.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/load-balancer-outlier-detection.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/experimental.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/resolver-uds.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/resolver-ip.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/load-balancer-pick-first.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/load-balancer-round-robin.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/index.js"],
  "sourcesContent": ["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsAstral = '[' + rsAstralRange + ']',\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n  rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n  rsUpper + '+' + rsOptUpperContr,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = camelCase;\n", "\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n", "\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n", "\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n", "\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n", "\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n", "\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n", "\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n", "\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n", "\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n", "\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n\n    if (start === end) { // fix for IE 10/Win8 and others' subarray returning array of size 1\n        var nativeBuffer = util.Buffer;\n        return nativeBuffer\n            ? nativeBuffer.alloc(0)\n            : new this.buf.constructor(0);\n    }\n    return this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n", "\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n", "\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n", "\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n", "\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n", "\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n", "\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n", "\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n", "\"use strict\";\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = require(\"./field\"),\n    util     = require(\"./util\"),\n    OneOf    = require(\"./oneof\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n\n    /**\n     * Cache lookup calls for any objects contains anywhere under this namespace.\n     * This drastically speeds up resolve for large cross-linked protos where the same\n     * types are looked up repeatedly.\n     * @type {Object.<string,ReflectionObject|null>}\n     * @private\n     */\n    this._lookupCache = {};\n\n    /**\n     * Whether or not objects contained in this namespace need feature resolution.\n     * @type {boolean}\n     * @protected\n     */\n    this._needsRecursiveFeatureResolution = true;\n\n    /**\n     * Whether or not objects contained in this namespace need a resolve.\n     * @type {boolean}\n     * @protected\n     */\n    this._needsRecursiveResolve = true;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    namespace._lookupCache = {};\n\n    // Also clear parent caches, since they include nested lookups.\n    var parent = namespace;\n    while(parent = parent.parent) {\n        parent._lookupCache = {};\n    }\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace|IOneOf}\n */\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type  || object instanceof OneOf || object instanceof Enum || object instanceof Service || object instanceof Namespace))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n\n    if (!(this instanceof Type || this instanceof Service || this instanceof Enum || this instanceof Field)) {\n        // This is a package or a root namespace.\n        if (!object._edition) {\n            // Make sure that some edition is set if it hasn't already been specified.\n            object._edition = object._defaultEdition;\n        }\n    }\n\n    this._needsRecursiveFeatureResolution = true;\n    this._needsRecursiveResolve = true;\n\n    // Also clear parent caches, since they need to recurse down.\n    var parent = this;\n    while(parent = parent.parent) {\n        parent._needsRecursiveFeatureResolution = true;\n        parent._needsRecursiveResolve = true;\n    }\n\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    if (!this._needsRecursiveResolve) return this;\n\n    this._resolveFeaturesRecursive(this._edition);\n\n    var nested = this.nestedArray, i = 0;\n    this.resolve();\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    this._needsRecursiveResolve = false;\n    return this;\n};\n\n/**\n * @override\n */\nNamespace.prototype._resolveFeaturesRecursive = function _resolveFeaturesRecursive(edition) {\n    if (!this._needsRecursiveFeatureResolution) return this;\n    this._needsRecursiveFeatureResolution = false;\n\n    edition = this._edition || edition;\n\n    ReflectionObject.prototype._resolveFeaturesRecursive.call(this, edition);\n    this.nestedArray.forEach(nested => {\n        nested._resolveFeaturesRecursive(edition);\n    });\n    return this;\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    var flatPath = path.join(\".\");\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Early bailout for objects with matching absolute paths\n    var found = this.root._fullyQualifiedObjects && this.root._fullyQualifiedObjects[\".\" + flatPath];\n    if (found && (!filterTypes || filterTypes.indexOf(found.constructor) > -1)) {\n        return found;\n    }\n\n    // Do a regular lookup at this namespace and below\n    found = this._lookupImpl(path, flatPath);\n    if (found && (!filterTypes || filterTypes.indexOf(found.constructor) > -1)) {\n        return found;\n    }\n\n    if (parentAlreadyChecked)\n        return null;\n\n    // If there hasn't been a match, walk up the tree and look more broadly\n    var current = this;\n    while (current.parent) {\n        found = current.parent._lookupImpl(path, flatPath);\n        if (found && (!filterTypes || filterTypes.indexOf(found.constructor) > -1)) {\n            return found;\n        }\n        current = current.parent;\n    }\n    return null;\n};\n\n/**\n * Internal helper for lookup that handles searching just at this namespace and below along with caching.\n * @param {string[]} path Path to look up\n * @param {string} flatPath Flattened version of the path to use as a cache key\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @private\n */\nNamespace.prototype._lookupImpl = function lookup(path, flatPath) {\n    if(Object.prototype.hasOwnProperty.call(this._lookupCache, flatPath)) {\n        return this._lookupCache[flatPath];\n    }\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    var exact = null;\n    if (found) {\n        if (path.length === 1) {\n            exact = found;\n        } else if (found instanceof Namespace) {\n            path = path.slice(1);\n            exact = found._lookupImpl(path, path.join(\".\"));\n        }\n\n    // Otherwise try each nested namespace\n    } else {\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i]._lookupImpl(path, flatPath)))\n                exact = found;\n    }\n\n    // Set this even when null, so that when we walk up the tree we can quickly bail on repeated checks back down.\n    this._lookupCache[flatPath] = exact;\n    return exact;\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n", "\"use strict\";\nmodule.exports = MapField;\n\n// extends Field\nvar Field = require(\"./field\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = require(\"./types\"),\n    util    = require(\"./util\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n", "\"use strict\";\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = require(\"./util\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Options properly parsed into an object\n     */\n    this.parsedOptions = parsedOptions;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n * @property {string} comment Method comments\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined,\n        \"parsedOptions\"  , this.parsedOptions,\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n", "\"use strict\";\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = require(\"./method\"),\n    util   = require(\"./util\"),\n    rpc    = require(\"./rpc\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    if (json.edition)\n        service._edition = json.edition;\n    service.comment = json.comment;\n    service._defaultEdition = \"proto3\";  // For backwards-compatibility.\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"edition\" , this._editionToJSON(),\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    if (!this._needsRecursiveResolve) return this;\n\n    Namespace.prototype.resolve.call(this);\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return this;\n};\n\n/**\n * @override\n */\nService.prototype._resolveFeaturesRecursive = function _resolveFeaturesRecursive(edition) {\n    if (!this._needsRecursiveFeatureResolution) return this;\n\n    edition = this._edition || edition;\n\n    Namespace.prototype._resolveFeaturesRecursive.call(this, edition);\n    this.methodsArray.forEach(method => {\n        method._resolveFeaturesRecursive(edition);\n    });\n    return this;\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n", "\"use strict\";\nmodule.exports = Message;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/", "\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(\"./enum\"),\n    types   = require(\"./types\"),\n    util    = require(\"./util\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\", \"e\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\")\n        (\"if(t===e)\")\n            (\"break\")\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i: {\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"var c2 = r.uint32()+r.pos\");\n\n            if (types.defaults[field.keyType] !== undefined) gen\n                (\"k=%j\", types.defaults[field.keyType]);\n            else gen\n                (\"k=null\");\n\n            if (types.defaults[type] !== undefined) gen\n                (\"value=%j\", types.defaults[type]);\n            else gen\n                (\"value=null\");\n\n            gen\n                (\"while(r.pos<c2){\")\n                    (\"var tag2=r.uint32()\")\n                    (\"switch(tag2>>>3){\")\n                        (\"case 1: k=r.%s(); break\", field.keyType)\n                        (\"case 2:\");\n\n            if (types.basic[type] === undefined) gen\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n            else gen\n                            (\"value=r.%s()\", type);\n\n            gen\n                            (\"break\")\n                        (\"default:\")\n                            (\"r.skipType(tag2&7)\")\n                            (\"break\")\n                    (\"}\")\n                (\"}\");\n\n            if (types.long[field.keyType] !== undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\n            else gen\n                (\"%s[k]=value\", ref);\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.delimited\n                    ? \"%s.push(types[%i].decode(r,undefined,((t&~7)|4)))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.delimited\n                ? \"%s=types[%i].decode(r,undefined,((t&~7)|4))\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\")\n            (\"}\");\n        // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n", "\"use strict\";\nmodule.exports = verifier;\n\nvar Enum      = require(\"./enum\"),\n    util      = require(\"./util\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}", "\"use strict\";\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = require(\"./enum\"),\n    util = require(\"./util\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    var defaultAlreadyEmitted = false;\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                // enum unknown values passthrough\n                if (values[keys[i]] === field.typeDefault && !defaultAlreadyEmitted) { gen\n                    (\"default:\")\n                        (\"if(typeof(d%s)===\\\"number\\\"){m%s=d%s;break}\", prop, prop, prop);\n                    if (!field.repeated) gen // fallback to default value only for\n                                             // arrays, to avoid leaving holes.\n                        (\"break\");           // for non-repeated fields, just ignore\n                    defaultAlreadyEmitted = true;\n                }\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-next-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length >= 0)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?(types[%i].values[m%s]===undefined?m%s:types[%i].values[m%s]):m%s\", prop, fieldIndex, prop, prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-next-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n", "\"use strict\";\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = require(\"./message\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n             // Only use fully qualified type name after the last '/'\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].slice(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                if (type_url.indexOf(\"/\") === -1) {\n                    type_url = \"/\" + type_url;\n                }\n                return this.create({\n                    type_url: type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // Default prefix\n        var googleApi = \"type.googleapis.com/\";\n        var prefix = \"\";\n        var name = \"\";\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            // Separate the prefix used\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            var messageName = message.$type.fullName[0] === \".\" ?\n                message.$type.fullName.slice(1) : message.$type.fullName;\n            // Default to type.googleapis.com prefix if no prefix is used\n            if (prefix === \"\") {\n                prefix = googleApi;\n            }\n            name = prefix + messageName;\n            object[\"@type\"] = name;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n", "\"use strict\";\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = require(\"./enum\"),\n    OneOf     = require(\"./oneof\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    Service   = require(\"./service\"),\n    Message   = require(\"./message\"),\n    Reader    = require(\"./reader\"),\n    Writer    = require(\"./writer\"),\n    util      = require(\"./util\"),\n    encoder   = require(\"./encoder\"),\n    decoder   = require(\"./decoder\"),\n    verifier  = require(\"./verifier\"),\n    converter = require(\"./converter\"),\n    wrappers  = require(\"./wrappers\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {Array.<number[]|string>} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    if (json.edition)\n        type._edition = json.edition;\n    type._defaultEdition = \"proto3\";  // For backwards-compatibility.\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"edition\"    , this._editionToJSON(),\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    if (!this._needsRecursiveResolve) return this;\n\n    Namespace.prototype.resolveAll.call(this);\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    return this;\n};\n\n/**\n * @override\n */\nType.prototype._resolveFeaturesRecursive = function _resolveFeaturesRecursive(edition) {\n    if (!this._needsRecursiveFeatureResolution) return this;\n\n    edition = this._edition || edition;\n\n    Namespace.prototype._resolveFeaturesRecursive.call(this, edition);\n    this.oneofsArray.forEach(oneof => {\n        oneof._resolveFeatures(edition);\n    });\n    this.fieldsArray.forEach(field => {\n        field._resolveFeatures(edition);\n    });\n    return this;\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n", "\"use strict\";\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = require(\"./field\"),\n    Enum    = require(\"./enum\"),\n    OneOf   = require(\"./oneof\"),\n    util    = require(\"./util\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n\n    /**\n     * Edition, defaults to proto2 if unspecified.\n     * @type {string}\n     * @private\n     */\n    this._edition = \"proto2\";\n\n    /**\n     * Global lookup cache of fully qualified names.\n     * @type {Object.<string,ReflectionObject>}\n     * @private\n     */\n    this._fullyQualifiedObjects = {};\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Namespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested).resolveAll();\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n/**\n * Fetch content from file path or url\n * This method exists so you can override it with your own logic.\n * @function\n * @param {string} path File path or url\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.fetch = util.fetch;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback) {\n        return util.asPromise(load, self, filename, options);\n    }\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback) {\n            return;\n        }\n        if (sync) {\n            throw err;\n        }\n        if (root) {\n            root.resolveAll();\n        }\n        var cb = callback;\n        callback = null;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued) {\n            finish(null, self); // only once anyway\n        }\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n        filename = getBundledFileName(filename) || filename;\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1) {\n            return;\n        }\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync) {\n                process(filename, common[filename]);\n            } else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            self.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback) {\n                    return; // terminated meanwhile\n                }\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename)) {\n        filename = [ filename ];\n    }\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n    if (sync) {\n        self.resolveAll();\n        return self;\n    }\n    if (!queued) {\n        finish(null, self);\n    }\n\n    return self;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (!this._needsRecursiveResolve) return this;\n\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        //do not allow to extend same field twice to prevent the error\n        if (extendedType.get(sisterField.name)) {\n            return true;\n        }\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    if (object instanceof Type || object instanceof Enum || object instanceof Field) {\n        // Only store types and enums for quick lookup during resolve.\n        this._fullyQualifiedObjects[object.fullName] = object;\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n\n    delete this._fullyQualifiedObjects[object.fullName];\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n", "\"use strict\";\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = require(\"./util/minimal\");\n\nvar roots = require(\"./roots\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = require(\"@protobufjs/codegen\");\nutil.fetch   = require(\"@protobufjs/fetch\");\nutil.path    = require(\"@protobufjs/path\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = require(\"./type\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = require(\"./enum\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n\n/**\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\n * @param {Object.<string,*>} dst Destination object\n * @param {string} path dot '.' delimited path of the property to set\n * @param {Object} value the value to set\n * @param {boolean|undefined} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {Object.<string,*>} Destination object\n */\nutil.setProperty = function setProperty(dst, path, value, ifNotSet) {\n    function setProp(dst, path, value) {\n        var part = path.shift();\n        if (part === \"__proto__\" || part === \"prototype\") {\n          return dst;\n        }\n        if (path.length > 0) {\n            dst[part] = setProp(dst[part] || {}, path, value);\n        } else {\n            var prevValue = dst[part];\n            if (prevValue && ifNotSet)\n                return dst;\n            if (prevValue)\n                value = [].concat(prevValue).concat(value);\n            dst[part] = value;\n        }\n        return dst;\n    }\n\n    if (typeof dst !== \"object\")\n        throw TypeError(\"dst must be an object\");\n    if (!path)\n        throw TypeError(\"path must be specified\");\n\n    path = path.split(\".\");\n    return setProp(dst, path, value);\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\n    }\n});\n", "\"use strict\";\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = require(\"./util\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n", "\"use strict\";\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = require(\"./enum\"),\n    types = require(\"./types\"),\n    util  = require(\"./util\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    var field = new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n    if (json.edition)\n        field._edition = json.edition;\n    field._defaultEdition = \"proto3\";  // For backwards-compatibility.\n    return field;\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    if (rule === \"proto3_optional\") {\n        rule = \"optional\";\n    }\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is required.\n * @name Field#required\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"required\", {\n    get: function() {\n        return this._features.field_presence === \"LEGACY_REQUIRED\";\n    }\n});\n\n/**\n * Determines whether this field is not required.\n * @name Field#optional\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"optional\", {\n    get: function() {\n        return !this.required;\n    }\n});\n\n/**\n * Determines whether this field uses tag-delimited encoding.  In proto2 this\n * corresponded to group syntax.\n * @name Field#delimited\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"delimited\", {\n    get: function() {\n        return this.resolvedType instanceof Type &&\n            this._features.message_encoding === \"DELIMITED\";\n    }\n});\n\n/**\n * Determines whether this field is packed. Only relevant when repeated.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        return this._features.repeated_field_encoding === \"PACKED\";\n    }\n});\n\n/**\n * Determines whether this field tracks presence.\n * @name Field#hasPresence\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"hasPresence\", {\n    get: function() {\n        if (this.repeated || this.map) {\n            return false;\n        }\n        return this.partOf || // oneofs\n            this.declaringField || this.extensionField || // extensions\n            this._features.field_presence !== \"IMPLICIT\";\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"edition\" , this._editionToJSON(),\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    } else if (this.options && this.options.proto3_optional) {\n        // proto3 scalar value marked optional; should default to null\n        this.typeDefault = null;\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Infers field features from legacy syntax that may have been specified differently.\n * in older editions.\n * @param {string|undefined} edition The edition this proto is on, or undefined if pre-editions\n * @returns {object} The feature values to override\n */\nField.prototype._inferLegacyProtoFeatures = function _inferLegacyProtoFeatures(edition) {\n    if (edition !== \"proto2\" && edition !== \"proto3\") {\n        return {};\n    }\n\n    var features = {};\n\n    if (this.rule === \"required\") {\n        features.field_presence = \"LEGACY_REQUIRED\";\n    }\n    if (this.parent && types.defaults[this.type] === undefined) {\n        // We can't use resolvedType because types may not have been resolved yet.  However,\n        // legacy groups are always in the same scope as the field so we don't have to do a\n        // full scan of the tree.\n        var type = this.parent.get(this.type.split(\".\").pop());\n        if (type && type instanceof Type && type.group) {\n            features.message_encoding = \"DELIMITED\";\n        }\n    }\n    if (this.getOption(\"packed\") === true) {\n        features.repeated_field_encoding = \"PACKED\";\n    } else if (this.getOption(\"packed\") === false) {\n        features.repeated_field_encoding = \"EXPANDED\";\n    }\n    return features;\n};\n\n/**\n * @override\n */\nField.prototype._resolveFeatures = function _resolveFeatures(edition) {\n    return ReflectionObject.prototype._resolveFeatures.call(this, this._edition || edition);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n", "\"use strict\";\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(\"./field\"),\n    util  = require(\"./util\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Determines whether this field corresponds to a synthetic oneof created for\n * a proto3 optional field.  No behavioral logic should depend on this, but it\n * can be relevant for reflection.\n * @name OneOf#isProto3Optional\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(OneOf.prototype, \"isProto3Optional\", {\n    get: function() {\n        if (this.fieldsArray == null || this.fieldsArray.length !== 1) {\n            return false;\n        }\n\n        var field = this.fieldsArray[0];\n        return field.options != null && field.options[\"proto3_optional\"] === true;\n    }\n});\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n", "\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nconst OneOf = require(\"./oneof\");\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/* eslint-disable no-warning-comments */\n// TODO: Replace with embedded proto.\nvar editions2023Defaults = {enum_type: \"OPEN\", field_presence: \"EXPLICIT\", json_format: \"ALLOW\", message_encoding: \"LENGTH_PREFIXED\", repeated_field_encoding: \"PACKED\", utf8_validation: \"VERIFY\"};\nvar proto2Defaults = {enum_type: \"CLOSED\", field_presence: \"EXPLICIT\", json_format: \"LEGACY_BEST_EFFORT\", message_encoding: \"LENGTH_PREFIXED\", repeated_field_encoding: \"EXPANDED\", utf8_validation: \"NONE\"};\nvar proto3Defaults = {enum_type: \"OPEN\", field_presence: \"IMPLICIT\", json_format: \"ALLOW\", message_encoding: \"LENGTH_PREFIXED\", repeated_field_encoding: \"PACKED\", utf8_validation: \"VERIFY\"};\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * The edition specified for this object.  Only relevant for top-level objects.\n     * @type {string}\n     * @private\n     */\n    this._edition = null;\n\n    /**\n     * The default edition to use for this object if none is specified.  For legacy reasons,\n     * this is proto2 except in the JSON parsing case where it was proto3.\n     * @type {string}\n     * @private\n     */\n    this._defaultEdition = \"proto2\";\n\n    /**\n     * Resolved Features.\n     * @type {object}\n     * @private\n     */\n    this._features = {};\n\n    /**\n     * Whether or not features have been resolved.\n     * @type {boolean}\n     * @private\n     */\n    this._featuresResolved = false;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Resolves this objects editions features.\n * @param {string} edition The edition we're currently resolving for.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype._resolveFeaturesRecursive = function _resolveFeaturesRecursive(edition) {\n    return this._resolveFeatures(this._edition || edition);\n};\n\n/**\n * Resolves child features from parent features\n * @param {string} edition The edition we're currently resolving for.\n * @returns {undefined}\n */\nReflectionObject.prototype._resolveFeatures = function _resolveFeatures(edition) {\n    if (this._featuresResolved) {\n        return;\n    }\n\n    var defaults = {};\n\n    /* istanbul ignore if */\n    if (!edition) {\n        throw new Error(\"Unknown edition for \" + this.fullName);\n    }\n\n    var protoFeatures = Object.assign(this.options ? Object.assign({},  this.options.features) : {},\n        this._inferLegacyProtoFeatures(edition));\n\n    if (this._edition) {\n        // For a namespace marked with a specific edition, reset defaults.\n        /* istanbul ignore else */\n        if (edition === \"proto2\") {\n            defaults = Object.assign({}, proto2Defaults);\n        } else if (edition === \"proto3\") {\n            defaults = Object.assign({}, proto3Defaults);\n        } else if (edition === \"2023\") {\n            defaults = Object.assign({}, editions2023Defaults);\n        } else {\n            throw new Error(\"Unknown edition: \" + edition);\n        }\n        this._features = Object.assign(defaults, protoFeatures || {});\n        this._featuresResolved = true;\n        return;\n    }\n\n    // fields in Oneofs aren't actually children of them, so we have to\n    // special-case it\n    /* istanbul ignore else */\n    if (this.partOf instanceof OneOf) {\n        var lexicalParentFeaturesCopy = Object.assign({}, this.partOf._features);\n        this._features = Object.assign(lexicalParentFeaturesCopy, protoFeatures || {});\n    } else if (this.declaringField) {\n        // Skip feature resolution of sister fields.\n    } else if (this.parent) {\n        var parentFeaturesCopy = Object.assign({}, this.parent._features);\n        this._features = Object.assign(parentFeaturesCopy, protoFeatures || {});\n    } else {\n        throw new Error(\"Unable to find a parent for \" + this.fullName);\n    }\n    if (this.extensionField) {\n        // Sister fields should have the same features as their extensions.\n        this.extensionField._features = this._features;\n    }\n    this._featuresResolved = true;\n};\n\n/**\n * Infers features from legacy syntax that may have been specified differently.\n * in older editions.\n * @param {string|undefined} edition The edition this proto is on, or undefined if pre-editions\n * @returns {object} The feature values to override\n */\nReflectionObject.prototype._inferLegacyProtoFeatures = function _inferLegacyProtoFeatures(/*edition*/) {\n    return {};\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean|undefined} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!this.options)\n        this.options = {};\n    if (/^features\\./.test(name)) {\n        util.setProperty(this.options, name, value, ifNotSet);\n    } else if (!ifNotSet || this.options[name] === undefined) {\n        if (this.getOption(name) !== value) this.resolved = false;\n        this.options[name] = value;\n    }\n\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            // (If it's a feature, will just write over)\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set its property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n/**\n * Converts the edition this object is pinned to for JSON format.\n * @returns {string|undefined} The edition string for JSON representation\n */\nReflectionObject.prototype._editionToJSON = function _editionToJSON() {\n    if (!this._edition || this._edition === \"proto3\") {\n        // Avoid emitting proto3 since we need to default to it for backwards\n        // compatibility anyway.\n        return undefined;\n    }\n    return this._edition;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n", "\"use strict\";\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = require(\"./namespace\"),\n    util = require(\"./util\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n * @param {Object.<string,Object<string,*>>|undefined} [valuesOptions] The value options for this enum\n */\nfunction Enum(name, values, options, comment, comments, valuesOptions) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Values options, if any\n     * @type {Object<string, Object<string, *>>|undefined}\n     */\n    this.valuesOptions = valuesOptions;\n\n    /**\n     * Resolved values features, if any\n     * @type {Object<string, Object<string, *>>|undefined}\n     */\n    this._valuesFeatures = {};\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * @override\n */\nEnum.prototype._resolveFeatures = function _resolveFeatures(edition) {\n    edition = this._edition || edition;\n    ReflectionObject.prototype._resolveFeatures.call(this, edition);\n\n    Object.keys(this.values).forEach(key => {\n        var parentFeaturesCopy = Object.assign({}, this._features);\n        this._valuesFeatures[key] = Object.assign(parentFeaturesCopy, this.valuesOptions && this.valuesOptions[key] && this.valuesOptions[key].features);\n    });\n\n    return this;\n};\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    if (json.edition)\n        enm._edition = json.edition;\n    enm._defaultEdition = \"proto3\";  // For backwards-compatibility.\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"edition\"       , this._editionToJSON(),\n        \"options\"       , this.options,\n        \"valuesOptions\" , this.valuesOptions,\n        \"values\"        , this.values,\n        \"reserved\"      , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"       , keepComments ? this.comment : undefined,\n        \"comments\"      , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @param {Object.<string, *>|undefined} [options] Options, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment, options) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    if (options) {\n        if (this.valuesOptions === undefined)\n            this.valuesOptions = {};\n        this.valuesOptions[name] = options || null;\n    }\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n    if (this.valuesOptions)\n        delete this.valuesOptions[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n", "\"use strict\";\nmodule.exports = encoder;\n\nvar Enum     = require(\"./enum\"),\n    types    = require(\"./types\"),\n    util     = require(\"./util\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.delimited\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n", "\"use strict\";\nvar protobuf = module.exports = require(\"./index-minimal\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = require(\"./encoder\");\nprotobuf.decoder          = require(\"./decoder\");\nprotobuf.verifier         = require(\"./verifier\");\nprotobuf.converter        = require(\"./converter\");\n\n// Reflection\nprotobuf.ReflectionObject = require(\"./object\");\nprotobuf.Namespace        = require(\"./namespace\");\nprotobuf.Root             = require(\"./root\");\nprotobuf.Enum             = require(\"./enum\");\nprotobuf.Type             = require(\"./type\");\nprotobuf.Field            = require(\"./field\");\nprotobuf.OneOf            = require(\"./oneof\");\nprotobuf.MapField         = require(\"./mapfield\");\nprotobuf.Service          = require(\"./service\");\nprotobuf.Method           = require(\"./method\");\n\n// Runtime\nprotobuf.Message          = require(\"./message\");\nprotobuf.wrappers         = require(\"./wrappers\");\n\n// Utility\nprotobuf.types            = require(\"./types\");\nprotobuf.util             = require(\"./util\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n", "\"use strict\";\nmodule.exports = tokenize;\n\nvar delimRe        = /[\\s{}=;:[\\],'\"()<>]/g,\n    stringDoubleRe = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\n    stringSingleRe = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g;\n\nvar setCommentRe = /^ *[*/]+ */,\n    setCommentAltRe = /^\\s*\\*?\\/*/,\n    setCommentSplitRe = /\\n/g,\n    whitespaceRe = /\\s/,\n    unescapeRe = /\\\\(.?)/g;\n\nvar unescapeMap = {\n    \"0\": \"\\0\",\n    \"r\": \"\\r\",\n    \"n\": \"\\n\",\n    \"t\": \"\\t\"\n};\n\n/**\n * Unescapes a string.\n * @param {string} str String to unescape\n * @returns {string} Unescaped string\n * @property {Object.<string,string>} map Special characters map\n * @memberof tokenize\n */\nfunction unescape(str) {\n    return str.replace(unescapeRe, function($0, $1) {\n        switch ($1) {\n            case \"\\\\\":\n            case \"\":\n                return $1;\n            default:\n                return unescapeMap[$1] || \"\";\n        }\n    });\n}\n\ntokenize.unescape = unescape;\n\n/**\n * Gets the next token and advances.\n * @typedef TokenizerHandleNext\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Peeks for the next token.\n * @typedef TokenizerHandlePeek\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Pushes a token back to the stack.\n * @typedef TokenizerHandlePush\n * @type {function}\n * @param {string} token Token\n * @returns {undefined}\n */\n\n/**\n * Skips the next token.\n * @typedef TokenizerHandleSkip\n * @type {function}\n * @param {string} expected Expected token\n * @param {boolean} [optional=false] If optional\n * @returns {boolean} Whether the token matched\n * @throws {Error} If the token didn't match and is not optional\n */\n\n/**\n * Gets the comment on the previous line or, alternatively, the line comment on the specified line.\n * @typedef TokenizerHandleCmnt\n * @type {function}\n * @param {number} [line] Line number\n * @returns {string|null} Comment text or `null` if none\n */\n\n/**\n * Handle object returned from {@link tokenize}.\n * @interface ITokenizerHandle\n * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)\n * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)\n * @property {TokenizerHandlePush} push Pushes a token back to the stack\n * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws\n * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any\n * @property {number} line Current line number\n */\n\n/**\n * Tokenizes the given .proto source and returns an object with useful utility functions.\n * @param {string} source Source contents\n * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.\n * @returns {ITokenizerHandle} Tokenizer handle\n */\nfunction tokenize(source, alternateCommentMode) {\n    /* eslint-disable callback-return */\n    source = source.toString();\n\n    var offset = 0,\n        length = source.length,\n        line = 1,\n        lastCommentLine = 0,\n        comments = {};\n\n    var stack = [];\n\n    var stringDelim = null;\n\n    /* istanbul ignore next */\n    /**\n     * Creates an error for illegal syntax.\n     * @param {string} subject Subject\n     * @returns {Error} Error created\n     * @inner\n     */\n    function illegal(subject) {\n        return Error(\"illegal \" + subject + \" (line \" + line + \")\");\n    }\n\n    /**\n     * Reads a string till its end.\n     * @returns {string} String read\n     * @inner\n     */\n    function readString() {\n        var re = stringDelim === \"'\" ? stringSingleRe : stringDoubleRe;\n        re.lastIndex = offset - 1;\n        var match = re.exec(source);\n        if (!match)\n            throw illegal(\"string\");\n        offset = re.lastIndex;\n        push(stringDelim);\n        stringDelim = null;\n        return unescape(match[1]);\n    }\n\n    /**\n     * Gets the character at `pos` within the source.\n     * @param {number} pos Position\n     * @returns {string} Character\n     * @inner\n     */\n    function charAt(pos) {\n        return source.charAt(pos);\n    }\n\n    /**\n     * Sets the current comment text.\n     * @param {number} start Start offset\n     * @param {number} end End offset\n     * @param {boolean} isLeading set if a leading comment\n     * @returns {undefined}\n     * @inner\n     */\n    function setComment(start, end, isLeading) {\n        var comment = {\n            type: source.charAt(start++),\n            lineEmpty: false,\n            leading: isLeading,\n        };\n        var lookback;\n        if (alternateCommentMode) {\n            lookback = 2;  // alternate comment parsing: \"//\" or \"/*\"\n        } else {\n            lookback = 3;  // \"///\" or \"/**\"\n        }\n        var commentOffset = start - lookback,\n            c;\n        do {\n            if (--commentOffset < 0 ||\n                    (c = source.charAt(commentOffset)) === \"\\n\") {\n                comment.lineEmpty = true;\n                break;\n            }\n        } while (c === \" \" || c === \"\\t\");\n        var lines = source\n            .substring(start, end)\n            .split(setCommentSplitRe);\n        for (var i = 0; i < lines.length; ++i)\n            lines[i] = lines[i]\n                .replace(alternateCommentMode ? setCommentAltRe : setCommentRe, \"\")\n                .trim();\n        comment.text = lines\n            .join(\"\\n\")\n            .trim();\n\n        comments[line] = comment;\n        lastCommentLine = line;\n    }\n\n    function isDoubleSlashCommentLine(startOffset) {\n        var endOffset = findEndOfLine(startOffset);\n\n        // see if remaining line matches comment pattern\n        var lineText = source.substring(startOffset, endOffset);\n        var isComment = /^\\s*\\/\\//.test(lineText);\n        return isComment;\n    }\n\n    function findEndOfLine(cursor) {\n        // find end of cursor's line\n        var endOffset = cursor;\n        while (endOffset < length && charAt(endOffset) !== \"\\n\") {\n            endOffset++;\n        }\n        return endOffset;\n    }\n\n    /**\n     * Obtains the next token.\n     * @returns {string|null} Next token or `null` on eof\n     * @inner\n     */\n    function next() {\n        if (stack.length > 0)\n            return stack.shift();\n        if (stringDelim)\n            return readString();\n        var repeat,\n            prev,\n            curr,\n            start,\n            isDoc,\n            isLeadingComment = offset === 0;\n        do {\n            if (offset === length)\n                return null;\n            repeat = false;\n            while (whitespaceRe.test(curr = charAt(offset))) {\n                if (curr === \"\\n\") {\n                    isLeadingComment = true;\n                    ++line;\n                }\n                if (++offset === length)\n                    return null;\n            }\n\n            if (charAt(offset) === \"/\") {\n                if (++offset === length) {\n                    throw illegal(\"comment\");\n                }\n                if (charAt(offset) === \"/\") { // Line\n                    if (!alternateCommentMode) {\n                        // check for triple-slash comment\n                        isDoc = charAt(start = offset + 1) === \"/\";\n\n                        while (charAt(++offset) !== \"\\n\") {\n                            if (offset === length) {\n                                return null;\n                            }\n                        }\n                        ++offset;\n                        if (isDoc) {\n                            setComment(start, offset - 1, isLeadingComment);\n                            // Trailing comment cannot not be multi-line,\n                            // so leading comment state should be reset to handle potential next comments\n                            isLeadingComment = true;\n                        }\n                        ++line;\n                        repeat = true;\n                    } else {\n                        // check for double-slash comments, consolidating consecutive lines\n                        start = offset;\n                        isDoc = false;\n                        if (isDoubleSlashCommentLine(offset - 1)) {\n                            isDoc = true;\n                            do {\n                                offset = findEndOfLine(offset);\n                                if (offset === length) {\n                                    break;\n                                }\n                                offset++;\n                                if (!isLeadingComment) {\n                                    // Trailing comment cannot not be multi-line\n                                    break;\n                                }\n                            } while (isDoubleSlashCommentLine(offset));\n                        } else {\n                            offset = Math.min(length, findEndOfLine(offset) + 1);\n                        }\n                        if (isDoc) {\n                            setComment(start, offset, isLeadingComment);\n                            isLeadingComment = true;\n                        }\n                        line++;\n                        repeat = true;\n                    }\n                } else if ((curr = charAt(offset)) === \"*\") { /* Block */\n                    // check for /** (regular comment mode) or /* (alternate comment mode)\n                    start = offset + 1;\n                    isDoc = alternateCommentMode || charAt(start) === \"*\";\n                    do {\n                        if (curr === \"\\n\") {\n                            ++line;\n                        }\n                        if (++offset === length) {\n                            throw illegal(\"comment\");\n                        }\n                        prev = curr;\n                        curr = charAt(offset);\n                    } while (prev !== \"*\" || curr !== \"/\");\n                    ++offset;\n                    if (isDoc) {\n                        setComment(start, offset - 2, isLeadingComment);\n                        isLeadingComment = true;\n                    }\n                    repeat = true;\n                } else {\n                    return \"/\";\n                }\n            }\n        } while (repeat);\n\n        // offset !== length if we got here\n\n        var end = offset;\n        delimRe.lastIndex = 0;\n        var delim = delimRe.test(charAt(end++));\n        if (!delim)\n            while (end < length && !delimRe.test(charAt(end)))\n                ++end;\n        var token = source.substring(offset, offset = end);\n        if (token === \"\\\"\" || token === \"'\")\n            stringDelim = token;\n        return token;\n    }\n\n    /**\n     * Pushes a token back to the stack.\n     * @param {string} token Token\n     * @returns {undefined}\n     * @inner\n     */\n    function push(token) {\n        stack.push(token);\n    }\n\n    /**\n     * Peeks for the next token.\n     * @returns {string|null} Token or `null` on eof\n     * @inner\n     */\n    function peek() {\n        if (!stack.length) {\n            var token = next();\n            if (token === null)\n                return null;\n            push(token);\n        }\n        return stack[0];\n    }\n\n    /**\n     * Skips a token.\n     * @param {string} expected Expected token\n     * @param {boolean} [optional=false] Whether the token is optional\n     * @returns {boolean} `true` when skipped, `false` if not\n     * @throws {Error} When a required token is not present\n     * @inner\n     */\n    function skip(expected, optional) {\n        var actual = peek(),\n            equals = actual === expected;\n        if (equals) {\n            next();\n            return true;\n        }\n        if (!optional)\n            throw illegal(\"token '\" + actual + \"', '\" + expected + \"' expected\");\n        return false;\n    }\n\n    /**\n     * Gets a comment.\n     * @param {number} [trailingLine] Line number if looking for a trailing comment\n     * @returns {string|null} Comment text\n     * @inner\n     */\n    function cmnt(trailingLine) {\n        var ret = null;\n        var comment;\n        if (trailingLine === undefined) {\n            comment = comments[line - 1];\n            delete comments[line - 1];\n            if (comment && (alternateCommentMode || comment.type === \"*\" || comment.lineEmpty)) {\n                ret = comment.leading ? comment.text : null;\n            }\n        } else {\n            /* istanbul ignore else */\n            if (lastCommentLine < trailingLine) {\n                peek();\n            }\n            comment = comments[trailingLine];\n            delete comments[trailingLine];\n            if (comment && !comment.lineEmpty && (alternateCommentMode || comment.type === \"/\")) {\n                ret = comment.leading ? null : comment.text;\n            }\n        }\n        return ret;\n    }\n\n    return Object.defineProperty({\n        next: next,\n        peek: peek,\n        push: push,\n        skip: skip,\n        cmnt: cmnt\n    }, \"line\", {\n        get: function() { return line; }\n    });\n    /* eslint-enable callback-return */\n}\n", "\"use strict\";\nmodule.exports = parse;\n\nparse.filename = null;\nparse.defaults = { keepCase: false };\n\nvar tokenize  = require(\"./tokenize\"),\n    Root      = require(\"./root\"),\n    Type      = require(\"./type\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    OneOf     = require(\"./oneof\"),\n    Enum      = require(\"./enum\"),\n    Service   = require(\"./service\"),\n    Method    = require(\"./method\"),\n    ReflectionObject = require(\"./object\"),\n    types     = require(\"./types\"),\n    util      = require(\"./util\");\n\nvar base10Re    = /^[1-9][0-9]*$/,\n    base10NegRe = /^-?[1-9][0-9]*$/,\n    base16Re    = /^0[x][0-9a-fA-F]+$/,\n    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,\n    base8Re     = /^0[0-7]+$/,\n    base8NegRe  = /^-?0[0-7]+$/,\n    numberRe    = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\n    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\n    typeRefRe   = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/;\n\n/**\n * Result object returned from {@link parse}.\n * @interface IParserResult\n * @property {string|undefined} package Package name, if declared\n * @property {string[]|undefined} imports Imports, if any\n * @property {string[]|undefined} weakImports Weak imports, if any\n * @property {Root} root Populated root instance\n */\n\n/**\n * Options modifying the behavior of {@link parse}.\n * @interface IParseOptions\n * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case\n * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.\n * @property {boolean} [preferTrailingComment=false] Use trailing comment when both leading comment and trailing comment exist.\n */\n\n/**\n * Options modifying the behavior of JSON serialization.\n * @interface IToJSONOptions\n * @property {boolean} [keepComments=false] Serializes comments.\n */\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @param {string} source Source contents\n * @param {Root} root Root to populate\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n */\nfunction parse(source, root, options) {\n    /* eslint-disable callback-return */\n    if (!(root instanceof Root)) {\n        options = root;\n        root = new Root();\n    }\n    if (!options)\n        options = parse.defaults;\n\n    var preferTrailingComment = options.preferTrailingComment || false;\n    var tn = tokenize(source, options.alternateCommentMode || false),\n        next = tn.next,\n        push = tn.push,\n        peek = tn.peek,\n        skip = tn.skip,\n        cmnt = tn.cmnt;\n\n    var head = true,\n        pkg,\n        imports,\n        weakImports,\n        edition = \"proto2\";\n\n    var ptr = root;\n\n    var topLevelObjects = [];\n    var topLevelOptions = {};\n\n    var applyCase = options.keepCase ? function(name) { return name; } : util.camelCase;\n\n    function resolveFileFeatures() {\n        topLevelObjects.forEach(obj => {\n            obj._edition = edition;\n            Object.keys(topLevelOptions).forEach(opt => {\n                if (obj.getOption(opt) !== undefined) return;\n                obj.setOption(opt, topLevelOptions[opt], true);\n            });\n        });\n    }\n\n    /* istanbul ignore next */\n    function illegal(token, name, insideTryCatch) {\n        var filename = parse.filename;\n        if (!insideTryCatch)\n            parse.filename = null;\n        return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line + \")\");\n    }\n\n    function readString() {\n        var values = [],\n            token;\n        do {\n            /* istanbul ignore if */\n            if ((token = next()) !== \"\\\"\" && token !== \"'\")\n                throw illegal(token);\n\n            values.push(next());\n            skip(token);\n            token = peek();\n        } while (token === \"\\\"\" || token === \"'\");\n        return values.join(\"\");\n    }\n\n    function readValue(acceptTypeRef) {\n        var token = next();\n        switch (token) {\n            case \"'\":\n            case \"\\\"\":\n                push(token);\n                return readString();\n            case \"true\": case \"TRUE\":\n                return true;\n            case \"false\": case \"FALSE\":\n                return false;\n        }\n        try {\n            return parseNumber(token, /* insideTryCatch */ true);\n        } catch (e) {\n            /* istanbul ignore else */\n            if (acceptTypeRef && typeRefRe.test(token))\n                return token;\n\n            /* istanbul ignore next */\n            throw illegal(token, \"value\");\n        }\n    }\n\n    function readRanges(target, acceptStrings) {\n        var token, start;\n        do {\n            if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\")) {\n                var str = readString();\n                target.push(str);\n                if (edition >= 2023) {\n                    throw illegal(str, \"id\");\n                }\n            } else {\n                try {\n                    target.push([ start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start ]);\n                } catch (err) {\n                    if (acceptStrings && typeRefRe.test(token) && edition >= 2023) {\n                        target.push(token);\n                    } else {\n                        throw err;\n                    }\n                }\n            }\n        } while (skip(\",\", true));\n        var dummy = {options: undefined};\n        dummy.setOption = function(name, value) {\n          if (this.options === undefined) this.options = {};\n          this.options[name] = value;\n        };\n        ifBlock(\n            dummy,\n            function parseRange_block(token) {\n              /* istanbul ignore else */\n              if (token === \"option\") {\n                parseOption(dummy, token);  // skip\n                skip(\";\");\n              } else\n                throw illegal(token);\n            },\n            function parseRange_line() {\n              parseInlineOptions(dummy);  // skip\n            });\n    }\n\n    function parseNumber(token, insideTryCatch) {\n        var sign = 1;\n        if (token.charAt(0) === \"-\") {\n            sign = -1;\n            token = token.substring(1);\n        }\n        switch (token) {\n            case \"inf\": case \"INF\": case \"Inf\":\n                return sign * Infinity;\n            case \"nan\": case \"NAN\": case \"Nan\": case \"NaN\":\n                return NaN;\n            case \"0\":\n                return 0;\n        }\n        if (base10Re.test(token))\n            return sign * parseInt(token, 10);\n        if (base16Re.test(token))\n            return sign * parseInt(token, 16);\n        if (base8Re.test(token))\n            return sign * parseInt(token, 8);\n\n        /* istanbul ignore else */\n        if (numberRe.test(token))\n            return sign * parseFloat(token);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"number\", insideTryCatch);\n    }\n\n    function parseId(token, acceptNegative) {\n        switch (token) {\n            case \"max\": case \"MAX\": case \"Max\":\n                return 536870911;\n            case \"0\":\n                return 0;\n        }\n\n        /* istanbul ignore if */\n        if (!acceptNegative && token.charAt(0) === \"-\")\n            throw illegal(token, \"id\");\n\n        if (base10NegRe.test(token))\n            return parseInt(token, 10);\n        if (base16NegRe.test(token))\n            return parseInt(token, 16);\n\n        /* istanbul ignore else */\n        if (base8NegRe.test(token))\n            return parseInt(token, 8);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"id\");\n    }\n\n    function parsePackage() {\n        /* istanbul ignore if */\n        if (pkg !== undefined)\n            throw illegal(\"package\");\n\n        pkg = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(pkg))\n            throw illegal(pkg, \"name\");\n\n        ptr = ptr.define(pkg);\n\n        skip(\";\");\n    }\n\n    function parseImport() {\n        var token = peek();\n        var whichImports;\n        switch (token) {\n            case \"weak\":\n                whichImports = weakImports || (weakImports = []);\n                next();\n                break;\n            case \"public\":\n                next();\n                // eslint-disable-next-line no-fallthrough\n            default:\n                whichImports = imports || (imports = []);\n                break;\n        }\n        token = readString();\n        skip(\";\");\n        whichImports.push(token);\n    }\n\n    function parseSyntax() {\n        skip(\"=\");\n        edition = readString();\n\n        /* istanbul ignore if */\n        if (edition < 2023)\n            throw illegal(edition, \"syntax\");\n\n        skip(\";\");\n    }\n\n    function parseEdition() {\n        skip(\"=\");\n        edition = readString();\n        const supportedEditions = [\"2023\"];\n\n        /* istanbul ignore if */\n        if (!supportedEditions.includes(edition))\n            throw illegal(edition, \"edition\");\n\n        skip(\";\");\n    }\n\n\n    function parseCommon(parent, token) {\n        switch (token) {\n\n            case \"option\":\n                parseOption(parent, token);\n                skip(\";\");\n                return true;\n\n            case \"message\":\n                parseType(parent, token);\n                return true;\n\n            case \"enum\":\n                parseEnum(parent, token);\n                return true;\n\n            case \"service\":\n                parseService(parent, token);\n                return true;\n\n            case \"extend\":\n                parseExtension(parent, token);\n                return true;\n        }\n        return false;\n    }\n\n    function ifBlock(obj, fnIf, fnElse) {\n        var trailingLine = tn.line;\n        if (obj) {\n            if(typeof obj.comment !== \"string\") {\n              obj.comment = cmnt(); // try block-type comment\n            }\n            obj.filename = parse.filename;\n        }\n        if (skip(\"{\", true)) {\n            var token;\n            while ((token = next()) !== \"}\")\n                fnIf(token);\n            skip(\";\", true);\n        } else {\n            if (fnElse)\n                fnElse();\n            skip(\";\");\n            if (obj && (typeof obj.comment !== \"string\" || preferTrailingComment))\n                obj.comment = cmnt(trailingLine) || obj.comment; // try line-type comment\n        }\n    }\n\n    function parseType(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"type name\");\n\n        var type = new Type(token);\n        ifBlock(type, function parseType_block(token) {\n            if (parseCommon(type, token))\n                return;\n\n            switch (token) {\n\n                case \"map\":\n                    parseMapField(type, token);\n                    break;\n\n                case \"required\":\n                    if (edition !== \"proto2\")\n                        throw illegal(token);\n                /* eslint-disable no-fallthrough */\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (edition === \"proto3\") {\n                        parseField(type, \"proto3_optional\");\n                    } else if (edition !== \"proto2\") {\n                        throw illegal(token);\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"oneof\":\n                    parseOneOf(type, token);\n                    break;\n\n                case \"extensions\":\n                    readRanges(type.extensions || (type.extensions = []));\n                    break;\n\n                case \"reserved\":\n                    readRanges(type.reserved || (type.reserved = []), true);\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (edition === \"proto2\" || !typeRefRe.test(token)) {\n                        throw illegal(token);\n                    }\n\n                    push(token);\n                    parseField(type, \"optional\");\n                    break;\n            }\n        });\n        parent.add(type);\n        if (parent === ptr) {\n            topLevelObjects.push(type);\n        }\n    }\n\n    function parseField(parent, rule, extend) {\n        var type = next();\n        if (type === \"group\") {\n            parseGroup(parent, rule);\n            return;\n        }\n        // Type names can consume multiple tokens, in multiple variants:\n        //    package.subpackage   field       tokens: \"package.subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package . subpackage field       tokens: \"package\" \".\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package.  subpackage field       tokens: \"package.\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package  .subpackage field       tokens: \"package\" \".subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        // Keep reading tokens until we get a type name with no period at the end,\n        // and the next token does not start with a period.\n        while (type.endsWith(\".\") || peek().startsWith(\".\")) {\n            type += next();\n        }\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(type))\n            throw illegal(type, \"type\");\n\n        var name = next();\n\n        /* istanbul ignore if */\n\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        name = applyCase(name);\n        skip(\"=\");\n\n        var field = new Field(name, parseId(next()), type, rule, extend);\n\n        ifBlock(field, function parseField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseField_line() {\n            parseInlineOptions(field);\n        });\n\n        if (rule === \"proto3_optional\") {\n            // for proto3 optional fields, we create a single-member Oneof to mimic \"optional\" behavior\n            var oneof = new OneOf(\"_\" + name);\n            field.setOption(\"proto3_optional\", true);\n            oneof.add(field);\n            parent.add(oneof);\n        } else {\n            parent.add(field);\n        }\n        if (parent === ptr) {\n            topLevelObjects.push(field);\n        }\n    }\n\n    function parseGroup(parent, rule) {\n        if (edition >= 2023) {\n            throw illegal(\"group\");\n        }\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        var fieldName = util.lcFirst(name);\n        if (name === fieldName)\n            name = util.ucFirst(name);\n        skip(\"=\");\n        var id = parseId(next());\n        var type = new Type(name);\n        type.group = true;\n        var field = new Field(fieldName, id, name, rule);\n        field.filename = parse.filename;\n        ifBlock(type, function parseGroup_block(token) {\n            switch (token) {\n\n                case \"option\":\n                    parseOption(type, token);\n                    skip(\";\");\n                    break;\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (edition === \"proto3\") {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"message\":\n                    parseType(type, token);\n                    break;\n\n                case \"enum\":\n                    parseEnum(type, token);\n                    break;\n\n                case \"reserved\":\n                    readRanges(type.reserved || (type.reserved = []), true);\n                    break;\n\n                /* istanbul ignore next */\n                default:\n                    throw illegal(token); // there are no groups with proto3 semantics\n            }\n        });\n        parent.add(type)\n              .add(field);\n    }\n\n    function parseMapField(parent) {\n        skip(\"<\");\n        var keyType = next();\n\n        /* istanbul ignore if */\n        if (types.mapKey[keyType] === undefined)\n            throw illegal(keyType, \"type\");\n\n        skip(\",\");\n        var valueType = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(valueType))\n            throw illegal(valueType, \"type\");\n\n        skip(\">\");\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        skip(\"=\");\n        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);\n        ifBlock(field, function parseMapField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseMapField_line() {\n            parseInlineOptions(field);\n        });\n        parent.add(field);\n    }\n\n    function parseOneOf(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var oneof = new OneOf(applyCase(token));\n        ifBlock(oneof, function parseOneOf_block(token) {\n            if (token === \"option\") {\n                parseOption(oneof, token);\n                skip(\";\");\n            } else {\n                push(token);\n                parseField(oneof, \"optional\");\n            }\n        });\n        parent.add(oneof);\n    }\n\n    function parseEnum(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var enm = new Enum(token);\n        ifBlock(enm, function parseEnum_block(token) {\n          switch(token) {\n            case \"option\":\n              parseOption(enm, token);\n              skip(\";\");\n              break;\n\n            case \"reserved\":\n              readRanges(enm.reserved || (enm.reserved = []), true);\n              if(enm.reserved === undefined) enm.reserved = [];\n              break;\n\n            default:\n              parseEnumValue(enm, token);\n          }\n        });\n        parent.add(enm);\n        if (parent === ptr) {\n            topLevelObjects.push(enm);\n        }\n    }\n\n    function parseEnumValue(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token))\n            throw illegal(token, \"name\");\n\n        skip(\"=\");\n        var value = parseId(next(), true),\n            dummy = {\n                options: undefined\n            };\n        dummy.getOption = function(name) {\n            return this.options[name];\n        };\n        dummy.setOption = function(name, value) {\n            ReflectionObject.prototype.setOption.call(dummy, name, value);\n        };\n        dummy.setParsedOption = function() {\n            return undefined;\n        };\n        ifBlock(dummy, function parseEnumValue_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(dummy, token); // skip\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseEnumValue_line() {\n            parseInlineOptions(dummy); // skip\n        });\n        parent.add(token, value, dummy.comment, dummy.parsedOptions || dummy.options);\n    }\n\n    function parseOption(parent, token) {\n            var option;\n            var propName;\n            var isOption = true;\n            if (token === \"option\") {\n                token = next();\n            }\n\n            while (token !== \"=\") {\n                if (token === \"(\") {\n                    var parensValue = next();\n                    skip(\")\");\n                    token = \"(\" + parensValue + \")\";\n                }\n                if (isOption) {\n                    isOption = false;\n                    if (token.includes(\".\") && !token.includes(\"(\")) {\n                        var tokens = token.split(\".\");\n                        option = tokens[0] + \".\";\n                        token = tokens[1];\n                        continue;\n                    }\n                    option = token;\n                } else {\n                    propName = propName ? propName += token : token;\n                }\n                token = next();\n            }\n            var name = propName ? option.concat(propName) : option;\n            var optionValue = parseOptionValue(parent, name);\n            propName = propName && propName[0] === \".\" ? propName.slice(1) : propName;\n            option = option && option[option.length - 1] === \".\" ? option.slice(0, -1) : option;\n            setParsedOption(parent, option, optionValue, propName);\n    }\n\n    function parseOptionValue(parent, name) {\n        // { a: \"foo\" b { c: \"bar\" } }\n        if (skip(\"{\", true)) {\n            var objectResult = {};\n\n            while (!skip(\"}\", true)) {\n                /* istanbul ignore if */\n                if (!nameRe.test(token = next())) {\n                    throw illegal(token, \"name\");\n                }\n                if (token === null) {\n                  throw illegal(token, \"end of input\");\n                }\n\n                var value;\n                var propName = token;\n\n                skip(\":\", true);\n\n                if (peek() === \"{\") {\n                    // option (my_option) = {\n                    //     repeated_value: [ \"foo\", \"bar\" ]\n                    // };\n                    value = parseOptionValue(parent, name + \".\" + token);\n                } else if (peek() === \"[\") {\n                    value = [];\n                    var lastValue;\n                    if (skip(\"[\", true)) {\n                        do {\n                            lastValue = readValue(true);\n                            value.push(lastValue);\n                        } while (skip(\",\", true));\n                        skip(\"]\");\n                        if (typeof lastValue !== \"undefined\") {\n                            setOption(parent, name + \".\" + token, lastValue);\n                        }\n                    }\n                } else {\n                    value = readValue(true);\n                    setOption(parent, name + \".\" + token, value);\n                }\n\n                var prevValue = objectResult[propName];\n\n                if (prevValue)\n                    value = [].concat(prevValue).concat(value);\n\n                objectResult[propName] = value;\n\n                // Semicolons and commas can be optional\n                skip(\",\", true);\n                skip(\";\", true);\n            }\n\n            return objectResult;\n        }\n\n        var simpleValue = readValue(true);\n        setOption(parent, name, simpleValue);\n        return simpleValue;\n        // Does not enforce a delimiter to be universal\n    }\n\n    function setOption(parent, name, value) {\n        if (ptr === parent && /^features\\./.test(name)) {\n            topLevelOptions[name] = value;\n            return;\n        }\n        if (parent.setOption)\n            parent.setOption(name, value);\n    }\n\n    function setParsedOption(parent, name, value, propName) {\n        if (parent.setParsedOption)\n            parent.setParsedOption(name, value, propName);\n    }\n\n    function parseInlineOptions(parent) {\n        if (skip(\"[\", true)) {\n            do {\n                parseOption(parent, \"option\");\n            } while (skip(\",\", true));\n            skip(\"]\");\n        }\n        return parent;\n    }\n\n    function parseService(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"service name\");\n\n        var service = new Service(token);\n        ifBlock(service, function parseService_block(token) {\n            if (parseCommon(service, token)) {\n                return;\n            }\n\n            /* istanbul ignore else */\n            if (token === \"rpc\")\n                parseMethod(service, token);\n            else\n                throw illegal(token);\n        });\n        parent.add(service);\n        if (parent === ptr) {\n            topLevelObjects.push(service);\n        }\n    }\n\n    function parseMethod(parent, token) {\n        // Get the comment of the preceding line now (if one exists) in case the\n        // method is defined across multiple lines.\n        var commentText = cmnt();\n\n        var type = token;\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token,\n            requestType, requestStream,\n            responseType, responseStream;\n\n        skip(\"(\");\n        if (skip(\"stream\", true))\n            requestStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        requestType = token;\n        skip(\")\"); skip(\"returns\"); skip(\"(\");\n        if (skip(\"stream\", true))\n            responseStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        responseType = token;\n        skip(\")\");\n\n        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);\n        method.comment = commentText;\n        ifBlock(method, function parseMethod_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(method, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        });\n        parent.add(method);\n    }\n\n    function parseExtension(parent, token) {\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"reference\");\n\n        var reference = token;\n        ifBlock(null, function parseExtension_block(token) {\n            switch (token) {\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(parent, token, reference);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (edition === \"proto3\") {\n                        parseField(parent, \"proto3_optional\", reference);\n                    } else {\n                        parseField(parent, \"optional\", reference);\n                    }\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (edition === \"proto2\" || !typeRefRe.test(token))\n                        throw illegal(token);\n                    push(token);\n                    parseField(parent, \"optional\", reference);\n                    break;\n            }\n        });\n    }\n\n    var token;\n    while ((token = next()) !== null) {\n        switch (token) {\n\n            case \"package\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parsePackage();\n                break;\n\n            case \"import\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseImport();\n                break;\n\n            case \"syntax\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseSyntax();\n                break;\n\n            case \"edition\":\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n                parseEdition();\n                break;\n\n            case \"option\":\n                parseOption(ptr, token);\n                skip(\";\", true);\n                break;\n\n            default:\n\n                /* istanbul ignore else */\n                if (parseCommon(ptr, token)) {\n                    head = false;\n                    continue;\n                }\n\n                /* istanbul ignore next */\n                throw illegal(token);\n        }\n    }\n\n    resolveFileFeatures();\n\n    parse.filename = null;\n    return {\n        \"package\"     : pkg,\n        \"imports\"     : imports,\n         weakImports  : weakImports,\n         root         : root\n    };\n}\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @name parse\n * @function\n * @param {string} source Source contents\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n * @variation 2\n */\n", "\"use strict\";\nmodule.exports = common;\n\nvar commonRe = /\\/|\\./;\n\n/**\n * Provides common type definitions.\n * Can also be used to provide additional google types or your own custom types.\n * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name\n * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition\n * @returns {undefined}\n * @property {INamespace} google/protobuf/any.proto Any\n * @property {INamespace} google/protobuf/duration.proto Duration\n * @property {INamespace} google/protobuf/empty.proto Empty\n * @property {INamespace} google/protobuf/field_mask.proto FieldMask\n * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue\n * @property {INamespace} google/protobuf/timestamp.proto Timestamp\n * @property {INamespace} google/protobuf/wrappers.proto Wrappers\n * @example\n * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)\n * protobuf.common(\"descriptor\", descriptorJson);\n *\n * // manually provides a custom definition (uses my.foo namespace)\n * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);\n */\nfunction common(name, json) {\n    if (!commonRe.test(name)) {\n        name = \"google/protobuf/\" + name + \".proto\";\n        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };\n    }\n    common[name] = json;\n}\n\n// Not provided because of limited use (feel free to discuss or to provide yourself):\n//\n// google/protobuf/descriptor.proto\n// google/protobuf/source_context.proto\n// google/protobuf/type.proto\n//\n// Stripped and pre-parsed versions of these non-bundled files are instead available as part of\n// the repository or package within the google/protobuf directory.\n\ncommon(\"any\", {\n\n    /**\n     * Properties of a google.protobuf.Any message.\n     * @interface IAny\n     * @type {Object}\n     * @property {string} [typeUrl]\n     * @property {Uint8Array} [bytes]\n     * @memberof common\n     */\n    Any: {\n        fields: {\n            type_url: {\n                type: \"string\",\n                id: 1\n            },\n            value: {\n                type: \"bytes\",\n                id: 2\n            }\n        }\n    }\n});\n\nvar timeType;\n\ncommon(\"duration\", {\n\n    /**\n     * Properties of a google.protobuf.Duration message.\n     * @interface IDuration\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Duration: timeType = {\n        fields: {\n            seconds: {\n                type: \"int64\",\n                id: 1\n            },\n            nanos: {\n                type: \"int32\",\n                id: 2\n            }\n        }\n    }\n});\n\ncommon(\"timestamp\", {\n\n    /**\n     * Properties of a google.protobuf.Timestamp message.\n     * @interface ITimestamp\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Timestamp: timeType\n});\n\ncommon(\"empty\", {\n\n    /**\n     * Properties of a google.protobuf.Empty message.\n     * @interface IEmpty\n     * @memberof common\n     */\n    Empty: {\n        fields: {}\n    }\n});\n\ncommon(\"struct\", {\n\n    /**\n     * Properties of a google.protobuf.Struct message.\n     * @interface IStruct\n     * @type {Object}\n     * @property {Object.<string,IValue>} [fields]\n     * @memberof common\n     */\n    Struct: {\n        fields: {\n            fields: {\n                keyType: \"string\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Value message.\n     * @interface IValue\n     * @type {Object}\n     * @property {string} [kind]\n     * @property {0} [nullValue]\n     * @property {number} [numberValue]\n     * @property {string} [stringValue]\n     * @property {boolean} [boolValue]\n     * @property {IStruct} [structValue]\n     * @property {IListValue} [listValue]\n     * @memberof common\n     */\n    Value: {\n        oneofs: {\n            kind: {\n                oneof: [\n                    \"nullValue\",\n                    \"numberValue\",\n                    \"stringValue\",\n                    \"boolValue\",\n                    \"structValue\",\n                    \"listValue\"\n                ]\n            }\n        },\n        fields: {\n            nullValue: {\n                type: \"NullValue\",\n                id: 1\n            },\n            numberValue: {\n                type: \"double\",\n                id: 2\n            },\n            stringValue: {\n                type: \"string\",\n                id: 3\n            },\n            boolValue: {\n                type: \"bool\",\n                id: 4\n            },\n            structValue: {\n                type: \"Struct\",\n                id: 5\n            },\n            listValue: {\n                type: \"ListValue\",\n                id: 6\n            }\n        }\n    },\n\n    NullValue: {\n        values: {\n            NULL_VALUE: 0\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.ListValue message.\n     * @interface IListValue\n     * @type {Object}\n     * @property {Array.<IValue>} [values]\n     * @memberof common\n     */\n    ListValue: {\n        fields: {\n            values: {\n                rule: \"repeated\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"wrappers\", {\n\n    /**\n     * Properties of a google.protobuf.DoubleValue message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    DoubleValue: {\n        fields: {\n            value: {\n                type: \"double\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.FloatValue message.\n     * @interface IFloatValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FloatValue: {\n        fields: {\n            value: {\n                type: \"float\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int64Value message.\n     * @interface IInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    Int64Value: {\n        fields: {\n            value: {\n                type: \"int64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt64Value message.\n     * @interface IUInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    UInt64Value: {\n        fields: {\n            value: {\n                type: \"uint64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int32Value message.\n     * @interface IInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    Int32Value: {\n        fields: {\n            value: {\n                type: \"int32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt32Value message.\n     * @interface IUInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    UInt32Value: {\n        fields: {\n            value: {\n                type: \"uint32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BoolValue message.\n     * @interface IBoolValue\n     * @type {Object}\n     * @property {boolean} [value]\n     * @memberof common\n     */\n    BoolValue: {\n        fields: {\n            value: {\n                type: \"bool\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.StringValue message.\n     * @interface IStringValue\n     * @type {Object}\n     * @property {string} [value]\n     * @memberof common\n     */\n    StringValue: {\n        fields: {\n            value: {\n                type: \"string\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BytesValue message.\n     * @interface IBytesValue\n     * @type {Object}\n     * @property {Uint8Array} [value]\n     * @memberof common\n     */\n    BytesValue: {\n        fields: {\n            value: {\n                type: \"bytes\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"field_mask\", {\n\n    /**\n     * Properties of a google.protobuf.FieldMask message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FieldMask: {\n        fields: {\n            paths: {\n                rule: \"repeated\",\n                type: \"string\",\n                id: 1\n            }\n        }\n    }\n});\n\n/**\n * Gets the root definition of the specified common proto file.\n *\n * Bundled definitions are:\n * - google/protobuf/any.proto\n * - google/protobuf/duration.proto\n * - google/protobuf/empty.proto\n * - google/protobuf/field_mask.proto\n * - google/protobuf/struct.proto\n * - google/protobuf/timestamp.proto\n * - google/protobuf/wrappers.proto\n *\n * @param {string} file Proto file name\n * @returns {INamespace|null} Root definition or `null` if not defined\n */\ncommon.get = function get(file) {\n    return common[file] || null;\n};\n", "\"use strict\";\nvar protobuf = module.exports = require(\"./index-light\");\n\nprotobuf.build = \"full\";\n\n// Parser\nprotobuf.tokenize         = require(\"./tokenize\");\nprotobuf.parse            = require(\"./parse\");\nprotobuf.common           = require(\"./common\");\n\n// Configure parser\nprotobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);\n", "// full library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index\");\n", "{\n  \"nested\": {\n    \"google\": {\n      \"nested\": {\n        \"protobuf\": {\n          \"options\": {\n            \"go_package\": \"google.golang.org/protobuf/types/descriptorpb\",\n            \"java_package\": \"com.google.protobuf\",\n            \"java_outer_classname\": \"DescriptorProtos\",\n            \"csharp_namespace\": \"Google.Protobuf.Reflection\",\n            \"objc_class_prefix\": \"GPB\",\n            \"cc_enable_arenas\": true,\n            \"optimize_for\": \"SPEED\"\n          },\n          \"nested\": {\n            \"FileDescriptorSet\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"file\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"FileDescriptorProto\",\n                  \"id\": 1\n                }\n              },\n              \"extensions\": [\n                [\n                  536000000,\n                  536000000\n                ]\n              ]\n            },\n            \"Edition\": {\n              \"edition\": \"proto2\",\n              \"values\": {\n                \"EDITION_UNKNOWN\": 0,\n                \"EDITION_LEGACY\": 900,\n                \"EDITION_PROTO2\": 998,\n                \"EDITION_PROTO3\": 999,\n                \"EDITION_2023\": 1000,\n                \"EDITION_2024\": 1001,\n                \"EDITION_1_TEST_ONLY\": 1,\n                \"EDITION_2_TEST_ONLY\": 2,\n                \"EDITION_99997_TEST_ONLY\": 99997,\n                \"EDITION_99998_TEST_ONLY\": 99998,\n                \"EDITION_99999_TEST_ONLY\": 99999,\n                \"EDITION_MAX\": 2147483647\n              }\n            },\n            \"FileDescriptorProto\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"package\": {\n                  \"type\": \"string\",\n                  \"id\": 2\n                },\n                \"dependency\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"string\",\n                  \"id\": 3\n                },\n                \"publicDependency\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"int32\",\n                  \"id\": 10\n                },\n                \"weakDependency\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"int32\",\n                  \"id\": 11\n                },\n                \"optionDependency\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"string\",\n                  \"id\": 15\n                },\n                \"messageType\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"DescriptorProto\",\n                  \"id\": 4\n                },\n                \"enumType\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"EnumDescriptorProto\",\n                  \"id\": 5\n                },\n                \"service\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"ServiceDescriptorProto\",\n                  \"id\": 6\n                },\n                \"extension\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"FieldDescriptorProto\",\n                  \"id\": 7\n                },\n                \"options\": {\n                  \"type\": \"FileOptions\",\n                  \"id\": 8\n                },\n                \"sourceCodeInfo\": {\n                  \"type\": \"SourceCodeInfo\",\n                  \"id\": 9\n                },\n                \"syntax\": {\n                  \"type\": \"string\",\n                  \"id\": 12\n                },\n                \"edition\": {\n                  \"type\": \"Edition\",\n                  \"id\": 14\n                }\n              }\n            },\n            \"DescriptorProto\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"field\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"FieldDescriptorProto\",\n                  \"id\": 2\n                },\n                \"extension\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"FieldDescriptorProto\",\n                  \"id\": 6\n                },\n                \"nestedType\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"DescriptorProto\",\n                  \"id\": 3\n                },\n                \"enumType\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"EnumDescriptorProto\",\n                  \"id\": 4\n                },\n                \"extensionRange\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"ExtensionRange\",\n                  \"id\": 5\n                },\n                \"oneofDecl\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"OneofDescriptorProto\",\n                  \"id\": 8\n                },\n                \"options\": {\n                  \"type\": \"MessageOptions\",\n                  \"id\": 7\n                },\n                \"reservedRange\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"ReservedRange\",\n                  \"id\": 9\n                },\n                \"reservedName\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"string\",\n                  \"id\": 10\n                },\n                \"visibility\": {\n                  \"type\": \"SymbolVisibility\",\n                  \"id\": 11\n                }\n              },\n              \"nested\": {\n                \"ExtensionRange\": {\n                  \"fields\": {\n                    \"start\": {\n                      \"type\": \"int32\",\n                      \"id\": 1\n                    },\n                    \"end\": {\n                      \"type\": \"int32\",\n                      \"id\": 2\n                    },\n                    \"options\": {\n                      \"type\": \"ExtensionRangeOptions\",\n                      \"id\": 3\n                    }\n                  }\n                },\n                \"ReservedRange\": {\n                  \"fields\": {\n                    \"start\": {\n                      \"type\": \"int32\",\n                      \"id\": 1\n                    },\n                    \"end\": {\n                      \"type\": \"int32\",\n                      \"id\": 2\n                    }\n                  }\n                }\n              }\n            },\n            \"ExtensionRangeOptions\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"uninterpretedOption\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"UninterpretedOption\",\n                  \"id\": 999\n                },\n                \"declaration\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Declaration\",\n                  \"id\": 2,\n                  \"options\": {\n                    \"retention\": \"RETENTION_SOURCE\"\n                  }\n                },\n                \"features\": {\n                  \"type\": \"FeatureSet\",\n                  \"id\": 50\n                },\n                \"verification\": {\n                  \"type\": \"VerificationState\",\n                  \"id\": 3,\n                  \"options\": {\n                    \"default\": \"UNVERIFIED\",\n                    \"retention\": \"RETENTION_SOURCE\"\n                  }\n                }\n              },\n              \"extensions\": [\n                [\n                  1000,\n                  536870911\n                ]\n              ],\n              \"nested\": {\n                \"Declaration\": {\n                  \"fields\": {\n                    \"number\": {\n                      \"type\": \"int32\",\n                      \"id\": 1\n                    },\n                    \"fullName\": {\n                      \"type\": \"string\",\n                      \"id\": 2\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"id\": 3\n                    },\n                    \"reserved\": {\n                      \"type\": \"bool\",\n                      \"id\": 5\n                    },\n                    \"repeated\": {\n                      \"type\": \"bool\",\n                      \"id\": 6\n                    }\n                  },\n                  \"reserved\": [\n                    [\n                      4,\n                      4\n                    ]\n                  ]\n                },\n                \"VerificationState\": {\n                  \"values\": {\n                    \"DECLARATION\": 0,\n                    \"UNVERIFIED\": 1\n                  }\n                }\n              }\n            },\n            \"FieldDescriptorProto\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"number\": {\n                  \"type\": \"int32\",\n                  \"id\": 3\n                },\n                \"label\": {\n                  \"type\": \"Label\",\n                  \"id\": 4\n                },\n                \"type\": {\n                  \"type\": \"Type\",\n                  \"id\": 5\n                },\n                \"typeName\": {\n                  \"type\": \"string\",\n                  \"id\": 6\n                },\n                \"extendee\": {\n                  \"type\": \"string\",\n                  \"id\": 2\n                },\n                \"defaultValue\": {\n                  \"type\": \"string\",\n                  \"id\": 7\n                },\n                \"oneofIndex\": {\n                  \"type\": \"int32\",\n                  \"id\": 9\n                },\n                \"jsonName\": {\n                  \"type\": \"string\",\n                  \"id\": 10\n                },\n                \"options\": {\n                  \"type\": \"FieldOptions\",\n                  \"id\": 8\n                },\n                \"proto3Optional\": {\n                  \"type\": \"bool\",\n                  \"id\": 17\n                }\n              },\n              \"nested\": {\n                \"Type\": {\n                  \"values\": {\n                    \"TYPE_DOUBLE\": 1,\n                    \"TYPE_FLOAT\": 2,\n                    \"TYPE_INT64\": 3,\n                    \"TYPE_UINT64\": 4,\n                    \"TYPE_INT32\": 5,\n                    \"TYPE_FIXED64\": 6,\n                    \"TYPE_FIXED32\": 7,\n                    \"TYPE_BOOL\": 8,\n                    \"TYPE_STRING\": 9,\n                    \"TYPE_GROUP\": 10,\n                    \"TYPE_MESSAGE\": 11,\n                    \"TYPE_BYTES\": 12,\n                    \"TYPE_UINT32\": 13,\n                    \"TYPE_ENUM\": 14,\n                    \"TYPE_SFIXED32\": 15,\n                    \"TYPE_SFIXED64\": 16,\n                    \"TYPE_SINT32\": 17,\n                    \"TYPE_SINT64\": 18\n                  }\n                },\n                \"Label\": {\n                  \"values\": {\n                    \"LABEL_OPTIONAL\": 1,\n                    \"LABEL_REPEATED\": 3,\n                    \"LABEL_REQUIRED\": 2\n                  }\n                }\n              }\n            },\n            \"OneofDescriptorProto\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"options\": {\n                  \"type\": \"OneofOptions\",\n                  \"id\": 2\n                }\n              }\n            },\n            \"EnumDescriptorProto\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"value\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"EnumValueDescriptorProto\",\n                  \"id\": 2\n                },\n                \"options\": {\n                  \"type\": \"EnumOptions\",\n                  \"id\": 3\n                },\n                \"reservedRange\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"EnumReservedRange\",\n                  \"id\": 4\n                },\n                \"reservedName\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"string\",\n                  \"id\": 5\n                },\n                \"visibility\": {\n                  \"type\": \"SymbolVisibility\",\n                  \"id\": 6\n                }\n              },\n              \"nested\": {\n                \"EnumReservedRange\": {\n                  \"fields\": {\n                    \"start\": {\n                      \"type\": \"int32\",\n                      \"id\": 1\n                    },\n                    \"end\": {\n                      \"type\": \"int32\",\n                      \"id\": 2\n                    }\n                  }\n                }\n              }\n            },\n            \"EnumValueDescriptorProto\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"number\": {\n                  \"type\": \"int32\",\n                  \"id\": 2\n                },\n                \"options\": {\n                  \"type\": \"EnumValueOptions\",\n                  \"id\": 3\n                }\n              }\n            },\n            \"ServiceDescriptorProto\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"method\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"MethodDescriptorProto\",\n                  \"id\": 2\n                },\n                \"options\": {\n                  \"type\": \"ServiceOptions\",\n                  \"id\": 3\n                }\n              }\n            },\n            \"MethodDescriptorProto\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"inputType\": {\n                  \"type\": \"string\",\n                  \"id\": 2\n                },\n                \"outputType\": {\n                  \"type\": \"string\",\n                  \"id\": 3\n                },\n                \"options\": {\n                  \"type\": \"MethodOptions\",\n                  \"id\": 4\n                },\n                \"clientStreaming\": {\n                  \"type\": \"bool\",\n                  \"id\": 5\n                },\n                \"serverStreaming\": {\n                  \"type\": \"bool\",\n                  \"id\": 6\n                }\n              }\n            },\n            \"FileOptions\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"javaPackage\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"javaOuterClassname\": {\n                  \"type\": \"string\",\n                  \"id\": 8\n                },\n                \"javaMultipleFiles\": {\n                  \"type\": \"bool\",\n                  \"id\": 10\n                },\n                \"javaGenerateEqualsAndHash\": {\n                  \"type\": \"bool\",\n                  \"id\": 20,\n                  \"options\": {\n                    \"deprecated\": true\n                  }\n                },\n                \"javaStringCheckUtf8\": {\n                  \"type\": \"bool\",\n                  \"id\": 27\n                },\n                \"optimizeFor\": {\n                  \"type\": \"OptimizeMode\",\n                  \"id\": 9,\n                  \"options\": {\n                    \"default\": \"SPEED\"\n                  }\n                },\n                \"goPackage\": {\n                  \"type\": \"string\",\n                  \"id\": 11\n                },\n                \"ccGenericServices\": {\n                  \"type\": \"bool\",\n                  \"id\": 16\n                },\n                \"javaGenericServices\": {\n                  \"type\": \"bool\",\n                  \"id\": 17\n                },\n                \"pyGenericServices\": {\n                  \"type\": \"bool\",\n                  \"id\": 18\n                },\n                \"deprecated\": {\n                  \"type\": \"bool\",\n                  \"id\": 23\n                },\n                \"ccEnableArenas\": {\n                  \"type\": \"bool\",\n                  \"id\": 31,\n                  \"options\": {\n                    \"default\": true\n                  }\n                },\n                \"objcClassPrefix\": {\n                  \"type\": \"string\",\n                  \"id\": 36\n                },\n                \"csharpNamespace\": {\n                  \"type\": \"string\",\n                  \"id\": 37\n                },\n                \"swiftPrefix\": {\n                  \"type\": \"string\",\n                  \"id\": 39\n                },\n                \"phpClassPrefix\": {\n                  \"type\": \"string\",\n                  \"id\": 40\n                },\n                \"phpNamespace\": {\n                  \"type\": \"string\",\n                  \"id\": 41\n                },\n                \"phpMetadataNamespace\": {\n                  \"type\": \"string\",\n                  \"id\": 44\n                },\n                \"rubyPackage\": {\n                  \"type\": \"string\",\n                  \"id\": 45\n                },\n                \"features\": {\n                  \"type\": \"FeatureSet\",\n                  \"id\": 50\n                },\n                \"uninterpretedOption\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"UninterpretedOption\",\n                  \"id\": 999\n                }\n              },\n              \"extensions\": [\n                [\n                  1000,\n                  536870911\n                ]\n              ],\n              \"reserved\": [\n                [\n                  42,\n                  42\n                ],\n                \"php_generic_services\",\n                [\n                  38,\n                  38\n                ]\n              ],\n              \"nested\": {\n                \"OptimizeMode\": {\n                  \"values\": {\n                    \"SPEED\": 1,\n                    \"CODE_SIZE\": 2,\n                    \"LITE_RUNTIME\": 3\n                  }\n                }\n              }\n            },\n            \"MessageOptions\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"messageSetWireFormat\": {\n                  \"type\": \"bool\",\n                  \"id\": 1\n                },\n                \"noStandardDescriptorAccessor\": {\n                  \"type\": \"bool\",\n                  \"id\": 2\n                },\n                \"deprecated\": {\n                  \"type\": \"bool\",\n                  \"id\": 3\n                },\n                \"mapEntry\": {\n                  \"type\": \"bool\",\n                  \"id\": 7\n                },\n                \"deprecatedLegacyJsonFieldConflicts\": {\n                  \"type\": \"bool\",\n                  \"id\": 11,\n                  \"options\": {\n                    \"deprecated\": true\n                  }\n                },\n                \"features\": {\n                  \"type\": \"FeatureSet\",\n                  \"id\": 12\n                },\n                \"uninterpretedOption\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"UninterpretedOption\",\n                  \"id\": 999\n                }\n              },\n              \"extensions\": [\n                [\n                  1000,\n                  536870911\n                ]\n              ],\n              \"reserved\": [\n                [\n                  4,\n                  4\n                ],\n                [\n                  5,\n                  5\n                ],\n                [\n                  6,\n                  6\n                ],\n                [\n                  8,\n                  8\n                ],\n                [\n                  9,\n                  9\n                ]\n              ]\n            },\n            \"FieldOptions\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"ctype\": {\n                  \"type\": \"CType\",\n                  \"id\": 1,\n                  \"options\": {\n                    \"default\": \"STRING\"\n                  }\n                },\n                \"packed\": {\n                  \"type\": \"bool\",\n                  \"id\": 2\n                },\n                \"jstype\": {\n                  \"type\": \"JSType\",\n                  \"id\": 6,\n                  \"options\": {\n                    \"default\": \"JS_NORMAL\"\n                  }\n                },\n                \"lazy\": {\n                  \"type\": \"bool\",\n                  \"id\": 5\n                },\n                \"unverifiedLazy\": {\n                  \"type\": \"bool\",\n                  \"id\": 15\n                },\n                \"deprecated\": {\n                  \"type\": \"bool\",\n                  \"id\": 3\n                },\n                \"weak\": {\n                  \"type\": \"bool\",\n                  \"id\": 10,\n                  \"options\": {\n                    \"deprecated\": true\n                  }\n                },\n                \"debugRedact\": {\n                  \"type\": \"bool\",\n                  \"id\": 16\n                },\n                \"retention\": {\n                  \"type\": \"OptionRetention\",\n                  \"id\": 17\n                },\n                \"targets\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"OptionTargetType\",\n                  \"id\": 19\n                },\n                \"editionDefaults\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"EditionDefault\",\n                  \"id\": 20\n                },\n                \"features\": {\n                  \"type\": \"FeatureSet\",\n                  \"id\": 21\n                },\n                \"featureSupport\": {\n                  \"type\": \"FeatureSupport\",\n                  \"id\": 22\n                },\n                \"uninterpretedOption\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"UninterpretedOption\",\n                  \"id\": 999\n                }\n              },\n              \"extensions\": [\n                [\n                  1000,\n                  536870911\n                ]\n              ],\n              \"reserved\": [\n                [\n                  4,\n                  4\n                ],\n                [\n                  18,\n                  18\n                ]\n              ],\n              \"nested\": {\n                \"CType\": {\n                  \"values\": {\n                    \"STRING\": 0,\n                    \"CORD\": 1,\n                    \"STRING_PIECE\": 2\n                  }\n                },\n                \"JSType\": {\n                  \"values\": {\n                    \"JS_NORMAL\": 0,\n                    \"JS_STRING\": 1,\n                    \"JS_NUMBER\": 2\n                  }\n                },\n                \"OptionRetention\": {\n                  \"values\": {\n                    \"RETENTION_UNKNOWN\": 0,\n                    \"RETENTION_RUNTIME\": 1,\n                    \"RETENTION_SOURCE\": 2\n                  }\n                },\n                \"OptionTargetType\": {\n                  \"values\": {\n                    \"TARGET_TYPE_UNKNOWN\": 0,\n                    \"TARGET_TYPE_FILE\": 1,\n                    \"TARGET_TYPE_EXTENSION_RANGE\": 2,\n                    \"TARGET_TYPE_MESSAGE\": 3,\n                    \"TARGET_TYPE_FIELD\": 4,\n                    \"TARGET_TYPE_ONEOF\": 5,\n                    \"TARGET_TYPE_ENUM\": 6,\n                    \"TARGET_TYPE_ENUM_ENTRY\": 7,\n                    \"TARGET_TYPE_SERVICE\": 8,\n                    \"TARGET_TYPE_METHOD\": 9\n                  }\n                },\n                \"EditionDefault\": {\n                  \"fields\": {\n                    \"edition\": {\n                      \"type\": \"Edition\",\n                      \"id\": 3\n                    },\n                    \"value\": {\n                      \"type\": \"string\",\n                      \"id\": 2\n                    }\n                  }\n                },\n                \"FeatureSupport\": {\n                  \"fields\": {\n                    \"editionIntroduced\": {\n                      \"type\": \"Edition\",\n                      \"id\": 1\n                    },\n                    \"editionDeprecated\": {\n                      \"type\": \"Edition\",\n                      \"id\": 2\n                    },\n                    \"deprecationWarning\": {\n                      \"type\": \"string\",\n                      \"id\": 3\n                    },\n                    \"editionRemoved\": {\n                      \"type\": \"Edition\",\n                      \"id\": 4\n                    }\n                  }\n                }\n              }\n            },\n            \"OneofOptions\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"features\": {\n                  \"type\": \"FeatureSet\",\n                  \"id\": 1\n                },\n                \"uninterpretedOption\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"UninterpretedOption\",\n                  \"id\": 999\n                }\n              },\n              \"extensions\": [\n                [\n                  1000,\n                  536870911\n                ]\n              ]\n            },\n            \"EnumOptions\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"allowAlias\": {\n                  \"type\": \"bool\",\n                  \"id\": 2\n                },\n                \"deprecated\": {\n                  \"type\": \"bool\",\n                  \"id\": 3\n                },\n                \"deprecatedLegacyJsonFieldConflicts\": {\n                  \"type\": \"bool\",\n                  \"id\": 6,\n                  \"options\": {\n                    \"deprecated\": true\n                  }\n                },\n                \"features\": {\n                  \"type\": \"FeatureSet\",\n                  \"id\": 7\n                },\n                \"uninterpretedOption\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"UninterpretedOption\",\n                  \"id\": 999\n                }\n              },\n              \"extensions\": [\n                [\n                  1000,\n                  536870911\n                ]\n              ],\n              \"reserved\": [\n                [\n                  5,\n                  5\n                ]\n              ]\n            },\n            \"EnumValueOptions\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"deprecated\": {\n                  \"type\": \"bool\",\n                  \"id\": 1\n                },\n                \"features\": {\n                  \"type\": \"FeatureSet\",\n                  \"id\": 2\n                },\n                \"debugRedact\": {\n                  \"type\": \"bool\",\n                  \"id\": 3\n                },\n                \"featureSupport\": {\n                  \"type\": \"FieldOptions.FeatureSupport\",\n                  \"id\": 4\n                },\n                \"uninterpretedOption\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"UninterpretedOption\",\n                  \"id\": 999\n                }\n              },\n              \"extensions\": [\n                [\n                  1000,\n                  536870911\n                ]\n              ]\n            },\n            \"ServiceOptions\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"features\": {\n                  \"type\": \"FeatureSet\",\n                  \"id\": 34\n                },\n                \"deprecated\": {\n                  \"type\": \"bool\",\n                  \"id\": 33\n                },\n                \"uninterpretedOption\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"UninterpretedOption\",\n                  \"id\": 999\n                }\n              },\n              \"extensions\": [\n                [\n                  1000,\n                  536870911\n                ]\n              ]\n            },\n            \"MethodOptions\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"deprecated\": {\n                  \"type\": \"bool\",\n                  \"id\": 33\n                },\n                \"idempotencyLevel\": {\n                  \"type\": \"IdempotencyLevel\",\n                  \"id\": 34,\n                  \"options\": {\n                    \"default\": \"IDEMPOTENCY_UNKNOWN\"\n                  }\n                },\n                \"features\": {\n                  \"type\": \"FeatureSet\",\n                  \"id\": 35\n                },\n                \"uninterpretedOption\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"UninterpretedOption\",\n                  \"id\": 999\n                }\n              },\n              \"extensions\": [\n                [\n                  1000,\n                  536870911\n                ]\n              ],\n              \"nested\": {\n                \"IdempotencyLevel\": {\n                  \"values\": {\n                    \"IDEMPOTENCY_UNKNOWN\": 0,\n                    \"NO_SIDE_EFFECTS\": 1,\n                    \"IDEMPOTENT\": 2\n                  }\n                }\n              }\n            },\n            \"UninterpretedOption\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"name\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"NamePart\",\n                  \"id\": 2\n                },\n                \"identifierValue\": {\n                  \"type\": \"string\",\n                  \"id\": 3\n                },\n                \"positiveIntValue\": {\n                  \"type\": \"uint64\",\n                  \"id\": 4\n                },\n                \"negativeIntValue\": {\n                  \"type\": \"int64\",\n                  \"id\": 5\n                },\n                \"doubleValue\": {\n                  \"type\": \"double\",\n                  \"id\": 6\n                },\n                \"stringValue\": {\n                  \"type\": \"bytes\",\n                  \"id\": 7\n                },\n                \"aggregateValue\": {\n                  \"type\": \"string\",\n                  \"id\": 8\n                }\n              },\n              \"nested\": {\n                \"NamePart\": {\n                  \"fields\": {\n                    \"namePart\": {\n                      \"rule\": \"required\",\n                      \"type\": \"string\",\n                      \"id\": 1\n                    },\n                    \"isExtension\": {\n                      \"rule\": \"required\",\n                      \"type\": \"bool\",\n                      \"id\": 2\n                    }\n                  }\n                }\n              }\n            },\n            \"FeatureSet\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"fieldPresence\": {\n                  \"type\": \"FieldPresence\",\n                  \"id\": 1,\n                  \"options\": {\n                    \"retention\": \"RETENTION_RUNTIME\",\n                    \"targets\": \"TARGET_TYPE_FILE\",\n                    \"feature_support.edition_introduced\": \"EDITION_2023\",\n                    \"edition_defaults.edition\": \"EDITION_2023\",\n                    \"edition_defaults.value\": \"EXPLICIT\"\n                  }\n                },\n                \"enumType\": {\n                  \"type\": \"EnumType\",\n                  \"id\": 2,\n                  \"options\": {\n                    \"retention\": \"RETENTION_RUNTIME\",\n                    \"targets\": \"TARGET_TYPE_FILE\",\n                    \"feature_support.edition_introduced\": \"EDITION_2023\",\n                    \"edition_defaults.edition\": \"EDITION_PROTO3\",\n                    \"edition_defaults.value\": \"OPEN\"\n                  }\n                },\n                \"repeatedFieldEncoding\": {\n                  \"type\": \"RepeatedFieldEncoding\",\n                  \"id\": 3,\n                  \"options\": {\n                    \"retention\": \"RETENTION_RUNTIME\",\n                    \"targets\": \"TARGET_TYPE_FILE\",\n                    \"feature_support.edition_introduced\": \"EDITION_2023\",\n                    \"edition_defaults.edition\": \"EDITION_PROTO3\",\n                    \"edition_defaults.value\": \"PACKED\"\n                  }\n                },\n                \"utf8Validation\": {\n                  \"type\": \"Utf8Validation\",\n                  \"id\": 4,\n                  \"options\": {\n                    \"retention\": \"RETENTION_RUNTIME\",\n                    \"targets\": \"TARGET_TYPE_FILE\",\n                    \"feature_support.edition_introduced\": \"EDITION_2023\",\n                    \"edition_defaults.edition\": \"EDITION_PROTO3\",\n                    \"edition_defaults.value\": \"VERIFY\"\n                  }\n                },\n                \"messageEncoding\": {\n                  \"type\": \"MessageEncoding\",\n                  \"id\": 5,\n                  \"options\": {\n                    \"retention\": \"RETENTION_RUNTIME\",\n                    \"targets\": \"TARGET_TYPE_FILE\",\n                    \"feature_support.edition_introduced\": \"EDITION_2023\",\n                    \"edition_defaults.edition\": \"EDITION_LEGACY\",\n                    \"edition_defaults.value\": \"LENGTH_PREFIXED\"\n                  }\n                },\n                \"jsonFormat\": {\n                  \"type\": \"JsonFormat\",\n                  \"id\": 6,\n                  \"options\": {\n                    \"retention\": \"RETENTION_RUNTIME\",\n                    \"targets\": \"TARGET_TYPE_FILE\",\n                    \"feature_support.edition_introduced\": \"EDITION_2023\",\n                    \"edition_defaults.edition\": \"EDITION_PROTO3\",\n                    \"edition_defaults.value\": \"ALLOW\"\n                  }\n                },\n                \"enforceNamingStyle\": {\n                  \"type\": \"EnforceNamingStyle\",\n                  \"id\": 7,\n                  \"options\": {\n                    \"retention\": \"RETENTION_SOURCE\",\n                    \"targets\": \"TARGET_TYPE_METHOD\",\n                    \"feature_support.edition_introduced\": \"EDITION_2024\",\n                    \"edition_defaults.edition\": \"EDITION_2024\",\n                    \"edition_defaults.value\": \"STYLE2024\"\n                  }\n                },\n                \"defaultSymbolVisibility\": {\n                  \"type\": \"VisibilityFeature.DefaultSymbolVisibility\",\n                  \"id\": 8,\n                  \"options\": {\n                    \"retention\": \"RETENTION_SOURCE\",\n                    \"targets\": \"TARGET_TYPE_FILE\",\n                    \"feature_support.edition_introduced\": \"EDITION_2024\",\n                    \"edition_defaults.edition\": \"EDITION_2024\",\n                    \"edition_defaults.value\": \"EXPORT_TOP_LEVEL\"\n                  }\n                }\n              },\n              \"extensions\": [\n                [\n                  1000,\n                  9994\n                ],\n                [\n                  9995,\n                  9999\n                ],\n                [\n                  10000,\n                  10000\n                ]\n              ],\n              \"reserved\": [\n                [\n                  999,\n                  999\n                ]\n              ],\n              \"nested\": {\n                \"FieldPresence\": {\n                  \"values\": {\n                    \"FIELD_PRESENCE_UNKNOWN\": 0,\n                    \"EXPLICIT\": 1,\n                    \"IMPLICIT\": 2,\n                    \"LEGACY_REQUIRED\": 3\n                  }\n                },\n                \"EnumType\": {\n                  \"values\": {\n                    \"ENUM_TYPE_UNKNOWN\": 0,\n                    \"OPEN\": 1,\n                    \"CLOSED\": 2\n                  }\n                },\n                \"RepeatedFieldEncoding\": {\n                  \"values\": {\n                    \"REPEATED_FIELD_ENCODING_UNKNOWN\": 0,\n                    \"PACKED\": 1,\n                    \"EXPANDED\": 2\n                  }\n                },\n                \"Utf8Validation\": {\n                  \"values\": {\n                    \"UTF8_VALIDATION_UNKNOWN\": 0,\n                    \"VERIFY\": 2,\n                    \"NONE\": 3\n                  }\n                },\n                \"MessageEncoding\": {\n                  \"values\": {\n                    \"MESSAGE_ENCODING_UNKNOWN\": 0,\n                    \"LENGTH_PREFIXED\": 1,\n                    \"DELIMITED\": 2\n                  }\n                },\n                \"JsonFormat\": {\n                  \"values\": {\n                    \"JSON_FORMAT_UNKNOWN\": 0,\n                    \"ALLOW\": 1,\n                    \"LEGACY_BEST_EFFORT\": 2\n                  }\n                },\n                \"EnforceNamingStyle\": {\n                  \"values\": {\n                    \"ENFORCE_NAMING_STYLE_UNKNOWN\": 0,\n                    \"STYLE2024\": 1,\n                    \"STYLE_LEGACY\": 2\n                  }\n                },\n                \"VisibilityFeature\": {\n                  \"fields\": {},\n                  \"reserved\": [\n                    [\n                      1,\n                      536870911\n                    ]\n                  ],\n                  \"nested\": {\n                    \"DefaultSymbolVisibility\": {\n                      \"values\": {\n                        \"DEFAULT_SYMBOL_VISIBILITY_UNKNOWN\": 0,\n                        \"EXPORT_ALL\": 1,\n                        \"EXPORT_TOP_LEVEL\": 2,\n                        \"LOCAL_ALL\": 3,\n                        \"STRICT\": 4\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"FeatureSetDefaults\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"defaults\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"FeatureSetEditionDefault\",\n                  \"id\": 1\n                },\n                \"minimumEdition\": {\n                  \"type\": \"Edition\",\n                  \"id\": 4\n                },\n                \"maximumEdition\": {\n                  \"type\": \"Edition\",\n                  \"id\": 5\n                }\n              },\n              \"nested\": {\n                \"FeatureSetEditionDefault\": {\n                  \"fields\": {\n                    \"edition\": {\n                      \"type\": \"Edition\",\n                      \"id\": 3\n                    },\n                    \"overridableFeatures\": {\n                      \"type\": \"FeatureSet\",\n                      \"id\": 4\n                    },\n                    \"fixedFeatures\": {\n                      \"type\": \"FeatureSet\",\n                      \"id\": 5\n                    }\n                  },\n                  \"reserved\": [\n                    [\n                      1,\n                      1\n                    ],\n                    [\n                      2,\n                      2\n                    ],\n                    \"features\"\n                  ]\n                }\n              }\n            },\n            \"SourceCodeInfo\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"location\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Location\",\n                  \"id\": 1\n                }\n              },\n              \"extensions\": [\n                [\n                  536000000,\n                  536000000\n                ]\n              ],\n              \"nested\": {\n                \"Location\": {\n                  \"fields\": {\n                    \"path\": {\n                      \"rule\": \"repeated\",\n                      \"type\": \"int32\",\n                      \"id\": 1,\n                      \"options\": {\n                        \"packed\": true\n                      }\n                    },\n                    \"span\": {\n                      \"rule\": \"repeated\",\n                      \"type\": \"int32\",\n                      \"id\": 2,\n                      \"options\": {\n                        \"packed\": true\n                      }\n                    },\n                    \"leadingComments\": {\n                      \"type\": \"string\",\n                      \"id\": 3\n                    },\n                    \"trailingComments\": {\n                      \"type\": \"string\",\n                      \"id\": 4\n                    },\n                    \"leadingDetachedComments\": {\n                      \"rule\": \"repeated\",\n                      \"type\": \"string\",\n                      \"id\": 6\n                    }\n                  }\n                }\n              }\n            },\n            \"GeneratedCodeInfo\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"annotation\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Annotation\",\n                  \"id\": 1\n                }\n              },\n              \"nested\": {\n                \"Annotation\": {\n                  \"fields\": {\n                    \"path\": {\n                      \"rule\": \"repeated\",\n                      \"type\": \"int32\",\n                      \"id\": 1,\n                      \"options\": {\n                        \"packed\": true\n                      }\n                    },\n                    \"sourceFile\": {\n                      \"type\": \"string\",\n                      \"id\": 2\n                    },\n                    \"begin\": {\n                      \"type\": \"int32\",\n                      \"id\": 3\n                    },\n                    \"end\": {\n                      \"type\": \"int32\",\n                      \"id\": 4\n                    },\n                    \"semantic\": {\n                      \"type\": \"Semantic\",\n                      \"id\": 5\n                    }\n                  },\n                  \"nested\": {\n                    \"Semantic\": {\n                      \"values\": {\n                        \"NONE\": 0,\n                        \"SET\": 1,\n                        \"ALIAS\": 2\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"SymbolVisibility\": {\n              \"edition\": \"proto2\",\n              \"values\": {\n                \"VISIBILITY_UNSET\": 0,\n                \"VISIBILITY_LOCAL\": 1,\n                \"VISIBILITY_EXPORT\": 2\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "\"use strict\";\nvar $protobuf = require(\"../..\");\nmodule.exports = exports = $protobuf.descriptor = $protobuf.Root.fromJSON(require(\"../../google/protobuf/descriptor.json\")).lookup(\".google.protobuf\");\n\nvar Namespace = $protobuf.Namespace,\n    Root      = $protobuf.Root,\n    Enum      = $protobuf.Enum,\n    Type      = $protobuf.Type,\n    Field     = $protobuf.Field,\n    MapField  = $protobuf.MapField,\n    OneOf     = $protobuf.OneOf,\n    Service   = $protobuf.Service,\n    Method    = $protobuf.Method;\n\n// --- Root ---\n\n/**\n * Properties of a FileDescriptorSet message.\n * @interface IFileDescriptorSet\n * @property {IFileDescriptorProto[]} file Files\n */\n\n/**\n * Properties of a FileDescriptorProto message.\n * @interface IFileDescriptorProto\n * @property {string} [name] File name\n * @property {string} [package] Package\n * @property {*} [dependency] Not supported\n * @property {*} [publicDependency] Not supported\n * @property {*} [weakDependency] Not supported\n * @property {IDescriptorProto[]} [messageType] Nested message types\n * @property {IEnumDescriptorProto[]} [enumType] Nested enums\n * @property {IServiceDescriptorProto[]} [service] Nested services\n * @property {IFieldDescriptorProto[]} [extension] Nested extension fields\n * @property {IFileOptions} [options] Options\n * @property {*} [sourceCodeInfo] Not supported\n * @property {string} [syntax=\"proto2\"] Syntax\n * @property {IEdition} [edition] Edition\n */\n\n/**\n * Values of the Edition enum.\n * @typedef IEdition\n * @type {number}\n * @property {number} EDITION_UNKNOWN=0\n * @property {number} EDITION_LEGACY=900\n * @property {number} EDITION_PROTO2=998\n * @property {number} EDITION_PROTO3=999\n * @property {number} EDITION_2023=1000\n * @property {number} EDITION_2024=1001\n * @property {number} EDITION_1_TEST_ONLY=1\n * @property {number} EDITION_2_TEST_ONLY=2\n * @property {number} EDITION_99997_TEST_ONLY=99997\n * @property {number} EDITION_99998_TEST_ONLY=99998\n * @property {number} EDITION_99998_TEST_ONLY=99999\n * @property {number} EDITION_MAX=2147483647\n */\n\n/**\n * Properties of a FileOptions message.\n * @interface IFileOptions\n * @property {string} [javaPackage]\n * @property {string} [javaOuterClassname]\n * @property {boolean} [javaMultipleFiles]\n * @property {boolean} [javaGenerateEqualsAndHash]\n * @property {boolean} [javaStringCheckUtf8]\n * @property {IFileOptionsOptimizeMode} [optimizeFor=1]\n * @property {string} [goPackage]\n * @property {boolean} [ccGenericServices]\n * @property {boolean} [javaGenericServices]\n * @property {boolean} [pyGenericServices]\n * @property {boolean} [deprecated]\n * @property {boolean} [ccEnableArenas]\n * @property {string} [objcClassPrefix]\n * @property {string} [csharpNamespace]\n */\n\n/**\n * Values of he FileOptions.OptimizeMode enum.\n * @typedef IFileOptionsOptimizeMode\n * @type {number}\n * @property {number} SPEED=1\n * @property {number} CODE_SIZE=2\n * @property {number} LITE_RUNTIME=3\n */\n\n/**\n * Creates a root from a descriptor set.\n * @param {IFileDescriptorSet|Reader|Uint8Array} descriptor Descriptor\n * @returns {Root} Root instance\n */\nRoot.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.FileDescriptorSet.decode(descriptor);\n\n    var root = new Root();\n\n    if (descriptor.file) {\n        var fileDescriptor,\n            filePackage;\n        for (var j = 0, i; j < descriptor.file.length; ++j) {\n            filePackage = root;\n            if ((fileDescriptor = descriptor.file[j])[\"package\"] && fileDescriptor[\"package\"].length)\n                filePackage = root.define(fileDescriptor[\"package\"]);\n            var edition = editionFromDescriptor(fileDescriptor);\n            if (fileDescriptor.name && fileDescriptor.name.length)\n                root.files.push(filePackage.filename = fileDescriptor.name);\n            if (fileDescriptor.messageType)\n                for (i = 0; i < fileDescriptor.messageType.length; ++i)\n                    filePackage.add(Type.fromDescriptor(fileDescriptor.messageType[i], edition));\n            if (fileDescriptor.enumType)\n                for (i = 0; i < fileDescriptor.enumType.length; ++i)\n                    filePackage.add(Enum.fromDescriptor(fileDescriptor.enumType[i], edition));\n            if (fileDescriptor.extension)\n                for (i = 0; i < fileDescriptor.extension.length; ++i)\n                    filePackage.add(Field.fromDescriptor(fileDescriptor.extension[i], edition));\n            if (fileDescriptor.service)\n                for (i = 0; i < fileDescriptor.service.length; ++i)\n                    filePackage.add(Service.fromDescriptor(fileDescriptor.service[i], edition));\n            var opts = fromDescriptorOptions(fileDescriptor.options, exports.FileOptions);\n            if (opts) {\n                var ks = Object.keys(opts);\n                for (i = 0; i < ks.length; ++i)\n                    filePackage.setOption(ks[i], opts[ks[i]]);\n            }\n        }\n    }\n\n    return root.resolveAll();\n};\n\n/**\n * Converts a root to a descriptor set.\n * @returns {Message<IFileDescriptorSet>} Descriptor\n * @param {string} [edition=\"proto2\"] The syntax or edition to use\n */\nRoot.prototype.toDescriptor = function toDescriptor(edition) {\n    var set = exports.FileDescriptorSet.create();\n    Root_toDescriptorRecursive(this, set.file, edition);\n    return set;\n};\n\n// Traverses a namespace and assembles the descriptor set\nfunction Root_toDescriptorRecursive(ns, files, edition) {\n\n    // Create a new file\n    var file = exports.FileDescriptorProto.create({ name: ns.filename || (ns.fullName.substring(1).replace(/\\./g, \"_\") || \"root\") + \".proto\" });\n    editionToDescriptor(edition, file);\n    if (!(ns instanceof Root))\n        file[\"package\"] = ns.fullName.substring(1);\n\n    // Add nested types\n    for (var i = 0, nested; i < ns.nestedArray.length; ++i)\n        if ((nested = ns._nestedArray[i]) instanceof Type)\n            file.messageType.push(nested.toDescriptor(edition));\n        else if (nested instanceof Enum)\n            file.enumType.push(nested.toDescriptor());\n        else if (nested instanceof Field)\n            file.extension.push(nested.toDescriptor(edition));\n        else if (nested instanceof Service)\n            file.service.push(nested.toDescriptor());\n        else if (nested instanceof /* plain */ Namespace)\n            Root_toDescriptorRecursive(nested, files, edition); // requires new file\n\n    // Keep package-level options\n    file.options = toDescriptorOptions(ns.options, exports.FileOptions);\n\n    // And keep the file only if there is at least one nested object\n    if (file.messageType.length + file.enumType.length + file.extension.length + file.service.length)\n        files.push(file);\n}\n\n// --- Type ---\n\n/**\n * Properties of a DescriptorProto message.\n * @interface IDescriptorProto\n * @property {string} [name] Message type name\n * @property {IFieldDescriptorProto[]} [field] Fields\n * @property {IFieldDescriptorProto[]} [extension] Extension fields\n * @property {IDescriptorProto[]} [nestedType] Nested message types\n * @property {IEnumDescriptorProto[]} [enumType] Nested enums\n * @property {IDescriptorProtoExtensionRange[]} [extensionRange] Extension ranges\n * @property {IOneofDescriptorProto[]} [oneofDecl] Oneofs\n * @property {IMessageOptions} [options] Not supported\n * @property {IDescriptorProtoReservedRange[]} [reservedRange] Reserved ranges\n * @property {string[]} [reservedName] Reserved names\n */\n\n/**\n * Properties of a MessageOptions message.\n * @interface IMessageOptions\n * @property {boolean} [mapEntry=false] Whether this message is a map entry\n */\n\n/**\n * Properties of an ExtensionRange message.\n * @interface IDescriptorProtoExtensionRange\n * @property {number} [start] Start field id\n * @property {number} [end] End field id\n */\n\n/**\n * Properties of a ReservedRange message.\n * @interface IDescriptorProtoReservedRange\n * @property {number} [start] Start field id\n * @property {number} [end] End field id\n */\n\nvar unnamedMessageIndex = 0;\n\n/**\n * Creates a type from a descriptor.\n *\n * Warning: this is not safe to use with editions protos, since it discards relevant file context.\n *\n * @param {IDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @param {string} [edition=\"proto2\"] The syntax or edition to use\n * @param {boolean} [nested=false] Whether or not this is a nested object\n * @returns {Type} Type instance\n */\nType.fromDescriptor = function fromDescriptor(descriptor, edition, nested) {\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.DescriptorProto.decode(descriptor);\n\n    // Create the message type\n    var type = new Type(descriptor.name.length ? descriptor.name : \"Type\" + unnamedMessageIndex++, fromDescriptorOptions(descriptor.options, exports.MessageOptions)),\n        i;\n\n    if (!nested)\n        type._edition = edition;\n\n    /* Oneofs */ if (descriptor.oneofDecl)\n        for (i = 0; i < descriptor.oneofDecl.length; ++i)\n            type.add(OneOf.fromDescriptor(descriptor.oneofDecl[i]));\n    /* Fields */ if (descriptor.field)\n        for (i = 0; i < descriptor.field.length; ++i) {\n            var field = Field.fromDescriptor(descriptor.field[i], edition, true);\n            type.add(field);\n            if (descriptor.field[i].hasOwnProperty(\"oneofIndex\")) // eslint-disable-line no-prototype-builtins\n                type.oneofsArray[descriptor.field[i].oneofIndex].add(field);\n        }\n    /* Extension fields */ if (descriptor.extension)\n        for (i = 0; i < descriptor.extension.length; ++i)\n            type.add(Field.fromDescriptor(descriptor.extension[i], edition, true));\n    /* Nested types */ if (descriptor.nestedType)\n        for (i = 0; i < descriptor.nestedType.length; ++i) {\n            type.add(Type.fromDescriptor(descriptor.nestedType[i], edition, true));\n            if (descriptor.nestedType[i].options && descriptor.nestedType[i].options.mapEntry)\n                type.setOption(\"map_entry\", true);\n        }\n    /* Nested enums */ if (descriptor.enumType)\n        for (i = 0; i < descriptor.enumType.length; ++i)\n            type.add(Enum.fromDescriptor(descriptor.enumType[i], edition, true));\n    /* Extension ranges */ if (descriptor.extensionRange && descriptor.extensionRange.length) {\n        type.extensions = [];\n        for (i = 0; i < descriptor.extensionRange.length; ++i)\n            type.extensions.push([ descriptor.extensionRange[i].start, descriptor.extensionRange[i].end ]);\n    }\n    /* Reserved... */ if (descriptor.reservedRange && descriptor.reservedRange.length || descriptor.reservedName && descriptor.reservedName.length) {\n        type.reserved = [];\n        /* Ranges */ if (descriptor.reservedRange)\n            for (i = 0; i < descriptor.reservedRange.length; ++i)\n                type.reserved.push([ descriptor.reservedRange[i].start, descriptor.reservedRange[i].end ]);\n        /* Names */ if (descriptor.reservedName)\n            for (i = 0; i < descriptor.reservedName.length; ++i)\n                type.reserved.push(descriptor.reservedName[i]);\n    }\n\n    return type;\n};\n\n/**\n * Converts a type to a descriptor.\n * @returns {Message<IDescriptorProto>} Descriptor\n * @param {string} [edition=\"proto2\"] The syntax or edition to use\n */\nType.prototype.toDescriptor = function toDescriptor(edition) {\n    var descriptor = exports.DescriptorProto.create({ name: this.name }),\n        i;\n\n    /* Fields */ for (i = 0; i < this.fieldsArray.length; ++i) {\n        var fieldDescriptor;\n        descriptor.field.push(fieldDescriptor = this._fieldsArray[i].toDescriptor(edition));\n        if (this._fieldsArray[i] instanceof MapField) { // map fields are repeated FieldNameEntry\n            var keyType = toDescriptorType(this._fieldsArray[i].keyType, this._fieldsArray[i].resolvedKeyType, false),\n                valueType = toDescriptorType(this._fieldsArray[i].type, this._fieldsArray[i].resolvedType, false),\n                valueTypeName = valueType === /* type */ 11 || valueType === /* enum */ 14\n                    ? this._fieldsArray[i].resolvedType && shortname(this.parent, this._fieldsArray[i].resolvedType) || this._fieldsArray[i].type\n                    : undefined;\n            descriptor.nestedType.push(exports.DescriptorProto.create({\n                name: fieldDescriptor.typeName,\n                field: [\n                    exports.FieldDescriptorProto.create({ name: \"key\", number: 1, label: 1, type: keyType }), // can't reference a type or enum\n                    exports.FieldDescriptorProto.create({ name: \"value\", number: 2, label: 1, type: valueType, typeName: valueTypeName })\n                ],\n                options: exports.MessageOptions.create({ mapEntry: true })\n            }));\n        }\n    }\n    /* Oneofs */ for (i = 0; i < this.oneofsArray.length; ++i)\n        descriptor.oneofDecl.push(this._oneofsArray[i].toDescriptor());\n    /* Nested... */ for (i = 0; i < this.nestedArray.length; ++i) {\n        /* Extension fields */ if (this._nestedArray[i] instanceof Field)\n            descriptor.field.push(this._nestedArray[i].toDescriptor(edition));\n        /* Types */ else if (this._nestedArray[i] instanceof Type)\n            descriptor.nestedType.push(this._nestedArray[i].toDescriptor(edition));\n        /* Enums */ else if (this._nestedArray[i] instanceof Enum)\n            descriptor.enumType.push(this._nestedArray[i].toDescriptor());\n        // plain nested namespaces become packages instead in Root#toDescriptor\n    }\n    /* Extension ranges */ if (this.extensions)\n        for (i = 0; i < this.extensions.length; ++i)\n            descriptor.extensionRange.push(exports.DescriptorProto.ExtensionRange.create({ start: this.extensions[i][0], end: this.extensions[i][1] }));\n    /* Reserved... */ if (this.reserved)\n        for (i = 0; i < this.reserved.length; ++i)\n            /* Names */ if (typeof this.reserved[i] === \"string\")\n                descriptor.reservedName.push(this.reserved[i]);\n            /* Ranges */ else\n                descriptor.reservedRange.push(exports.DescriptorProto.ReservedRange.create({ start: this.reserved[i][0], end: this.reserved[i][1] }));\n\n    descriptor.options = toDescriptorOptions(this.options, exports.MessageOptions);\n\n    return descriptor;\n};\n\n// --- Field ---\n\n/**\n * Properties of a FieldDescriptorProto message.\n * @interface IFieldDescriptorProto\n * @property {string} [name] Field name\n * @property {number} [number] Field id\n * @property {IFieldDescriptorProtoLabel} [label] Field rule\n * @property {IFieldDescriptorProtoType} [type] Field basic type\n * @property {string} [typeName] Field type name\n * @property {string} [extendee] Extended type name\n * @property {string} [defaultValue] Literal default value\n * @property {number} [oneofIndex] Oneof index if part of a oneof\n * @property {*} [jsonName] Not supported\n * @property {IFieldOptions} [options] Field options\n */\n\n/**\n * Values of the FieldDescriptorProto.Label enum.\n * @typedef IFieldDescriptorProtoLabel\n * @type {number}\n * @property {number} LABEL_OPTIONAL=1\n * @property {number} LABEL_REQUIRED=2\n * @property {number} LABEL_REPEATED=3\n */\n\n/**\n * Values of the FieldDescriptorProto.Type enum.\n * @typedef IFieldDescriptorProtoType\n * @type {number}\n * @property {number} TYPE_DOUBLE=1\n * @property {number} TYPE_FLOAT=2\n * @property {number} TYPE_INT64=3\n * @property {number} TYPE_UINT64=4\n * @property {number} TYPE_INT32=5\n * @property {number} TYPE_FIXED64=6\n * @property {number} TYPE_FIXED32=7\n * @property {number} TYPE_BOOL=8\n * @property {number} TYPE_STRING=9\n * @property {number} TYPE_GROUP=10\n * @property {number} TYPE_MESSAGE=11\n * @property {number} TYPE_BYTES=12\n * @property {number} TYPE_UINT32=13\n * @property {number} TYPE_ENUM=14\n * @property {number} TYPE_SFIXED32=15\n * @property {number} TYPE_SFIXED64=16\n * @property {number} TYPE_SINT32=17\n * @property {number} TYPE_SINT64=18\n */\n\n/**\n * Properties of a FieldOptions message.\n * @interface IFieldOptions\n * @property {boolean} [packed] Whether packed or not (defaults to `false` for proto2 and `true` for proto3)\n * @property {IFieldOptionsJSType} [jstype] JavaScript value type (not used by protobuf.js)\n */\n\n/**\n * Values of the FieldOptions.JSType enum.\n * @typedef IFieldOptionsJSType\n * @type {number}\n * @property {number} JS_NORMAL=0\n * @property {number} JS_STRING=1\n * @property {number} JS_NUMBER=2\n */\n\n// copied here from parse.js\nvar numberRe = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/;\n\n/**\n * Creates a field from a descriptor.\n *\n * Warning: this is not safe to use with editions protos, since it discards relevant file context.\n *\n * @param {IFieldDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @param {string} [edition=\"proto2\"] The syntax or edition to use\n * @param {boolean} [nested=false] Whether or not this is a top-level object\n * @returns {Field} Field instance\n */\nField.fromDescriptor = function fromDescriptor(descriptor, edition, nested) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.DescriptorProto.decode(descriptor);\n\n    if (typeof descriptor.number !== \"number\")\n        throw Error(\"missing field id\");\n\n    // Rewire field type\n    var fieldType;\n    if (descriptor.typeName && descriptor.typeName.length)\n        fieldType = descriptor.typeName;\n    else\n        fieldType = fromDescriptorType(descriptor.type);\n\n    // Rewire field rule\n    var fieldRule;\n    switch (descriptor.label) {\n        // 0 is reserved for errors\n        case 1: fieldRule = undefined; break;\n        case 2: fieldRule = \"required\"; break;\n        case 3: fieldRule = \"repeated\"; break;\n        default: throw Error(\"illegal label: \" + descriptor.label);\n    }\n\n\tvar extendee = descriptor.extendee;\n\tif (descriptor.extendee !== undefined) {\n\t\textendee = extendee.length ? extendee : undefined;\n\t}\n    var field = new Field(\n        descriptor.name.length ? descriptor.name : \"field\" + descriptor.number,\n        descriptor.number,\n        fieldType,\n        fieldRule,\n        extendee\n    );\n\n    if (!nested)\n        field._edition = edition;\n\n    field.options = fromDescriptorOptions(descriptor.options, exports.FieldOptions);\n    if (descriptor.proto3_optional)\n        field.options.proto3_optional = true;\n\n    if (descriptor.defaultValue && descriptor.defaultValue.length) {\n        var defaultValue = descriptor.defaultValue;\n        switch (defaultValue) {\n            case \"true\": case \"TRUE\":\n                defaultValue = true;\n                break;\n            case \"false\": case \"FALSE\":\n                defaultValue = false;\n                break;\n            default:\n                var match = numberRe.exec(defaultValue);\n                if (match)\n                    defaultValue = parseInt(defaultValue); // eslint-disable-line radix\n                break;\n        }\n        field.setOption(\"default\", defaultValue);\n    }\n\n    if (packableDescriptorType(descriptor.type)) {\n        if (edition === \"proto3\") { // defaults to packed=true (internal preset is packed=true)\n            if (descriptor.options && !descriptor.options.packed)\n                field.setOption(\"packed\", false);\n        } else if ((!edition || edition === \"proto2\") && descriptor.options && descriptor.options.packed) // defaults to packed=false\n            field.setOption(\"packed\", true);\n    }\n\n    return field;\n};\n\n/**\n * Converts a field to a descriptor.\n * @returns {Message<IFieldDescriptorProto>} Descriptor\n * @param {string} [edition=\"proto2\"] The syntax or edition to use\n */\nField.prototype.toDescriptor = function toDescriptor(edition) {\n    var descriptor = exports.FieldDescriptorProto.create({ name: this.name, number: this.id });\n\n    if (this.map) {\n\n        descriptor.type = 11; // message\n        descriptor.typeName = $protobuf.util.ucFirst(this.name); // fieldName -> FieldNameEntry (built in Type#toDescriptor)\n        descriptor.label = 3; // repeated\n\n    } else {\n\n        // Rewire field type\n        switch (descriptor.type = toDescriptorType(this.type, this.resolve().resolvedType, this.delimited)) {\n            case 10: // group\n            case 11: // type\n            case 14: // enum\n                descriptor.typeName = this.resolvedType ? shortname(this.parent, this.resolvedType) : this.type;\n                break;\n        }\n\n        // Rewire field rule\n        if (this.rule === \"repeated\") {\n            descriptor.label = 3;\n        } else if (this.required && edition === \"proto2\") {\n            descriptor.label = 2;\n        } else {\n            descriptor.label = 1;\n        }\n    }\n\n    // Handle extension field\n    descriptor.extendee = this.extensionField ? this.extensionField.parent.fullName : this.extend;\n\n    // Handle part of oneof\n    if (this.partOf)\n        if ((descriptor.oneofIndex = this.parent.oneofsArray.indexOf(this.partOf)) < 0)\n            throw Error(\"missing oneof\");\n\n    if (this.options) {\n        descriptor.options = toDescriptorOptions(this.options, exports.FieldOptions);\n        if (this.options[\"default\"] != null)\n            descriptor.defaultValue = String(this.options[\"default\"]);\n        if (this.options.proto3_optional)\n            descriptor.proto3_optional = true;\n    }\n\n    if (edition === \"proto3\") { // defaults to packed=true\n        if (!this.packed)\n            (descriptor.options || (descriptor.options = exports.FieldOptions.create())).packed = false;\n    } else if ((!edition || edition === \"proto2\") && this.packed) // defaults to packed=false\n        (descriptor.options || (descriptor.options = exports.FieldOptions.create())).packed = true;\n\n    return descriptor;\n};\n\n// --- Enum ---\n\n/**\n * Properties of an EnumDescriptorProto message.\n * @interface IEnumDescriptorProto\n * @property {string} [name] Enum name\n * @property {IEnumValueDescriptorProto[]} [value] Enum values\n * @property {IEnumOptions} [options] Enum options\n */\n\n/**\n * Properties of an EnumValueDescriptorProto message.\n * @interface IEnumValueDescriptorProto\n * @property {string} [name] Name\n * @property {number} [number] Value\n * @property {*} [options] Not supported\n */\n\n/**\n * Properties of an EnumOptions message.\n * @interface IEnumOptions\n * @property {boolean} [allowAlias] Whether aliases are allowed\n * @property {boolean} [deprecated]\n */\n\nvar unnamedEnumIndex = 0;\n\n/**\n * Creates an enum from a descriptor.\n *\n * Warning: this is not safe to use with editions protos, since it discards relevant file context.\n *\n * @param {IEnumDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @param {string} [edition=\"proto2\"] The syntax or edition to use\n * @param {boolean} [nested=false] Whether or not this is a top-level object\n * @returns {Enum} Enum instance\n */\nEnum.fromDescriptor = function fromDescriptor(descriptor, edition, nested) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.EnumDescriptorProto.decode(descriptor);\n\n    // Construct values object\n    var values = {};\n    if (descriptor.value)\n        for (var i = 0; i < descriptor.value.length; ++i) {\n            var name  = descriptor.value[i].name,\n                value = descriptor.value[i].number || 0;\n            values[name && name.length ? name : \"NAME\" + value] = value;\n        }\n\n    var enm = new Enum(\n        descriptor.name && descriptor.name.length ? descriptor.name : \"Enum\" + unnamedEnumIndex++,\n        values,\n        fromDescriptorOptions(descriptor.options, exports.EnumOptions)\n    );\n\n    if (!nested)\n        enm._edition = edition;\n\n    return enm;\n};\n\n/**\n * Converts an enum to a descriptor.\n * @returns {Message<IEnumDescriptorProto>} Descriptor\n */\nEnum.prototype.toDescriptor = function toDescriptor() {\n\n    // Values\n    var values = [];\n    for (var i = 0, ks = Object.keys(this.values); i < ks.length; ++i)\n        values.push(exports.EnumValueDescriptorProto.create({ name: ks[i], number: this.values[ks[i]] }));\n\n    return exports.EnumDescriptorProto.create({\n        name: this.name,\n        value: values,\n        options: toDescriptorOptions(this.options, exports.EnumOptions)\n    });\n};\n\n// --- OneOf ---\n\n/**\n * Properties of a OneofDescriptorProto message.\n * @interface IOneofDescriptorProto\n * @property {string} [name] Oneof name\n * @property {*} [options] Not supported\n */\n\nvar unnamedOneofIndex = 0;\n\n/**\n * Creates a oneof from a descriptor.\n *\n * Warning: this is not safe to use with editions protos, since it discards relevant file context.\n *\n * @param {IOneofDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @returns {OneOf} OneOf instance\n */\nOneOf.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.OneofDescriptorProto.decode(descriptor);\n\n    return new OneOf(\n        // unnamedOneOfIndex is global, not per type, because we have no ref to a type here\n        descriptor.name && descriptor.name.length ? descriptor.name : \"oneof\" + unnamedOneofIndex++\n        // fromDescriptorOptions(descriptor.options, exports.OneofOptions) - only uninterpreted_option\n    );\n};\n\n/**\n * Converts a oneof to a descriptor.\n * @returns {Message<IOneofDescriptorProto>} Descriptor\n */\nOneOf.prototype.toDescriptor = function toDescriptor() {\n    return exports.OneofDescriptorProto.create({\n        name: this.name\n        // options: toDescriptorOptions(this.options, exports.OneofOptions) - only uninterpreted_option\n    });\n};\n\n// --- Service ---\n\n/**\n * Properties of a ServiceDescriptorProto message.\n * @interface IServiceDescriptorProto\n * @property {string} [name] Service name\n * @property {IMethodDescriptorProto[]} [method] Methods\n * @property {IServiceOptions} [options] Options\n */\n\n/**\n * Properties of a ServiceOptions message.\n * @interface IServiceOptions\n * @property {boolean} [deprecated]\n */\n\nvar unnamedServiceIndex = 0;\n\n/**\n * Creates a service from a descriptor.\n *\n * Warning: this is not safe to use with editions protos, since it discards relevant file context.\n *\n * @param {IServiceDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @param {string} [edition=\"proto2\"] The syntax or edition to use\n * @param {boolean} [nested=false] Whether or not this is a top-level object\n * @returns {Service} Service instance\n */\nService.fromDescriptor = function fromDescriptor(descriptor, edition, nested) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.ServiceDescriptorProto.decode(descriptor);\n\n    var service = new Service(descriptor.name && descriptor.name.length ? descriptor.name : \"Service\" + unnamedServiceIndex++, fromDescriptorOptions(descriptor.options, exports.ServiceOptions));\n    if (!nested)\n        service._edition = edition;\n    if (descriptor.method)\n        for (var i = 0; i < descriptor.method.length; ++i)\n            service.add(Method.fromDescriptor(descriptor.method[i]));\n\n    return service;\n};\n\n/**\n * Converts a service to a descriptor.\n * @returns {Message<IServiceDescriptorProto>} Descriptor\n */\nService.prototype.toDescriptor = function toDescriptor() {\n\n    // Methods\n    var methods = [];\n    for (var i = 0; i < this.methodsArray.length; ++i)\n        methods.push(this._methodsArray[i].toDescriptor());\n\n    return exports.ServiceDescriptorProto.create({\n        name: this.name,\n        method: methods,\n        options: toDescriptorOptions(this.options, exports.ServiceOptions)\n    });\n};\n\n// --- Method ---\n\n/**\n * Properties of a MethodDescriptorProto message.\n * @interface IMethodDescriptorProto\n * @property {string} [name] Method name\n * @property {string} [inputType] Request type name\n * @property {string} [outputType] Response type name\n * @property {IMethodOptions} [options] Not supported\n * @property {boolean} [clientStreaming=false] Whether requests are streamed\n * @property {boolean} [serverStreaming=false] Whether responses are streamed\n */\n\n/**\n * Properties of a MethodOptions message.\n *\n * Warning: this is not safe to use with editions protos, since it discards relevant file context.\n *\n * @interface IMethodOptions\n * @property {boolean} [deprecated]\n */\n\nvar unnamedMethodIndex = 0;\n\n/**\n * Creates a method from a descriptor.\n * @param {IMethodDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @returns {Method} Reflected method instance\n */\nMethod.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.MethodDescriptorProto.decode(descriptor);\n\n    return new Method(\n        // unnamedMethodIndex is global, not per service, because we have no ref to a service here\n        descriptor.name && descriptor.name.length ? descriptor.name : \"Method\" + unnamedMethodIndex++,\n        \"rpc\",\n        descriptor.inputType,\n        descriptor.outputType,\n        Boolean(descriptor.clientStreaming),\n        Boolean(descriptor.serverStreaming),\n        fromDescriptorOptions(descriptor.options, exports.MethodOptions)\n    );\n};\n\n/**\n * Converts a method to a descriptor.\n * @returns {Message<IMethodDescriptorProto>} Descriptor\n */\nMethod.prototype.toDescriptor = function toDescriptor() {\n    return exports.MethodDescriptorProto.create({\n        name: this.name,\n        inputType: this.resolvedRequestType ? this.resolvedRequestType.fullName : this.requestType,\n        outputType: this.resolvedResponseType ? this.resolvedResponseType.fullName : this.responseType,\n        clientStreaming: this.requestStream,\n        serverStreaming: this.responseStream,\n        options: toDescriptorOptions(this.options, exports.MethodOptions)\n    });\n};\n\n// --- utility ---\n\n// Converts a descriptor type to a protobuf.js basic type\nfunction fromDescriptorType(type) {\n    switch (type) {\n        // 0 is reserved for errors\n        case 1: return \"double\";\n        case 2: return \"float\";\n        case 3: return \"int64\";\n        case 4: return \"uint64\";\n        case 5: return \"int32\";\n        case 6: return \"fixed64\";\n        case 7: return \"fixed32\";\n        case 8: return \"bool\";\n        case 9: return \"string\";\n        case 12: return \"bytes\";\n        case 13: return \"uint32\";\n        case 15: return \"sfixed32\";\n        case 16: return \"sfixed64\";\n        case 17: return \"sint32\";\n        case 18: return \"sint64\";\n    }\n    throw Error(\"illegal type: \" + type);\n}\n\n// Tests if a descriptor type is packable\nfunction packableDescriptorType(type) {\n    switch (type) {\n        case 1: // double\n        case 2: // float\n        case 3: // int64\n        case 4: // uint64\n        case 5: // int32\n        case 6: // fixed64\n        case 7: // fixed32\n        case 8: // bool\n        case 13: // uint32\n        case 14: // enum (!)\n        case 15: // sfixed32\n        case 16: // sfixed64\n        case 17: // sint32\n        case 18: // sint64\n            return true;\n    }\n    return false;\n}\n\n// Converts a protobuf.js basic type to a descriptor type\nfunction toDescriptorType(type, resolvedType, delimited) {\n    switch (type) {\n        // 0 is reserved for errors\n        case \"double\": return 1;\n        case \"float\": return 2;\n        case \"int64\": return 3;\n        case \"uint64\": return 4;\n        case \"int32\": return 5;\n        case \"fixed64\": return 6;\n        case \"fixed32\": return 7;\n        case \"bool\": return 8;\n        case \"string\": return 9;\n        case \"bytes\": return 12;\n        case \"uint32\": return 13;\n        case \"sfixed32\": return 15;\n        case \"sfixed64\": return 16;\n        case \"sint32\": return 17;\n        case \"sint64\": return 18;\n    }\n    if (resolvedType instanceof Enum)\n        return 14;\n    if (resolvedType instanceof Type)\n        return delimited ? 10 : 11;\n    throw Error(\"illegal type: \" + type);\n}\n\nfunction fromDescriptorOptionsRecursive(obj, type) {\n    var val = {};\n    for (var i = 0, field, key; i < type.fieldsArray.length; ++i) {\n        if ((key = (field = type._fieldsArray[i]).name) === \"uninterpretedOption\") continue;\n        if (!Object.prototype.hasOwnProperty.call(obj, key)) continue;\n\n        var newKey = underScore(key);\n        if (field.resolvedType instanceof Type) {\n            val[newKey] = fromDescriptorOptionsRecursive(obj[key], field.resolvedType);\n        } else if(field.resolvedType instanceof Enum) {\n            val[newKey] = field.resolvedType.valuesById[obj[key]];\n        } else {\n            val[newKey] = obj[key];\n        }\n    }\n    return val;\n}\n\n// Converts descriptor options to an options object\nfunction fromDescriptorOptions(options, type) {\n    if (!options)\n        return undefined;\n    return fromDescriptorOptionsRecursive(type.toObject(options), type);\n}\n\nfunction toDescriptorOptionsRecursive(obj, type) {\n    var val = {};\n    var keys = Object.keys(obj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newKey = $protobuf.util.camelCase(key);\n        if (!Object.prototype.hasOwnProperty.call(type.fields, newKey)) continue;\n        var field = type.fields[newKey];\n        if (field.resolvedType instanceof Type) {\n            val[newKey] = toDescriptorOptionsRecursive(obj[key], field.resolvedType);\n        } else {\n            val[newKey] = obj[key];\n        }\n        if (field.repeated && !Array.isArray(val[newKey])) {\n            val[newKey] = [val[newKey]];\n        }\n    }\n    return val;\n}\n\n// Converts an options object to descriptor options\nfunction toDescriptorOptions(options, type) {\n    if (!options)\n        return undefined;\n    return type.fromObject(toDescriptorOptionsRecursive(options, type));\n}\n\n// Calculates the shortest relative path from `from` to `to`.\nfunction shortname(from, to) {\n    var fromPath = from.fullName.split(\".\"),\n        toPath = to.fullName.split(\".\"),\n        i = 0,\n        j = 0,\n        k = toPath.length - 1;\n    if (!(from instanceof Root) && to instanceof Namespace)\n        while (i < fromPath.length && j < k && fromPath[i] === toPath[j]) {\n            var other = to.lookup(fromPath[i++], true);\n            if (other !== null && other !== to)\n                break;\n            ++j;\n        }\n    else\n        for (; i < fromPath.length && j < k && fromPath[i] === toPath[j]; ++i, ++j);\n    return toPath.slice(j).join(\".\");\n}\n\n// copied here from cli/targets/proto.js\nfunction underScore(str) {\n    return str.substring(0,1)\n         + str.substring(1)\n               .replace(/([A-Z])(?=[a-z]|$)/g, function($0, $1) { return \"_\" + $1.toLowerCase(); });\n}\n\nfunction editionFromDescriptor(fileDescriptor) {\n    if (fileDescriptor.syntax === \"editions\") {\n        switch(fileDescriptor.edition) {\n            case exports.Edition.EDITION_2023:\n                return \"2023\";\n            default:\n                throw new Error(\"Unsupported edition \" + fileDescriptor.edition);\n        }\n    }\n    if (fileDescriptor.syntax === \"proto3\") {\n        return \"proto3\";\n    }\n    return \"proto2\";\n}\n\nfunction editionToDescriptor(edition, fileDescriptor) {\n    if (!edition) return;\n    if (edition === \"proto2\" || edition === \"proto3\") {\n        fileDescriptor.syntax = edition;\n    } else {\n        fileDescriptor.syntax = \"editions\";\n        switch(edition) {\n            case \"2023\":\n                fileDescriptor.edition = exports.Edition.EDITION_2023;\n                break;\n            default:\n                throw new Error(\"Unsupported edition \" + edition);\n        }\n    }\n}\n\n// --- exports ---\n\n/**\n * Reflected file descriptor set.\n * @name FileDescriptorSet\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected file descriptor proto.\n * @name FileDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected descriptor proto.\n * @name DescriptorProto\n * @type {Type}\n * @property {Type} ExtensionRange\n * @property {Type} ReservedRange\n * @const\n * @tstype $protobuf.Type & {\n *     ExtensionRange: $protobuf.Type,\n *     ReservedRange: $protobuf.Type\n * }\n */\n\n/**\n * Reflected field descriptor proto.\n * @name FieldDescriptorProto\n * @type {Type}\n * @property {Enum} Label\n * @property {Enum} Type\n * @const\n * @tstype $protobuf.Type & {\n *     Label: $protobuf.Enum,\n *     Type: $protobuf.Enum\n * }\n */\n\n/**\n * Reflected oneof descriptor proto.\n * @name OneofDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum descriptor proto.\n * @name EnumDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected service descriptor proto.\n * @name ServiceDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum value descriptor proto.\n * @name EnumValueDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected method descriptor proto.\n * @name MethodDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected file options.\n * @name FileOptions\n * @type {Type}\n * @property {Enum} OptimizeMode\n * @const\n * @tstype $protobuf.Type & {\n *     OptimizeMode: $protobuf.Enum\n * }\n */\n\n/**\n * Reflected message options.\n * @name MessageOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected field options.\n * @name FieldOptions\n * @type {Type}\n * @property {Enum} CType\n * @property {Enum} JSType\n * @const\n * @tstype $protobuf.Type & {\n *     CType: $protobuf.Enum,\n *     JSType: $protobuf.Enum\n * }\n */\n\n/**\n * Reflected oneof options.\n * @name OneofOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum options.\n * @name EnumOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum value options.\n * @name EnumValueOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected service options.\n * @name ServiceOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected method options.\n * @name MethodOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected uninterpretet option.\n * @name UninterpretedOption\n * @type {Type}\n * @property {Type} NamePart\n * @const\n * @tstype $protobuf.Type & {\n *     NamePart: $protobuf.Type\n * }\n */\n\n/**\n * Reflected source code info.\n * @name SourceCodeInfo\n * @type {Type}\n * @property {Type} Location\n * @const\n * @tstype $protobuf.Type & {\n *     Location: $protobuf.Type\n * }\n */\n\n/**\n * Reflected generated code info.\n * @name GeneratedCodeInfo\n * @type {Type}\n * @property {Type} Annotation\n * @const\n * @tstype $protobuf.Type & {\n *     Annotation: $protobuf.Type\n * }\n */\n", "{\n  \"nested\": {\n    \"google\": {\n      \"nested\": {\n        \"protobuf\": {\n          \"nested\": {\n            \"Api\": {\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"methods\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Method\",\n                  \"id\": 2\n                },\n                \"options\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Option\",\n                  \"id\": 3\n                },\n                \"version\": {\n                  \"type\": \"string\",\n                  \"id\": 4\n                },\n                \"sourceContext\": {\n                  \"type\": \"SourceContext\",\n                  \"id\": 5\n                },\n                \"mixins\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Mixin\",\n                  \"id\": 6\n                },\n                \"syntax\": {\n                  \"type\": \"Syntax\",\n                  \"id\": 7\n                }\n              }\n            },\n            \"Method\": {\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"requestTypeUrl\": {\n                  \"type\": \"string\",\n                  \"id\": 2\n                },\n                \"requestStreaming\": {\n                  \"type\": \"bool\",\n                  \"id\": 3\n                },\n                \"responseTypeUrl\": {\n                  \"type\": \"string\",\n                  \"id\": 4\n                },\n                \"responseStreaming\": {\n                  \"type\": \"bool\",\n                  \"id\": 5\n                },\n                \"options\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Option\",\n                  \"id\": 6\n                },\n                \"syntax\": {\n                  \"type\": \"Syntax\",\n                  \"id\": 7\n                }\n              }\n            },\n            \"Mixin\": {\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"root\": {\n                  \"type\": \"string\",\n                  \"id\": 2\n                }\n              }\n            },\n            \"SourceContext\": {\n              \"fields\": {\n                \"fileName\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                }\n              }\n            },\n            \"Option\": {\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"value\": {\n                  \"type\": \"Any\",\n                  \"id\": 2\n                }\n              }\n            },\n            \"Syntax\": {\n              \"values\": {\n                \"SYNTAX_PROTO2\": 0,\n                \"SYNTAX_PROTO3\": 1\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "{\n  \"nested\": {\n    \"google\": {\n      \"nested\": {\n        \"protobuf\": {\n          \"nested\": {\n            \"SourceContext\": {\n              \"fields\": {\n                \"fileName\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "{\n  \"nested\": {\n    \"google\": {\n      \"nested\": {\n        \"protobuf\": {\n          \"nested\": {\n            \"Type\": {\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"fields\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Field\",\n                  \"id\": 2\n                },\n                \"oneofs\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"string\",\n                  \"id\": 3\n                },\n                \"options\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Option\",\n                  \"id\": 4\n                },\n                \"sourceContext\": {\n                  \"type\": \"SourceContext\",\n                  \"id\": 5\n                },\n                \"syntax\": {\n                  \"type\": \"Syntax\",\n                  \"id\": 6\n                }\n              }\n            },\n            \"Field\": {\n              \"fields\": {\n                \"kind\": {\n                  \"type\": \"Kind\",\n                  \"id\": 1\n                },\n                \"cardinality\": {\n                  \"type\": \"Cardinality\",\n                  \"id\": 2\n                },\n                \"number\": {\n                  \"type\": \"int32\",\n                  \"id\": 3\n                },\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 4\n                },\n                \"typeUrl\": {\n                  \"type\": \"string\",\n                  \"id\": 6\n                },\n                \"oneofIndex\": {\n                  \"type\": \"int32\",\n                  \"id\": 7\n                },\n                \"packed\": {\n                  \"type\": \"bool\",\n                  \"id\": 8\n                },\n                \"options\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Option\",\n                  \"id\": 9\n                },\n                \"jsonName\": {\n                  \"type\": \"string\",\n                  \"id\": 10\n                },\n                \"defaultValue\": {\n                  \"type\": \"string\",\n                  \"id\": 11\n                }\n              },\n              \"nested\": {\n                \"Kind\": {\n                  \"values\": {\n                    \"TYPE_UNKNOWN\": 0,\n                    \"TYPE_DOUBLE\": 1,\n                    \"TYPE_FLOAT\": 2,\n                    \"TYPE_INT64\": 3,\n                    \"TYPE_UINT64\": 4,\n                    \"TYPE_INT32\": 5,\n                    \"TYPE_FIXED64\": 6,\n                    \"TYPE_FIXED32\": 7,\n                    \"TYPE_BOOL\": 8,\n                    \"TYPE_STRING\": 9,\n                    \"TYPE_GROUP\": 10,\n                    \"TYPE_MESSAGE\": 11,\n                    \"TYPE_BYTES\": 12,\n                    \"TYPE_UINT32\": 13,\n                    \"TYPE_ENUM\": 14,\n                    \"TYPE_SFIXED32\": 15,\n                    \"TYPE_SFIXED64\": 16,\n                    \"TYPE_SINT32\": 17,\n                    \"TYPE_SINT64\": 18\n                  }\n                },\n                \"Cardinality\": {\n                  \"values\": {\n                    \"CARDINALITY_UNKNOWN\": 0,\n                    \"CARDINALITY_OPTIONAL\": 1,\n                    \"CARDINALITY_REQUIRED\": 2,\n                    \"CARDINALITY_REPEATED\": 3\n                  }\n                }\n              }\n            },\n            \"Enum\": {\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"enumvalue\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"EnumValue\",\n                  \"id\": 2\n                },\n                \"options\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Option\",\n                  \"id\": 3\n                },\n                \"sourceContext\": {\n                  \"type\": \"SourceContext\",\n                  \"id\": 4\n                },\n                \"syntax\": {\n                  \"type\": \"Syntax\",\n                  \"id\": 5\n                }\n              }\n            },\n            \"EnumValue\": {\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"number\": {\n                  \"type\": \"int32\",\n                  \"id\": 2\n                },\n                \"options\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Option\",\n                  \"id\": 3\n                }\n              }\n            },\n            \"Option\": {\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"value\": {\n                  \"type\": \"Any\",\n                  \"id\": 2\n                }\n              }\n            },\n            \"Syntax\": {\n              \"values\": {\n                \"SYNTAX_PROTO2\": 0,\n                \"SYNTAX_PROTO3\": 1\n              }\n            },\n            \"Any\": {\n              \"fields\": {\n                \"type_url\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"value\": {\n                  \"type\": \"bytes\",\n                  \"id\": 2\n                }\n              }\n            },\n            \"SourceContext\": {\n              \"fields\": {\n                \"fileName\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "\"use strict\";\n/**\n * @license\n * Copyright 2018 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addCommonProtos = exports.loadProtosWithOptionsSync = exports.loadProtosWithOptions = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst Protobuf = require(\"protobufjs\");\nfunction addIncludePathResolver(root, includePaths) {\n    const originalResolvePath = root.resolvePath;\n    root.resolvePath = (origin, target) => {\n        if (path.isAbsolute(target)) {\n            return target;\n        }\n        for (const directory of includePaths) {\n            const fullPath = path.join(directory, target);\n            try {\n                fs.accessSync(fullPath, fs.constants.R_OK);\n                return fullPath;\n            }\n            catch (err) {\n                continue;\n            }\n        }\n        process.emitWarning(`${target} not found in any of the include paths ${includePaths}`);\n        return originalResolvePath(origin, target);\n    };\n}\nasync function loadProtosWithOptions(filename, options) {\n    const root = new Protobuf.Root();\n    options = options || {};\n    if (!!options.includeDirs) {\n        if (!Array.isArray(options.includeDirs)) {\n            return Promise.reject(new Error('The includeDirs option must be an array'));\n        }\n        addIncludePathResolver(root, options.includeDirs);\n    }\n    const loadedRoot = await root.load(filename, options);\n    loadedRoot.resolveAll();\n    return loadedRoot;\n}\nexports.loadProtosWithOptions = loadProtosWithOptions;\nfunction loadProtosWithOptionsSync(filename, options) {\n    const root = new Protobuf.Root();\n    options = options || {};\n    if (!!options.includeDirs) {\n        if (!Array.isArray(options.includeDirs)) {\n            throw new Error('The includeDirs option must be an array');\n        }\n        addIncludePathResolver(root, options.includeDirs);\n    }\n    const loadedRoot = root.loadSync(filename, options);\n    loadedRoot.resolveAll();\n    return loadedRoot;\n}\nexports.loadProtosWithOptionsSync = loadProtosWithOptionsSync;\n/**\n * Load Google's well-known proto files that aren't exposed by Protobuf.js.\n */\nfunction addCommonProtos() {\n    // Protobuf.js exposes: any, duration, empty, field_mask, struct, timestamp,\n    // and wrappers. compiler/plugin is excluded in Protobuf.js and here.\n    // Using constant strings for compatibility with tools like Webpack\n    const apiDescriptor = require('protobufjs/google/protobuf/api.json');\n    const descriptorDescriptor = require('protobufjs/google/protobuf/descriptor.json');\n    const sourceContextDescriptor = require('protobufjs/google/protobuf/source_context.json');\n    const typeDescriptor = require('protobufjs/google/protobuf/type.json');\n    Protobuf.common('api', apiDescriptor.nested.google.nested.protobuf.nested);\n    Protobuf.common('descriptor', descriptorDescriptor.nested.google.nested.protobuf.nested);\n    Protobuf.common('source_context', sourceContextDescriptor.nested.google.nested.protobuf.nested);\n    Protobuf.common('type', typeDescriptor.nested.google.nested.protobuf.nested);\n}\nexports.addCommonProtos = addCommonProtos;\n", "// GENERATED FILE. DO NOT EDIT.\n(function (global, factory) {\n  function preferDefault(exports) {\n    return exports.default || exports;\n  }\n  if (typeof define === \"function\" && define.amd) {\n    define([], function () {\n      var exports = {};\n      factory(exports);\n      return preferDefault(exports);\n    });\n  } else if (typeof exports === \"object\") {\n    factory(exports);\n    if (typeof module === \"object\") module.exports = preferDefault(exports);\n  } else {\n    (function () {\n      var exports = {};\n      factory(exports);\n      global.Long = preferDefault(exports);\n    })();\n  }\n})(\n  typeof globalThis !== \"undefined\"\n    ? globalThis\n    : typeof self !== \"undefined\"\n      ? self\n      : this,\n  function (_exports) {\n    \"use strict\";\n\n    Object.defineProperty(_exports, \"__esModule\", {\n      value: true,\n    });\n    _exports.default = void 0;\n    /**\n     * @license\n     * Copyright 2009 The Closure Library Authors\n     * Copyright 2020 Daniel Wirtz / The long.js Authors.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     *\n     * SPDX-License-Identifier: Apache-2.0\n     */\n\n    // WebAssembly optimizations to do native i64 multiplication and divide\n    var wasm = null;\n    try {\n      wasm = new WebAssembly.Instance(\n        new WebAssembly.Module(\n          new Uint8Array([\n            // \\0asm\n            0, 97, 115, 109,\n            // version 1\n            1, 0, 0, 0,\n            // section \"type\"\n            1, 13, 2,\n            // 0, () => i32\n            96, 0, 1, 127,\n            // 1, (i32, i32, i32, i32) => i32\n            96, 4, 127, 127, 127, 127, 1, 127,\n            // section \"function\"\n            3, 7, 6,\n            // 0, type 0\n            0,\n            // 1, type 1\n            1,\n            // 2, type 1\n            1,\n            // 3, type 1\n            1,\n            // 4, type 1\n            1,\n            // 5, type 1\n            1,\n            // section \"global\"\n            6, 6, 1,\n            // 0, \"high\", mutable i32\n            127, 1, 65, 0, 11,\n            // section \"export\"\n            7, 50, 6,\n            // 0, \"mul\"\n            3, 109, 117, 108, 0, 1,\n            // 1, \"div_s\"\n            5, 100, 105, 118, 95, 115, 0, 2,\n            // 2, \"div_u\"\n            5, 100, 105, 118, 95, 117, 0, 3,\n            // 3, \"rem_s\"\n            5, 114, 101, 109, 95, 115, 0, 4,\n            // 4, \"rem_u\"\n            5, 114, 101, 109, 95, 117, 0, 5,\n            // 5, \"get_high\"\n            8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0,\n            // section \"code\"\n            10, 191, 1, 6,\n            // 0, \"get_high\"\n            4, 0, 35, 0, 11,\n            // 1, \"mul\"\n            36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173,\n            32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0,\n            32, 4, 167, 11,\n            // 2, \"div_s\"\n            36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173,\n            32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0,\n            32, 4, 167, 11,\n            // 3, \"div_u\"\n            36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173,\n            32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0,\n            32, 4, 167, 11,\n            // 4, \"rem_s\"\n            36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173,\n            32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0,\n            32, 4, 167, 11,\n            // 5, \"rem_u\"\n            36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173,\n            32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0,\n            32, 4, 167, 11,\n          ]),\n        ),\n        {},\n      ).exports;\n    } catch {\n      // no wasm support :(\n    }\n\n    /**\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n     *  See the from* functions below for more convenient ways of constructing Longs.\n     * @exports Long\n     * @class A Long class for representing a 64 bit two's-complement integer value.\n     * @param {number} low The low (signed) 32 bits of the long\n     * @param {number} high The high (signed) 32 bits of the long\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n     * @constructor\n     */\n    function Long(low, high, unsigned) {\n      /**\n       * The low 32 bits as a signed value.\n       * @type {number}\n       */\n      this.low = low | 0;\n\n      /**\n       * The high 32 bits as a signed value.\n       * @type {number}\n       */\n      this.high = high | 0;\n\n      /**\n       * Whether unsigned or not.\n       * @type {boolean}\n       */\n      this.unsigned = !!unsigned;\n    }\n\n    // The internal representation of a long is the two given signed, 32-bit values.\n    // We use 32-bit pieces because these are the size of integers on which\n    // Javascript performs bit-operations.  For operations like addition and\n    // multiplication, we split each number into 16 bit pieces, which can easily be\n    // multiplied within Javascript's floating-point representation without overflow\n    // or change in sign.\n    //\n    // In the algorithms below, we frequently reduce the negative case to the\n    // positive case by negating the input(s) and then post-processing the result.\n    // Note that we must ALWAYS check specially whether those values are MIN_VALUE\n    // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n    // a positive number, it overflows back into a negative).  Not handling this\n    // case would often result in infinite recursion.\n    //\n    // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n    // methods on which they depend.\n\n    /**\n     * An indicator used to reliably determine if an object is a Long or not.\n     * @type {boolean}\n     * @const\n     * @private\n     */\n    Long.prototype.__isLong__;\n    Object.defineProperty(Long.prototype, \"__isLong__\", {\n      value: true,\n    });\n\n    /**\n     * @function\n     * @param {*} obj Object\n     * @returns {boolean}\n     * @inner\n     */\n    function isLong(obj) {\n      return (obj && obj[\"__isLong__\"]) === true;\n    }\n\n    /**\n     * @function\n     * @param {*} value number\n     * @returns {number}\n     * @inner\n     */\n    function ctz32(value) {\n      var c = Math.clz32(value & -value);\n      return value ? 31 - c : c;\n    }\n\n    /**\n     * Tests if the specified object is a Long.\n     * @function\n     * @param {*} obj Object\n     * @returns {boolean}\n     */\n    Long.isLong = isLong;\n\n    /**\n     * A cache of the Long representations of small integer values.\n     * @type {!Object}\n     * @inner\n     */\n    var INT_CACHE = {};\n\n    /**\n     * A cache of the Long representations of small unsigned integer values.\n     * @type {!Object}\n     * @inner\n     */\n    var UINT_CACHE = {};\n\n    /**\n     * @param {number} value\n     * @param {boolean=} unsigned\n     * @returns {!Long}\n     * @inner\n     */\n    function fromInt(value, unsigned) {\n      var obj, cachedObj, cache;\n      if (unsigned) {\n        value >>>= 0;\n        if ((cache = 0 <= value && value < 256)) {\n          cachedObj = UINT_CACHE[value];\n          if (cachedObj) return cachedObj;\n        }\n        obj = fromBits(value, 0, true);\n        if (cache) UINT_CACHE[value] = obj;\n        return obj;\n      } else {\n        value |= 0;\n        if ((cache = -128 <= value && value < 128)) {\n          cachedObj = INT_CACHE[value];\n          if (cachedObj) return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache) INT_CACHE[value] = obj;\n        return obj;\n      }\n    }\n\n    /**\n     * Returns a Long representing the given 32 bit integer value.\n     * @function\n     * @param {number} value The 32 bit integer in question\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n     * @returns {!Long} The corresponding Long value\n     */\n    Long.fromInt = fromInt;\n\n    /**\n     * @param {number} value\n     * @param {boolean=} unsigned\n     * @returns {!Long}\n     * @inner\n     */\n    function fromNumber(value, unsigned) {\n      if (isNaN(value)) return unsigned ? UZERO : ZERO;\n      if (unsigned) {\n        if (value < 0) return UZERO;\n        if (value >= TWO_PWR_64_DBL) return MAX_UNSIGNED_VALUE;\n      } else {\n        if (value <= -TWO_PWR_63_DBL) return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL) return MAX_VALUE;\n      }\n      if (value < 0) return fromNumber(-value, unsigned).neg();\n      return fromBits(\n        value % TWO_PWR_32_DBL | 0,\n        (value / TWO_PWR_32_DBL) | 0,\n        unsigned,\n      );\n    }\n\n    /**\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n     * @function\n     * @param {number} value The number in question\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n     * @returns {!Long} The corresponding Long value\n     */\n    Long.fromNumber = fromNumber;\n\n    /**\n     * @param {number} lowBits\n     * @param {number} highBits\n     * @param {boolean=} unsigned\n     * @returns {!Long}\n     * @inner\n     */\n    function fromBits(lowBits, highBits, unsigned) {\n      return new Long(lowBits, highBits, unsigned);\n    }\n\n    /**\n     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n     *  assumed to use 32 bits.\n     * @function\n     * @param {number} lowBits The low 32 bits\n     * @param {number} highBits The high 32 bits\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n     * @returns {!Long} The corresponding Long value\n     */\n    Long.fromBits = fromBits;\n\n    /**\n     * @function\n     * @param {number} base\n     * @param {number} exponent\n     * @returns {number}\n     * @inner\n     */\n    var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n\n    /**\n     * @param {string} str\n     * @param {(boolean|number)=} unsigned\n     * @param {number=} radix\n     * @returns {!Long}\n     * @inner\n     */\n    function fromString(str, unsigned, radix) {\n      if (str.length === 0) throw Error(\"empty string\");\n      if (typeof unsigned === \"number\") {\n        // For goog.math.long compatibility\n        radix = unsigned;\n        unsigned = false;\n      } else {\n        unsigned = !!unsigned;\n      }\n      if (\n        str === \"NaN\" ||\n        str === \"Infinity\" ||\n        str === \"+Infinity\" ||\n        str === \"-Infinity\"\n      )\n        return unsigned ? UZERO : ZERO;\n      radix = radix || 10;\n      if (radix < 2 || 36 < radix) throw RangeError(\"radix\");\n      var p;\n      if ((p = str.indexOf(\"-\")) > 0) throw Error(\"interior hyphen\");\n      else if (p === 0) {\n        return fromString(str.substring(1), unsigned, radix).neg();\n      }\n\n      // Do several (8) digits each time through the loop, so as to\n      // minimize the calls to the very expensive emulated div.\n      var radixToPower = fromNumber(pow_dbl(radix, 8));\n      var result = ZERO;\n      for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i),\n          value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n          var power = fromNumber(pow_dbl(radix, size));\n          result = result.mul(power).add(fromNumber(value));\n        } else {\n          result = result.mul(radixToPower);\n          result = result.add(fromNumber(value));\n        }\n      }\n      result.unsigned = unsigned;\n      return result;\n    }\n\n    /**\n     * Returns a Long representation of the given string, written using the specified radix.\n     * @function\n     * @param {string} str The textual representation of the Long\n     * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n     * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n     * @returns {!Long} The corresponding Long value\n     */\n    Long.fromString = fromString;\n\n    /**\n     * @function\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n     * @param {boolean=} unsigned\n     * @returns {!Long}\n     * @inner\n     */\n    function fromValue(val, unsigned) {\n      if (typeof val === \"number\") return fromNumber(val, unsigned);\n      if (typeof val === \"string\") return fromString(val, unsigned);\n      // Throws for non-objects, converts non-instanceof Long:\n      return fromBits(\n        val.low,\n        val.high,\n        typeof unsigned === \"boolean\" ? unsigned : val.unsigned,\n      );\n    }\n\n    /**\n     * Converts the specified value to a Long using the appropriate from* function for its type.\n     * @function\n     * @param {!Long|number|bigint|string|!{low: number, high: number, unsigned: boolean}} val Value\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n     * @returns {!Long}\n     */\n    Long.fromValue = fromValue;\n\n    // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n    // no runtime penalty for these.\n\n    /**\n     * @type {number}\n     * @const\n     * @inner\n     */\n    var TWO_PWR_16_DBL = 1 << 16;\n\n    /**\n     * @type {number}\n     * @const\n     * @inner\n     */\n    var TWO_PWR_24_DBL = 1 << 24;\n\n    /**\n     * @type {number}\n     * @const\n     * @inner\n     */\n    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n\n    /**\n     * @type {number}\n     * @const\n     * @inner\n     */\n    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n\n    /**\n     * @type {number}\n     * @const\n     * @inner\n     */\n    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n\n    /**\n     * @type {!Long}\n     * @const\n     * @inner\n     */\n    var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n\n    /**\n     * @type {!Long}\n     * @inner\n     */\n    var ZERO = fromInt(0);\n\n    /**\n     * Signed zero.\n     * @type {!Long}\n     */\n    Long.ZERO = ZERO;\n\n    /**\n     * @type {!Long}\n     * @inner\n     */\n    var UZERO = fromInt(0, true);\n\n    /**\n     * Unsigned zero.\n     * @type {!Long}\n     */\n    Long.UZERO = UZERO;\n\n    /**\n     * @type {!Long}\n     * @inner\n     */\n    var ONE = fromInt(1);\n\n    /**\n     * Signed one.\n     * @type {!Long}\n     */\n    Long.ONE = ONE;\n\n    /**\n     * @type {!Long}\n     * @inner\n     */\n    var UONE = fromInt(1, true);\n\n    /**\n     * Unsigned one.\n     * @type {!Long}\n     */\n    Long.UONE = UONE;\n\n    /**\n     * @type {!Long}\n     * @inner\n     */\n    var NEG_ONE = fromInt(-1);\n\n    /**\n     * Signed negative one.\n     * @type {!Long}\n     */\n    Long.NEG_ONE = NEG_ONE;\n\n    /**\n     * @type {!Long}\n     * @inner\n     */\n    var MAX_VALUE = fromBits(0xffffffff | 0, 0x7fffffff | 0, false);\n\n    /**\n     * Maximum signed value.\n     * @type {!Long}\n     */\n    Long.MAX_VALUE = MAX_VALUE;\n\n    /**\n     * @type {!Long}\n     * @inner\n     */\n    var MAX_UNSIGNED_VALUE = fromBits(0xffffffff | 0, 0xffffffff | 0, true);\n\n    /**\n     * Maximum unsigned value.\n     * @type {!Long}\n     */\n    Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n\n    /**\n     * @type {!Long}\n     * @inner\n     */\n    var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n\n    /**\n     * Minimum signed value.\n     * @type {!Long}\n     */\n    Long.MIN_VALUE = MIN_VALUE;\n\n    /**\n     * @alias Long.prototype\n     * @inner\n     */\n    var LongPrototype = Long.prototype;\n\n    /**\n     * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n     * @this {!Long}\n     * @returns {number}\n     */\n    LongPrototype.toInt = function toInt() {\n      return this.unsigned ? this.low >>> 0 : this.low;\n    };\n\n    /**\n     * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n     * @this {!Long}\n     * @returns {number}\n     */\n    LongPrototype.toNumber = function toNumber() {\n      if (this.unsigned)\n        return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);\n      return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n    };\n\n    /**\n     * Converts the Long to a string written in the specified radix.\n     * @this {!Long}\n     * @param {number=} radix Radix (2-36), defaults to 10\n     * @returns {string}\n     * @override\n     * @throws {RangeError} If `radix` is out of range\n     */\n    LongPrototype.toString = function toString(radix) {\n      radix = radix || 10;\n      if (radix < 2 || 36 < radix) throw RangeError(\"radix\");\n      if (this.isZero()) return \"0\";\n      if (this.isNegative()) {\n        // Unsigned Longs are never negative\n        if (this.eq(MIN_VALUE)) {\n          // We need to change the Long value before it can be negated, so we remove\n          // the bottom-most digit in this base and then recurse to do the rest.\n          var radixLong = fromNumber(radix),\n            div = this.div(radixLong),\n            rem1 = div.mul(radixLong).sub(this);\n          return div.toString(radix) + rem1.toInt().toString(radix);\n        } else return \"-\" + this.neg().toString(radix);\n      }\n\n      // Do several (6) digits each time through the loop, so as to\n      // minimize the calls to the very expensive emulated div.\n      var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\n        rem = this;\n      var result = \"\";\n      while (true) {\n        var remDiv = rem.div(radixToPower),\n          intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\n          digits = intval.toString(radix);\n        rem = remDiv;\n        if (rem.isZero()) return digits + result;\n        else {\n          while (digits.length < 6) digits = \"0\" + digits;\n          result = \"\" + digits + result;\n        }\n      }\n    };\n\n    /**\n     * Gets the high 32 bits as a signed integer.\n     * @this {!Long}\n     * @returns {number} Signed high bits\n     */\n    LongPrototype.getHighBits = function getHighBits() {\n      return this.high;\n    };\n\n    /**\n     * Gets the high 32 bits as an unsigned integer.\n     * @this {!Long}\n     * @returns {number} Unsigned high bits\n     */\n    LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\n      return this.high >>> 0;\n    };\n\n    /**\n     * Gets the low 32 bits as a signed integer.\n     * @this {!Long}\n     * @returns {number} Signed low bits\n     */\n    LongPrototype.getLowBits = function getLowBits() {\n      return this.low;\n    };\n\n    /**\n     * Gets the low 32 bits as an unsigned integer.\n     * @this {!Long}\n     * @returns {number} Unsigned low bits\n     */\n    LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\n      return this.low >>> 0;\n    };\n\n    /**\n     * Gets the number of bits needed to represent the absolute value of this Long.\n     * @this {!Long}\n     * @returns {number}\n     */\n    LongPrototype.getNumBitsAbs = function getNumBitsAbs() {\n      if (this.isNegative())\n        // Unsigned Longs are never negative\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n      var val = this.high != 0 ? this.high : this.low;\n      for (var bit = 31; bit > 0; bit--) if ((val & (1 << bit)) != 0) break;\n      return this.high != 0 ? bit + 33 : bit + 1;\n    };\n\n    /**\n     * Tests if this Long can be safely represented as a JavaScript number.\n     * @this {!Long}\n     * @returns {boolean}\n     */\n    LongPrototype.isSafeInteger = function isSafeInteger() {\n      // 2^53-1 is the maximum safe value\n      var top11Bits = this.high >> 21;\n      // [0, 2^53-1]\n      if (!top11Bits) return true;\n      // > 2^53-1\n      if (this.unsigned) return false;\n      // [-2^53, -1] except -2^53\n      return top11Bits === -1 && !(this.low === 0 && this.high === -0x200000);\n    };\n\n    /**\n     * Tests if this Long's value equals zero.\n     * @this {!Long}\n     * @returns {boolean}\n     */\n    LongPrototype.isZero = function isZero() {\n      return this.high === 0 && this.low === 0;\n    };\n\n    /**\n     * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n     * @returns {boolean}\n     */\n    LongPrototype.eqz = LongPrototype.isZero;\n\n    /**\n     * Tests if this Long's value is negative.\n     * @this {!Long}\n     * @returns {boolean}\n     */\n    LongPrototype.isNegative = function isNegative() {\n      return !this.unsigned && this.high < 0;\n    };\n\n    /**\n     * Tests if this Long's value is positive or zero.\n     * @this {!Long}\n     * @returns {boolean}\n     */\n    LongPrototype.isPositive = function isPositive() {\n      return this.unsigned || this.high >= 0;\n    };\n\n    /**\n     * Tests if this Long's value is odd.\n     * @this {!Long}\n     * @returns {boolean}\n     */\n    LongPrototype.isOdd = function isOdd() {\n      return (this.low & 1) === 1;\n    };\n\n    /**\n     * Tests if this Long's value is even.\n     * @this {!Long}\n     * @returns {boolean}\n     */\n    LongPrototype.isEven = function isEven() {\n      return (this.low & 1) === 0;\n    };\n\n    /**\n     * Tests if this Long's value equals the specified's.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.equals = function equals(other) {\n      if (!isLong(other)) other = fromValue(other);\n      if (\n        this.unsigned !== other.unsigned &&\n        this.high >>> 31 === 1 &&\n        other.high >>> 31 === 1\n      )\n        return false;\n      return this.high === other.high && this.low === other.low;\n    };\n\n    /**\n     * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n     * @function\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.eq = LongPrototype.equals;\n\n    /**\n     * Tests if this Long's value differs from the specified's.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.notEquals = function notEquals(other) {\n      return !this.eq(/* validates */ other);\n    };\n\n    /**\n     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n     * @function\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.neq = LongPrototype.notEquals;\n\n    /**\n     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n     * @function\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.ne = LongPrototype.notEquals;\n\n    /**\n     * Tests if this Long's value is less than the specified's.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.lessThan = function lessThan(other) {\n      return this.comp(/* validates */ other) < 0;\n    };\n\n    /**\n     * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n     * @function\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.lt = LongPrototype.lessThan;\n\n    /**\n     * Tests if this Long's value is less than or equal the specified's.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\n      return this.comp(/* validates */ other) <= 0;\n    };\n\n    /**\n     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n     * @function\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.lte = LongPrototype.lessThanOrEqual;\n\n    /**\n     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n     * @function\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.le = LongPrototype.lessThanOrEqual;\n\n    /**\n     * Tests if this Long's value is greater than the specified's.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.greaterThan = function greaterThan(other) {\n      return this.comp(/* validates */ other) > 0;\n    };\n\n    /**\n     * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n     * @function\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.gt = LongPrototype.greaterThan;\n\n    /**\n     * Tests if this Long's value is greater than or equal the specified's.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\n      return this.comp(/* validates */ other) >= 0;\n    };\n\n    /**\n     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n     * @function\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n\n    /**\n     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n     * @function\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n\n    /**\n     * Compares this Long's value with the specified's.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n     *  if the given one is greater\n     */\n    LongPrototype.compare = function compare(other) {\n      if (!isLong(other)) other = fromValue(other);\n      if (this.eq(other)) return 0;\n      var thisNeg = this.isNegative(),\n        otherNeg = other.isNegative();\n      if (thisNeg && !otherNeg) return -1;\n      if (!thisNeg && otherNeg) return 1;\n      // At this point the sign bits are the same\n      if (!this.unsigned) return this.sub(other).isNegative() ? -1 : 1;\n      // Both are positive if at least one is unsigned\n      return other.high >>> 0 > this.high >>> 0 ||\n        (other.high === this.high && other.low >>> 0 > this.low >>> 0)\n        ? -1\n        : 1;\n    };\n\n    /**\n     * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n     * @function\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n     *  if the given one is greater\n     */\n    LongPrototype.comp = LongPrototype.compare;\n\n    /**\n     * Negates this Long's value.\n     * @this {!Long}\n     * @returns {!Long} Negated Long\n     */\n    LongPrototype.negate = function negate() {\n      if (!this.unsigned && this.eq(MIN_VALUE)) return MIN_VALUE;\n      return this.not().add(ONE);\n    };\n\n    /**\n     * Negates this Long's value. This is an alias of {@link Long#negate}.\n     * @function\n     * @returns {!Long} Negated Long\n     */\n    LongPrototype.neg = LongPrototype.negate;\n\n    /**\n     * Returns the sum of this and the specified Long.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} addend Addend\n     * @returns {!Long} Sum\n     */\n    LongPrototype.add = function add(addend) {\n      if (!isLong(addend)) addend = fromValue(addend);\n\n      // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n      var a48 = this.high >>> 16;\n      var a32 = this.high & 0xffff;\n      var a16 = this.low >>> 16;\n      var a00 = this.low & 0xffff;\n      var b48 = addend.high >>> 16;\n      var b32 = addend.high & 0xffff;\n      var b16 = addend.low >>> 16;\n      var b00 = addend.low & 0xffff;\n      var c48 = 0,\n        c32 = 0,\n        c16 = 0,\n        c00 = 0;\n      c00 += a00 + b00;\n      c16 += c00 >>> 16;\n      c00 &= 0xffff;\n      c16 += a16 + b16;\n      c32 += c16 >>> 16;\n      c16 &= 0xffff;\n      c32 += a32 + b32;\n      c48 += c32 >>> 16;\n      c32 &= 0xffff;\n      c48 += a48 + b48;\n      c48 &= 0xffff;\n      return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n    };\n\n    /**\n     * Returns the difference of this and the specified Long.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} subtrahend Subtrahend\n     * @returns {!Long} Difference\n     */\n    LongPrototype.subtract = function subtract(subtrahend) {\n      if (!isLong(subtrahend)) subtrahend = fromValue(subtrahend);\n      return this.add(subtrahend.neg());\n    };\n\n    /**\n     * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n     * @function\n     * @param {!Long|number|bigint|string} subtrahend Subtrahend\n     * @returns {!Long} Difference\n     */\n    LongPrototype.sub = LongPrototype.subtract;\n\n    /**\n     * Returns the product of this and the specified Long.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} multiplier Multiplier\n     * @returns {!Long} Product\n     */\n    LongPrototype.multiply = function multiply(multiplier) {\n      if (this.isZero()) return this;\n      if (!isLong(multiplier)) multiplier = fromValue(multiplier);\n\n      // use wasm support if present\n      if (wasm) {\n        var low = wasm[\"mul\"](\n          this.low,\n          this.high,\n          multiplier.low,\n          multiplier.high,\n        );\n        return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n      }\n      if (multiplier.isZero()) return this.unsigned ? UZERO : ZERO;\n      if (this.eq(MIN_VALUE)) return multiplier.isOdd() ? MIN_VALUE : ZERO;\n      if (multiplier.eq(MIN_VALUE)) return this.isOdd() ? MIN_VALUE : ZERO;\n      if (this.isNegative()) {\n        if (multiplier.isNegative()) return this.neg().mul(multiplier.neg());\n        else return this.neg().mul(multiplier).neg();\n      } else if (multiplier.isNegative())\n        return this.mul(multiplier.neg()).neg();\n\n      // If both longs are small, use float multiplication\n      if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\n        return fromNumber(\n          this.toNumber() * multiplier.toNumber(),\n          this.unsigned,\n        );\n\n      // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n      // We can skip products that would overflow.\n\n      var a48 = this.high >>> 16;\n      var a32 = this.high & 0xffff;\n      var a16 = this.low >>> 16;\n      var a00 = this.low & 0xffff;\n      var b48 = multiplier.high >>> 16;\n      var b32 = multiplier.high & 0xffff;\n      var b16 = multiplier.low >>> 16;\n      var b00 = multiplier.low & 0xffff;\n      var c48 = 0,\n        c32 = 0,\n        c16 = 0,\n        c00 = 0;\n      c00 += a00 * b00;\n      c16 += c00 >>> 16;\n      c00 &= 0xffff;\n      c16 += a16 * b00;\n      c32 += c16 >>> 16;\n      c16 &= 0xffff;\n      c16 += a00 * b16;\n      c32 += c16 >>> 16;\n      c16 &= 0xffff;\n      c32 += a32 * b00;\n      c48 += c32 >>> 16;\n      c32 &= 0xffff;\n      c32 += a16 * b16;\n      c48 += c32 >>> 16;\n      c32 &= 0xffff;\n      c32 += a00 * b32;\n      c48 += c32 >>> 16;\n      c32 &= 0xffff;\n      c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n      c48 &= 0xffff;\n      return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n    };\n\n    /**\n     * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n     * @function\n     * @param {!Long|number|bigint|string} multiplier Multiplier\n     * @returns {!Long} Product\n     */\n    LongPrototype.mul = LongPrototype.multiply;\n\n    /**\n     * Returns this Long divided by the specified. The result is signed if this Long is signed or\n     *  unsigned if this Long is unsigned.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} divisor Divisor\n     * @returns {!Long} Quotient\n     */\n    LongPrototype.divide = function divide(divisor) {\n      if (!isLong(divisor)) divisor = fromValue(divisor);\n      if (divisor.isZero()) throw Error(\"division by zero\");\n\n      // use wasm support if present\n      if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (\n          !this.unsigned &&\n          this.high === -0x80000000 &&\n          divisor.low === -1 &&\n          divisor.high === -1\n        ) {\n          // be consistent with non-wasm code path\n          return this;\n        }\n        var low = (this.unsigned ? wasm[\"div_u\"] : wasm[\"div_s\"])(\n          this.low,\n          this.high,\n          divisor.low,\n          divisor.high,\n        );\n        return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n      }\n      if (this.isZero()) return this.unsigned ? UZERO : ZERO;\n      var approx, rem, res;\n      if (!this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (this.eq(MIN_VALUE)) {\n          if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\n            return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n          else if (divisor.eq(MIN_VALUE)) return ONE;\n          else {\n            // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n            var halfThis = this.shr(1);\n            approx = halfThis.div(divisor).shl(1);\n            if (approx.eq(ZERO)) {\n              return divisor.isNegative() ? ONE : NEG_ONE;\n            } else {\n              rem = this.sub(divisor.mul(approx));\n              res = approx.add(rem.div(divisor));\n              return res;\n            }\n          }\n        } else if (divisor.eq(MIN_VALUE)) return this.unsigned ? UZERO : ZERO;\n        if (this.isNegative()) {\n          if (divisor.isNegative()) return this.neg().div(divisor.neg());\n          return this.neg().div(divisor).neg();\n        } else if (divisor.isNegative()) return this.div(divisor.neg()).neg();\n        res = ZERO;\n      } else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned) divisor = divisor.toUnsigned();\n        if (divisor.gt(this)) return UZERO;\n        if (divisor.gt(this.shru(1)))\n          // 15 >>> 1 = 7 ; with divisor = 8 ; true\n          return UONE;\n        res = UZERO;\n      }\n\n      // Repeat the following until the remainder is less than other:  find a\n      // floating-point that approximates remainder / other *from below*, add this\n      // into the result, and subtract it from the remainder.  It is critical that\n      // the approximate value is less than or equal to the real value so that the\n      // remainder never becomes negative.\n      rem = this;\n      while (rem.gte(divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\n\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\n          delta = log2 <= 48 ? 1 : pow_dbl(2, log2 - 48),\n          // Decrease the approximation until it is smaller than the remainder.  Note\n          // that if it is too large, the product overflows and is negative.\n          approxRes = fromNumber(approx),\n          approxRem = approxRes.mul(divisor);\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\n          approx -= delta;\n          approxRes = fromNumber(approx, this.unsigned);\n          approxRem = approxRes.mul(divisor);\n        }\n\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (approxRes.isZero()) approxRes = ONE;\n        res = res.add(approxRes);\n        rem = rem.sub(approxRem);\n      }\n      return res;\n    };\n\n    /**\n     * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n     * @function\n     * @param {!Long|number|bigint|string} divisor Divisor\n     * @returns {!Long} Quotient\n     */\n    LongPrototype.div = LongPrototype.divide;\n\n    /**\n     * Returns this Long modulo the specified.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} divisor Divisor\n     * @returns {!Long} Remainder\n     */\n    LongPrototype.modulo = function modulo(divisor) {\n      if (!isLong(divisor)) divisor = fromValue(divisor);\n\n      // use wasm support if present\n      if (wasm) {\n        var low = (this.unsigned ? wasm[\"rem_u\"] : wasm[\"rem_s\"])(\n          this.low,\n          this.high,\n          divisor.low,\n          divisor.high,\n        );\n        return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n      }\n      return this.sub(this.div(divisor).mul(divisor));\n    };\n\n    /**\n     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n     * @function\n     * @param {!Long|number|bigint|string} divisor Divisor\n     * @returns {!Long} Remainder\n     */\n    LongPrototype.mod = LongPrototype.modulo;\n\n    /**\n     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n     * @function\n     * @param {!Long|number|bigint|string} divisor Divisor\n     * @returns {!Long} Remainder\n     */\n    LongPrototype.rem = LongPrototype.modulo;\n\n    /**\n     * Returns the bitwise NOT of this Long.\n     * @this {!Long}\n     * @returns {!Long}\n     */\n    LongPrototype.not = function not() {\n      return fromBits(~this.low, ~this.high, this.unsigned);\n    };\n\n    /**\n     * Returns count leading zeros of this Long.\n     * @this {!Long}\n     * @returns {!number}\n     */\n    LongPrototype.countLeadingZeros = function countLeadingZeros() {\n      return this.high ? Math.clz32(this.high) : Math.clz32(this.low) + 32;\n    };\n\n    /**\n     * Returns count leading zeros. This is an alias of {@link Long#countLeadingZeros}.\n     * @function\n     * @param {!Long}\n     * @returns {!number}\n     */\n    LongPrototype.clz = LongPrototype.countLeadingZeros;\n\n    /**\n     * Returns count trailing zeros of this Long.\n     * @this {!Long}\n     * @returns {!number}\n     */\n    LongPrototype.countTrailingZeros = function countTrailingZeros() {\n      return this.low ? ctz32(this.low) : ctz32(this.high) + 32;\n    };\n\n    /**\n     * Returns count trailing zeros. This is an alias of {@link Long#countTrailingZeros}.\n     * @function\n     * @param {!Long}\n     * @returns {!number}\n     */\n    LongPrototype.ctz = LongPrototype.countTrailingZeros;\n\n    /**\n     * Returns the bitwise AND of this Long and the specified.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} other Other Long\n     * @returns {!Long}\n     */\n    LongPrototype.and = function and(other) {\n      if (!isLong(other)) other = fromValue(other);\n      return fromBits(\n        this.low & other.low,\n        this.high & other.high,\n        this.unsigned,\n      );\n    };\n\n    /**\n     * Returns the bitwise OR of this Long and the specified.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} other Other Long\n     * @returns {!Long}\n     */\n    LongPrototype.or = function or(other) {\n      if (!isLong(other)) other = fromValue(other);\n      return fromBits(\n        this.low | other.low,\n        this.high | other.high,\n        this.unsigned,\n      );\n    };\n\n    /**\n     * Returns the bitwise XOR of this Long and the given one.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} other Other Long\n     * @returns {!Long}\n     */\n    LongPrototype.xor = function xor(other) {\n      if (!isLong(other)) other = fromValue(other);\n      return fromBits(\n        this.low ^ other.low,\n        this.high ^ other.high,\n        this.unsigned,\n      );\n    };\n\n    /**\n     * Returns this Long with bits shifted to the left by the given amount.\n     * @this {!Long}\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Shifted Long\n     */\n    LongPrototype.shiftLeft = function shiftLeft(numBits) {\n      if (isLong(numBits)) numBits = numBits.toInt();\n      if ((numBits &= 63) === 0) return this;\n      else if (numBits < 32)\n        return fromBits(\n          this.low << numBits,\n          (this.high << numBits) | (this.low >>> (32 - numBits)),\n          this.unsigned,\n        );\n      else return fromBits(0, this.low << (numBits - 32), this.unsigned);\n    };\n\n    /**\n     * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n     * @function\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Shifted Long\n     */\n    LongPrototype.shl = LongPrototype.shiftLeft;\n\n    /**\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\n     * @this {!Long}\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Shifted Long\n     */\n    LongPrototype.shiftRight = function shiftRight(numBits) {\n      if (isLong(numBits)) numBits = numBits.toInt();\n      if ((numBits &= 63) === 0) return this;\n      else if (numBits < 32)\n        return fromBits(\n          (this.low >>> numBits) | (this.high << (32 - numBits)),\n          this.high >> numBits,\n          this.unsigned,\n        );\n      else\n        return fromBits(\n          this.high >> (numBits - 32),\n          this.high >= 0 ? 0 : -1,\n          this.unsigned,\n        );\n    };\n\n    /**\n     * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n     * @function\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Shifted Long\n     */\n    LongPrototype.shr = LongPrototype.shiftRight;\n\n    /**\n     * Returns this Long with bits logically shifted to the right by the given amount.\n     * @this {!Long}\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Shifted Long\n     */\n    LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\n      if (isLong(numBits)) numBits = numBits.toInt();\n      if ((numBits &= 63) === 0) return this;\n      if (numBits < 32)\n        return fromBits(\n          (this.low >>> numBits) | (this.high << (32 - numBits)),\n          this.high >>> numBits,\n          this.unsigned,\n        );\n      if (numBits === 32) return fromBits(this.high, 0, this.unsigned);\n      return fromBits(this.high >>> (numBits - 32), 0, this.unsigned);\n    };\n\n    /**\n     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n     * @function\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Shifted Long\n     */\n    LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n\n    /**\n     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n     * @function\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Shifted Long\n     */\n    LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n\n    /**\n     * Returns this Long with bits rotated to the left by the given amount.\n     * @this {!Long}\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Rotated Long\n     */\n    LongPrototype.rotateLeft = function rotateLeft(numBits) {\n      var b;\n      if (isLong(numBits)) numBits = numBits.toInt();\n      if ((numBits &= 63) === 0) return this;\n      if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n      if (numBits < 32) {\n        b = 32 - numBits;\n        return fromBits(\n          (this.low << numBits) | (this.high >>> b),\n          (this.high << numBits) | (this.low >>> b),\n          this.unsigned,\n        );\n      }\n      numBits -= 32;\n      b = 32 - numBits;\n      return fromBits(\n        (this.high << numBits) | (this.low >>> b),\n        (this.low << numBits) | (this.high >>> b),\n        this.unsigned,\n      );\n    };\n    /**\n     * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n     * @function\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Rotated Long\n     */\n    LongPrototype.rotl = LongPrototype.rotateLeft;\n\n    /**\n     * Returns this Long with bits rotated to the right by the given amount.\n     * @this {!Long}\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Rotated Long\n     */\n    LongPrototype.rotateRight = function rotateRight(numBits) {\n      var b;\n      if (isLong(numBits)) numBits = numBits.toInt();\n      if ((numBits &= 63) === 0) return this;\n      if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n      if (numBits < 32) {\n        b = 32 - numBits;\n        return fromBits(\n          (this.high << b) | (this.low >>> numBits),\n          (this.low << b) | (this.high >>> numBits),\n          this.unsigned,\n        );\n      }\n      numBits -= 32;\n      b = 32 - numBits;\n      return fromBits(\n        (this.low << b) | (this.high >>> numBits),\n        (this.high << b) | (this.low >>> numBits),\n        this.unsigned,\n      );\n    };\n    /**\n     * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n     * @function\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Rotated Long\n     */\n    LongPrototype.rotr = LongPrototype.rotateRight;\n\n    /**\n     * Converts this Long to signed.\n     * @this {!Long}\n     * @returns {!Long} Signed long\n     */\n    LongPrototype.toSigned = function toSigned() {\n      if (!this.unsigned) return this;\n      return fromBits(this.low, this.high, false);\n    };\n\n    /**\n     * Converts this Long to unsigned.\n     * @this {!Long}\n     * @returns {!Long} Unsigned long\n     */\n    LongPrototype.toUnsigned = function toUnsigned() {\n      if (this.unsigned) return this;\n      return fromBits(this.low, this.high, true);\n    };\n\n    /**\n     * Converts this Long to its byte representation.\n     * @param {boolean=} le Whether little or big endian, defaults to big endian\n     * @this {!Long}\n     * @returns {!Array.<number>} Byte representation\n     */\n    LongPrototype.toBytes = function toBytes(le) {\n      return le ? this.toBytesLE() : this.toBytesBE();\n    };\n\n    /**\n     * Converts this Long to its little endian byte representation.\n     * @this {!Long}\n     * @returns {!Array.<number>} Little endian byte representation\n     */\n    LongPrototype.toBytesLE = function toBytesLE() {\n      var hi = this.high,\n        lo = this.low;\n      return [\n        lo & 0xff,\n        (lo >>> 8) & 0xff,\n        (lo >>> 16) & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        (hi >>> 8) & 0xff,\n        (hi >>> 16) & 0xff,\n        hi >>> 24,\n      ];\n    };\n\n    /**\n     * Converts this Long to its big endian byte representation.\n     * @this {!Long}\n     * @returns {!Array.<number>} Big endian byte representation\n     */\n    LongPrototype.toBytesBE = function toBytesBE() {\n      var hi = this.high,\n        lo = this.low;\n      return [\n        hi >>> 24,\n        (hi >>> 16) & 0xff,\n        (hi >>> 8) & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        (lo >>> 16) & 0xff,\n        (lo >>> 8) & 0xff,\n        lo & 0xff,\n      ];\n    };\n\n    /**\n     * Creates a Long from its byte representation.\n     * @param {!Array.<number>} bytes Byte representation\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n     * @param {boolean=} le Whether little or big endian, defaults to big endian\n     * @returns {Long} The corresponding Long value\n     */\n    Long.fromBytes = function fromBytes(bytes, unsigned, le) {\n      return le\n        ? Long.fromBytesLE(bytes, unsigned)\n        : Long.fromBytesBE(bytes, unsigned);\n    };\n\n    /**\n     * Creates a Long from its little endian byte representation.\n     * @param {!Array.<number>} bytes Little endian byte representation\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n     * @returns {Long} The corresponding Long value\n     */\n    Long.fromBytesLE = function fromBytesLE(bytes, unsigned) {\n      return new Long(\n        bytes[0] | (bytes[1] << 8) | (bytes[2] << 16) | (bytes[3] << 24),\n        bytes[4] | (bytes[5] << 8) | (bytes[6] << 16) | (bytes[7] << 24),\n        unsigned,\n      );\n    };\n\n    /**\n     * Creates a Long from its big endian byte representation.\n     * @param {!Array.<number>} bytes Big endian byte representation\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n     * @returns {Long} The corresponding Long value\n     */\n    Long.fromBytesBE = function fromBytesBE(bytes, unsigned) {\n      return new Long(\n        (bytes[4] << 24) | (bytes[5] << 16) | (bytes[6] << 8) | bytes[7],\n        (bytes[0] << 24) | (bytes[1] << 16) | (bytes[2] << 8) | bytes[3],\n        unsigned,\n      );\n    };\n\n    // Support conversion to/from BigInt where available\n    if (typeof BigInt === \"function\") {\n      /**\n       * Returns a Long representing the given big integer.\n       * @function\n       * @param {number} value The big integer value\n       * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n       * @returns {!Long} The corresponding Long value\n       */\n      Long.fromBigInt = function fromBigInt(value, unsigned) {\n        var lowBits = Number(BigInt.asIntN(32, value));\n        var highBits = Number(BigInt.asIntN(32, value >> BigInt(32)));\n        return fromBits(lowBits, highBits, unsigned);\n      };\n\n      // Override\n      Long.fromValue = function fromValueWithBigInt(value, unsigned) {\n        if (typeof value === \"bigint\") return Long.fromBigInt(value, unsigned);\n        return fromValue(value, unsigned);\n      };\n\n      /**\n       * Converts the Long to its big integer representation.\n       * @this {!Long}\n       * @returns {bigint}\n       */\n      LongPrototype.toBigInt = function toBigInt() {\n        var lowBigInt = BigInt(this.low >>> 0);\n        var highBigInt = BigInt(this.unsigned ? this.high >>> 0 : this.high);\n        return (highBigInt << BigInt(32)) | lowBigInt;\n      };\n    }\n    var _default = (_exports.default = Long);\n  },\n);\n", "\"use strict\";\n/**\n * @license\n * Copyright 2018 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadFileDescriptorSetFromObject = exports.loadFileDescriptorSetFromBuffer = exports.fromJSON = exports.loadSync = exports.load = exports.IdempotencyLevel = exports.isAnyExtension = exports.Long = void 0;\nconst camelCase = require(\"lodash.camelcase\");\nconst Protobuf = require(\"protobufjs\");\nconst descriptor = require(\"protobufjs/ext/descriptor\");\nconst util_1 = require(\"./util\");\nconst Long = require(\"long\");\nexports.Long = Long;\nfunction isAnyExtension(obj) {\n    return ('@type' in obj) && (typeof obj['@type'] === 'string');\n}\nexports.isAnyExtension = isAnyExtension;\nvar IdempotencyLevel;\n(function (IdempotencyLevel) {\n    IdempotencyLevel[\"IDEMPOTENCY_UNKNOWN\"] = \"IDEMPOTENCY_UNKNOWN\";\n    IdempotencyLevel[\"NO_SIDE_EFFECTS\"] = \"NO_SIDE_EFFECTS\";\n    IdempotencyLevel[\"IDEMPOTENT\"] = \"IDEMPOTENT\";\n})(IdempotencyLevel = exports.IdempotencyLevel || (exports.IdempotencyLevel = {}));\nconst descriptorOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    defaults: true,\n    oneofs: true,\n    json: true,\n};\nfunction joinName(baseName, name) {\n    if (baseName === '') {\n        return name;\n    }\n    else {\n        return baseName + '.' + name;\n    }\n}\nfunction isHandledReflectionObject(obj) {\n    return (obj instanceof Protobuf.Service ||\n        obj instanceof Protobuf.Type ||\n        obj instanceof Protobuf.Enum);\n}\nfunction isNamespaceBase(obj) {\n    return obj instanceof Protobuf.Namespace || obj instanceof Protobuf.Root;\n}\nfunction getAllHandledReflectionObjects(obj, parentName) {\n    const objName = joinName(parentName, obj.name);\n    if (isHandledReflectionObject(obj)) {\n        return [[objName, obj]];\n    }\n    else {\n        if (isNamespaceBase(obj) && typeof obj.nested !== 'undefined') {\n            return Object.keys(obj.nested)\n                .map(name => {\n                return getAllHandledReflectionObjects(obj.nested[name], objName);\n            })\n                .reduce((accumulator, currentValue) => accumulator.concat(currentValue), []);\n        }\n    }\n    return [];\n}\nfunction createDeserializer(cls, options) {\n    return function deserialize(argBuf) {\n        return cls.toObject(cls.decode(argBuf), options);\n    };\n}\nfunction createSerializer(cls) {\n    return function serialize(arg) {\n        if (Array.isArray(arg)) {\n            throw new Error(`Failed to serialize message: expected object with ${cls.name} structure, got array instead`);\n        }\n        const message = cls.fromObject(arg);\n        return cls.encode(message).finish();\n    };\n}\nfunction mapMethodOptions(options) {\n    return (options || []).reduce((obj, item) => {\n        for (const [key, value] of Object.entries(item)) {\n            switch (key) {\n                case 'uninterpreted_option':\n                    obj.uninterpreted_option.push(item.uninterpreted_option);\n                    break;\n                default:\n                    obj[key] = value;\n            }\n        }\n        return obj;\n    }, {\n        deprecated: false,\n        idempotency_level: IdempotencyLevel.IDEMPOTENCY_UNKNOWN,\n        uninterpreted_option: [],\n    });\n}\nfunction createMethodDefinition(method, serviceName, options, fileDescriptors) {\n    /* This is only ever called after the corresponding root.resolveAll(), so we\n     * can assume that the resolved request and response types are non-null */\n    const requestType = method.resolvedRequestType;\n    const responseType = method.resolvedResponseType;\n    return {\n        path: '/' + serviceName + '/' + method.name,\n        requestStream: !!method.requestStream,\n        responseStream: !!method.responseStream,\n        requestSerialize: createSerializer(requestType),\n        requestDeserialize: createDeserializer(requestType, options),\n        responseSerialize: createSerializer(responseType),\n        responseDeserialize: createDeserializer(responseType, options),\n        // TODO(murgatroid99): Find a better way to handle this\n        originalName: camelCase(method.name),\n        requestType: createMessageDefinition(requestType, fileDescriptors),\n        responseType: createMessageDefinition(responseType, fileDescriptors),\n        options: mapMethodOptions(method.parsedOptions),\n    };\n}\nfunction createServiceDefinition(service, name, options, fileDescriptors) {\n    const def = {};\n    for (const method of service.methodsArray) {\n        def[method.name] = createMethodDefinition(method, name, options, fileDescriptors);\n    }\n    return def;\n}\nfunction createMessageDefinition(message, fileDescriptors) {\n    const messageDescriptor = message.toDescriptor('proto3');\n    return {\n        format: 'Protocol Buffer 3 DescriptorProto',\n        type: messageDescriptor.$type.toObject(messageDescriptor, descriptorOptions),\n        fileDescriptorProtos: fileDescriptors,\n    };\n}\nfunction createEnumDefinition(enumType, fileDescriptors) {\n    const enumDescriptor = enumType.toDescriptor('proto3');\n    return {\n        format: 'Protocol Buffer 3 EnumDescriptorProto',\n        type: enumDescriptor.$type.toObject(enumDescriptor, descriptorOptions),\n        fileDescriptorProtos: fileDescriptors,\n    };\n}\n/**\n * function createDefinition(obj: Protobuf.Service, name: string, options:\n * Options): ServiceDefinition; function createDefinition(obj: Protobuf.Type,\n * name: string, options: Options): MessageTypeDefinition; function\n * createDefinition(obj: Protobuf.Enum, name: string, options: Options):\n * EnumTypeDefinition;\n */\nfunction createDefinition(obj, name, options, fileDescriptors) {\n    if (obj instanceof Protobuf.Service) {\n        return createServiceDefinition(obj, name, options, fileDescriptors);\n    }\n    else if (obj instanceof Protobuf.Type) {\n        return createMessageDefinition(obj, fileDescriptors);\n    }\n    else if (obj instanceof Protobuf.Enum) {\n        return createEnumDefinition(obj, fileDescriptors);\n    }\n    else {\n        throw new Error('Type mismatch in reflection object handling');\n    }\n}\nfunction createPackageDefinition(root, options) {\n    const def = {};\n    root.resolveAll();\n    const descriptorList = root.toDescriptor('proto3').file;\n    const bufferList = descriptorList.map(value => Buffer.from(descriptor.FileDescriptorProto.encode(value).finish()));\n    for (const [name, obj] of getAllHandledReflectionObjects(root, '')) {\n        def[name] = createDefinition(obj, name, options, bufferList);\n    }\n    return def;\n}\nfunction createPackageDefinitionFromDescriptorSet(decodedDescriptorSet, options) {\n    options = options || {};\n    const root = Protobuf.Root.fromDescriptor(decodedDescriptorSet);\n    root.resolveAll();\n    return createPackageDefinition(root, options);\n}\n/**\n * Load a .proto file with the specified options.\n * @param filename One or multiple file paths to load. Can be an absolute path\n *     or relative to an include path.\n * @param options.keepCase Preserve field names. The default is to change them\n *     to camel case.\n * @param options.longs The type that should be used to represent `long` values.\n *     Valid options are `Number` and `String`. Defaults to a `Long` object type\n *     from a library.\n * @param options.enums The type that should be used to represent `enum` values.\n *     The only valid option is `String`. Defaults to the numeric value.\n * @param options.bytes The type that should be used to represent `bytes`\n *     values. Valid options are `Array` and `String`. The default is to use\n *     `Buffer`.\n * @param options.defaults Set default values on output objects. Defaults to\n *     `false`.\n * @param options.arrays Set empty arrays for missing array values even if\n *     `defaults` is `false`. Defaults to `false`.\n * @param options.objects Set empty objects for missing object values even if\n *     `defaults` is `false`. Defaults to `false`.\n * @param options.oneofs Set virtual oneof properties to the present field's\n *     name\n * @param options.json Represent Infinity and NaN as strings in float fields,\n *     and automatically decode google.protobuf.Any values.\n * @param options.includeDirs Paths to search for imported `.proto` files.\n */\nfunction load(filename, options) {\n    return (0, util_1.loadProtosWithOptions)(filename, options).then(loadedRoot => {\n        return createPackageDefinition(loadedRoot, options);\n    });\n}\nexports.load = load;\nfunction loadSync(filename, options) {\n    const loadedRoot = (0, util_1.loadProtosWithOptionsSync)(filename, options);\n    return createPackageDefinition(loadedRoot, options);\n}\nexports.loadSync = loadSync;\nfunction fromJSON(json, options) {\n    options = options || {};\n    const loadedRoot = Protobuf.Root.fromJSON(json);\n    loadedRoot.resolveAll();\n    return createPackageDefinition(loadedRoot, options);\n}\nexports.fromJSON = fromJSON;\nfunction loadFileDescriptorSetFromBuffer(descriptorSet, options) {\n    const decodedDescriptorSet = descriptor.FileDescriptorSet.decode(descriptorSet);\n    return createPackageDefinitionFromDescriptorSet(decodedDescriptorSet, options);\n}\nexports.loadFileDescriptorSetFromBuffer = loadFileDescriptorSetFromBuffer;\nfunction loadFileDescriptorSetFromObject(descriptorSet, options) {\n    const decodedDescriptorSet = descriptor.FileDescriptorSet.fromObject(descriptorSet);\n    return createPackageDefinitionFromDescriptorSet(decodedDescriptorSet, options);\n}\nexports.loadFileDescriptorSetFromObject = loadFileDescriptorSetFromObject;\n(0, util_1.addCommonProtos)();\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH = exports.DEFAULT_MAX_SEND_MESSAGE_LENGTH = exports.Propagate = exports.LogVerbosity = exports.Status = void 0;\nvar Status;\n(function (Status) {\n    Status[Status[\"OK\"] = 0] = \"OK\";\n    Status[Status[\"CANCELLED\"] = 1] = \"CANCELLED\";\n    Status[Status[\"UNKNOWN\"] = 2] = \"UNKNOWN\";\n    Status[Status[\"INVALID_ARGUMENT\"] = 3] = \"INVALID_ARGUMENT\";\n    Status[Status[\"DEADLINE_EXCEEDED\"] = 4] = \"DEADLINE_EXCEEDED\";\n    Status[Status[\"NOT_FOUND\"] = 5] = \"NOT_FOUND\";\n    Status[Status[\"ALREADY_EXISTS\"] = 6] = \"ALREADY_EXISTS\";\n    Status[Status[\"PERMISSION_DENIED\"] = 7] = \"PERMISSION_DENIED\";\n    Status[Status[\"RESOURCE_EXHAUSTED\"] = 8] = \"RESOURCE_EXHAUSTED\";\n    Status[Status[\"FAILED_PRECONDITION\"] = 9] = \"FAILED_PRECONDITION\";\n    Status[Status[\"ABORTED\"] = 10] = \"ABORTED\";\n    Status[Status[\"OUT_OF_RANGE\"] = 11] = \"OUT_OF_RANGE\";\n    Status[Status[\"UNIMPLEMENTED\"] = 12] = \"UNIMPLEMENTED\";\n    Status[Status[\"INTERNAL\"] = 13] = \"INTERNAL\";\n    Status[Status[\"UNAVAILABLE\"] = 14] = \"UNAVAILABLE\";\n    Status[Status[\"DATA_LOSS\"] = 15] = \"DATA_LOSS\";\n    Status[Status[\"UNAUTHENTICATED\"] = 16] = \"UNAUTHENTICATED\";\n})(Status || (exports.Status = Status = {}));\nvar LogVerbosity;\n(function (LogVerbosity) {\n    LogVerbosity[LogVerbosity[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogVerbosity[LogVerbosity[\"INFO\"] = 1] = \"INFO\";\n    LogVerbosity[LogVerbosity[\"ERROR\"] = 2] = \"ERROR\";\n    LogVerbosity[LogVerbosity[\"NONE\"] = 3] = \"NONE\";\n})(LogVerbosity || (exports.LogVerbosity = LogVerbosity = {}));\n/**\n * NOTE: This enum is not currently used in any implemented API in this\n * library. It is included only for type parity with the other implementation.\n */\nvar Propagate;\n(function (Propagate) {\n    Propagate[Propagate[\"DEADLINE\"] = 1] = \"DEADLINE\";\n    Propagate[Propagate[\"CENSUS_STATS_CONTEXT\"] = 2] = \"CENSUS_STATS_CONTEXT\";\n    Propagate[Propagate[\"CENSUS_TRACING_CONTEXT\"] = 4] = \"CENSUS_TRACING_CONTEXT\";\n    Propagate[Propagate[\"CANCELLATION\"] = 8] = \"CANCELLATION\";\n    // https://github.com/grpc/grpc/blob/master/include/grpc/impl/codegen/propagation_bits.h#L43\n    Propagate[Propagate[\"DEFAULTS\"] = 65535] = \"DEFAULTS\";\n})(Propagate || (exports.Propagate = Propagate = {}));\n// -1 means unlimited\nexports.DEFAULT_MAX_SEND_MESSAGE_LENGTH = -1;\n// 4 MB default\nexports.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH = 4 * 1024 * 1024;\n", "{\n  \"name\": \"@grpc/grpc-js\",\n  \"version\": \"1.9.15\",\n  \"description\": \"gRPC Library for Node - pure JS implementation\",\n  \"homepage\": \"https://grpc.io/\",\n  \"repository\": \"https://github.com/grpc/grpc-node/tree/master/packages/grpc-js\",\n  \"main\": \"build/src/index.js\",\n  \"engines\": {\n    \"node\": \"^8.13.0 || >=10.10.0\"\n  },\n  \"keywords\": [],\n  \"author\": {\n    \"name\": \"Google Inc.\"\n  },\n  \"types\": \"build/src/index.d.ts\",\n  \"license\": \"Apache-2.0\",\n  \"devDependencies\": {\n    \"@types/gulp\": \"^4.0.6\",\n    \"@types/gulp-mocha\": \"0.0.32\",\n    \"@types/lodash\": \"^4.14.186\",\n    \"@types/mocha\": \"^5.2.6\",\n    \"@types/ncp\": \"^2.0.1\",\n    \"@types/pify\": \"^3.0.2\",\n    \"@types/semver\": \"^7.3.9\",\n    \"@typescript-eslint/eslint-plugin\": \"^5.59.11\",\n    \"@typescript-eslint/parser\": \"^5.59.11\",\n    \"@typescript-eslint/typescript-estree\": \"^5.59.11\",\n    \"clang-format\": \"^1.0.55\",\n    \"eslint\": \"^8.42.0\",\n    \"eslint-config-prettier\": \"^8.8.0\",\n    \"eslint-plugin-node\": \"^11.1.0\",\n    \"eslint-plugin-prettier\": \"^4.2.1\",\n    \"execa\": \"^2.0.3\",\n    \"gulp\": \"^4.0.2\",\n    \"gulp-mocha\": \"^6.0.0\",\n    \"lodash\": \"^4.17.4\",\n    \"madge\": \"^5.0.1\",\n    \"mocha-jenkins-reporter\": \"^0.4.1\",\n    \"ncp\": \"^2.0.0\",\n    \"pify\": \"^4.0.1\",\n    \"prettier\": \"^2.8.8\",\n    \"rimraf\": \"^3.0.2\",\n    \"semver\": \"^7.3.5\",\n    \"ts-node\": \"^10.9.1\",\n    \"typescript\": \"^5.1.3\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"Google Inc.\"\n    }\n  ],\n  \"scripts\": {\n    \"build\": \"npm run compile\",\n    \"clean\": \"rimraf ./build\",\n    \"compile\": \"tsc -p .\",\n    \"format\": \"clang-format -i -style=\\\"{Language: JavaScript, BasedOnStyle: Google, ColumnLimit: 80}\\\" src/*.ts test/*.ts\",\n    \"lint\": \"eslint src/*.ts test/*.ts\",\n    \"prepare\": \"npm run generate-types && npm run compile\",\n    \"test\": \"gulp test\",\n    \"check\": \"npm run lint\",\n    \"fix\": \"eslint --fix src/*.ts test/*.ts\",\n    \"pretest\": \"npm run generate-types && npm run generate-test-types && npm run compile\",\n    \"posttest\": \"npm run check && madge -c ./build/src\",\n    \"generate-types\": \"proto-loader-gen-types --keepCase --longs String --enums String --defaults --oneofs --includeComments --includeDirs proto/ --include-dirs test/fixtures/ -O src/generated/ --grpcLib ../index channelz.proto\",\n    \"generate-test-types\": \"proto-loader-gen-types --keepCase --longs String --enums String --defaults --oneofs --includeComments --include-dirs test/fixtures/ -O test/generated/ --grpcLib ../../src/index test_service.proto\"\n  },\n  \"dependencies\": {\n    \"@grpc/proto-loader\": \"^0.7.8\",\n    \"@types/node\": \">=12.12.47\"\n  },\n  \"files\": [\n    \"src/**/*.ts\",\n    \"build/src/**/*.{js,d.ts,js.map}\",\n    \"proto/*.proto\",\n    \"LICENSE\",\n    \"deps/envoy-api/envoy/api/v2/**/*.proto\",\n    \"deps/envoy-api/envoy/config/**/*.proto\",\n    \"deps/envoy-api/envoy/service/**/*.proto\",\n    \"deps/envoy-api/envoy/type/**/*.proto\",\n    \"deps/udpa/udpa/**/*.proto\",\n    \"deps/googleapis/google/api/*.proto\",\n    \"deps/googleapis/google/rpc/*.proto\",\n    \"deps/protoc-gen-validate/validate/**/*.proto\"\n  ]\n}\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTracerEnabled = exports.trace = exports.log = exports.setLoggerVerbosity = exports.setLogger = exports.getLogger = void 0;\nconst constants_1 = require(\"./constants\");\nconst process_1 = require(\"process\");\nconst clientVersion = require('../../package.json').version;\nconst DEFAULT_LOGGER = {\n    error: (message, ...optionalParams) => {\n        console.error('E ' + message, ...optionalParams);\n    },\n    info: (message, ...optionalParams) => {\n        console.error('I ' + message, ...optionalParams);\n    },\n    debug: (message, ...optionalParams) => {\n        console.error('D ' + message, ...optionalParams);\n    },\n};\nlet _logger = DEFAULT_LOGGER;\nlet _logVerbosity = constants_1.LogVerbosity.ERROR;\nconst verbosityString = (_b = (_a = process.env.GRPC_NODE_VERBOSITY) !== null && _a !== void 0 ? _a : process.env.GRPC_VERBOSITY) !== null && _b !== void 0 ? _b : '';\nswitch (verbosityString.toUpperCase()) {\n    case 'DEBUG':\n        _logVerbosity = constants_1.LogVerbosity.DEBUG;\n        break;\n    case 'INFO':\n        _logVerbosity = constants_1.LogVerbosity.INFO;\n        break;\n    case 'ERROR':\n        _logVerbosity = constants_1.LogVerbosity.ERROR;\n        break;\n    case 'NONE':\n        _logVerbosity = constants_1.LogVerbosity.NONE;\n        break;\n    default:\n    // Ignore any other values\n}\nconst getLogger = () => {\n    return _logger;\n};\nexports.getLogger = getLogger;\nconst setLogger = (logger) => {\n    _logger = logger;\n};\nexports.setLogger = setLogger;\nconst setLoggerVerbosity = (verbosity) => {\n    _logVerbosity = verbosity;\n};\nexports.setLoggerVerbosity = setLoggerVerbosity;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst log = (severity, ...args) => {\n    let logFunction;\n    if (severity >= _logVerbosity) {\n        switch (severity) {\n            case constants_1.LogVerbosity.DEBUG:\n                logFunction = _logger.debug;\n                break;\n            case constants_1.LogVerbosity.INFO:\n                logFunction = _logger.info;\n                break;\n            case constants_1.LogVerbosity.ERROR:\n                logFunction = _logger.error;\n                break;\n        }\n        /* Fall back to _logger.error when other methods are not available for\n         * compatiblity with older behavior that always logged to _logger.error */\n        if (!logFunction) {\n            logFunction = _logger.error;\n        }\n        if (logFunction) {\n            logFunction.bind(_logger)(...args);\n        }\n    }\n};\nexports.log = log;\nconst tracersString = (_d = (_c = process.env.GRPC_NODE_TRACE) !== null && _c !== void 0 ? _c : process.env.GRPC_TRACE) !== null && _d !== void 0 ? _d : '';\nconst enabledTracers = new Set();\nconst disabledTracers = new Set();\nfor (const tracerName of tracersString.split(',')) {\n    if (tracerName.startsWith('-')) {\n        disabledTracers.add(tracerName.substring(1));\n    }\n    else {\n        enabledTracers.add(tracerName);\n    }\n}\nconst allEnabled = enabledTracers.has('all');\nfunction trace(severity, tracer, text) {\n    if (isTracerEnabled(tracer)) {\n        (0, exports.log)(severity, new Date().toISOString() + ' | v' + clientVersion + ' ' + process_1.pid + ' | ' + tracer + ' | ' + text);\n    }\n}\nexports.trace = trace;\nfunction isTracerEnabled(tracer) {\n    return (!disabledTracers.has(tracer) && (allEnabled || enabledTracers.has(tracer)));\n}\nexports.isTracerEnabled = isTracerEnabled;\n", "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getErrorCode = exports.getErrorMessage = void 0;\nfunction getErrorMessage(error) {\n    if (error instanceof Error) {\n        return error.message;\n    }\n    else {\n        return String(error);\n    }\n}\nexports.getErrorMessage = getErrorMessage;\nfunction getErrorCode(error) {\n    if (typeof error === 'object' &&\n        error !== null &&\n        'code' in error &&\n        typeof error.code === 'number') {\n        return error.code;\n    }\n    else {\n        return null;\n    }\n}\nexports.getErrorCode = getErrorCode;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Metadata = void 0;\nconst logging_1 = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\nconst error_1 = require(\"./error\");\nconst LEGAL_KEY_REGEX = /^[0-9a-z_.-]+$/;\nconst LEGAL_NON_BINARY_VALUE_REGEX = /^[ -~]*$/;\nfunction isLegalKey(key) {\n    return LEGAL_KEY_REGEX.test(key);\n}\nfunction isLegalNonBinaryValue(value) {\n    return LEGAL_NON_BINARY_VALUE_REGEX.test(value);\n}\nfunction isBinaryKey(key) {\n    return key.endsWith('-bin');\n}\nfunction isCustomMetadata(key) {\n    return !key.startsWith('grpc-');\n}\nfunction normalizeKey(key) {\n    return key.toLowerCase();\n}\nfunction validate(key, value) {\n    if (!isLegalKey(key)) {\n        throw new Error('Metadata key \"' + key + '\" contains illegal characters');\n    }\n    if (value !== null && value !== undefined) {\n        if (isBinaryKey(key)) {\n            if (!Buffer.isBuffer(value)) {\n                throw new Error(\"keys that end with '-bin' must have Buffer values\");\n            }\n        }\n        else {\n            if (Buffer.isBuffer(value)) {\n                throw new Error(\"keys that don't end with '-bin' must have String values\");\n            }\n            if (!isLegalNonBinaryValue(value)) {\n                throw new Error('Metadata string value \"' + value + '\" contains illegal characters');\n            }\n        }\n    }\n}\n/**\n * A class for storing metadata. Keys are normalized to lowercase ASCII.\n */\nclass Metadata {\n    constructor(options = {}) {\n        this.internalRepr = new Map();\n        this.options = options;\n    }\n    /**\n     * Sets the given value for the given key by replacing any other values\n     * associated with that key. Normalizes the key.\n     * @param key The key to whose value should be set.\n     * @param value The value to set. Must be a buffer if and only\n     *   if the normalized key ends with '-bin'.\n     */\n    set(key, value) {\n        key = normalizeKey(key);\n        validate(key, value);\n        this.internalRepr.set(key, [value]);\n    }\n    /**\n     * Adds the given value for the given key by appending to a list of previous\n     * values associated with that key. Normalizes the key.\n     * @param key The key for which a new value should be appended.\n     * @param value The value to add. Must be a buffer if and only\n     *   if the normalized key ends with '-bin'.\n     */\n    add(key, value) {\n        key = normalizeKey(key);\n        validate(key, value);\n        const existingValue = this.internalRepr.get(key);\n        if (existingValue === undefined) {\n            this.internalRepr.set(key, [value]);\n        }\n        else {\n            existingValue.push(value);\n        }\n    }\n    /**\n     * Removes the given key and any associated values. Normalizes the key.\n     * @param key The key whose values should be removed.\n     */\n    remove(key) {\n        key = normalizeKey(key);\n        // validate(key);\n        this.internalRepr.delete(key);\n    }\n    /**\n     * Gets a list of all values associated with the key. Normalizes the key.\n     * @param key The key whose value should be retrieved.\n     * @return A list of values associated with the given key.\n     */\n    get(key) {\n        key = normalizeKey(key);\n        // validate(key);\n        return this.internalRepr.get(key) || [];\n    }\n    /**\n     * Gets a plain object mapping each key to the first value associated with it.\n     * This reflects the most common way that people will want to see metadata.\n     * @return A key/value mapping of the metadata.\n     */\n    getMap() {\n        const result = {};\n        for (const [key, values] of this.internalRepr) {\n            if (values.length > 0) {\n                const v = values[0];\n                result[key] = Buffer.isBuffer(v) ? Buffer.from(v) : v;\n            }\n        }\n        return result;\n    }\n    /**\n     * Clones the metadata object.\n     * @return The newly cloned object.\n     */\n    clone() {\n        const newMetadata = new Metadata(this.options);\n        const newInternalRepr = newMetadata.internalRepr;\n        for (const [key, value] of this.internalRepr) {\n            const clonedValue = value.map(v => {\n                if (Buffer.isBuffer(v)) {\n                    return Buffer.from(v);\n                }\n                else {\n                    return v;\n                }\n            });\n            newInternalRepr.set(key, clonedValue);\n        }\n        return newMetadata;\n    }\n    /**\n     * Merges all key-value pairs from a given Metadata object into this one.\n     * If both this object and the given object have values in the same key,\n     * values from the other Metadata object will be appended to this object's\n     * values.\n     * @param other A Metadata object.\n     */\n    merge(other) {\n        for (const [key, values] of other.internalRepr) {\n            const mergedValue = (this.internalRepr.get(key) || []).concat(values);\n            this.internalRepr.set(key, mergedValue);\n        }\n    }\n    setOptions(options) {\n        this.options = options;\n    }\n    getOptions() {\n        return this.options;\n    }\n    /**\n     * Creates an OutgoingHttpHeaders object that can be used with the http2 API.\n     */\n    toHttp2Headers() {\n        // NOTE: Node <8.9 formats http2 headers incorrectly.\n        const result = {};\n        for (const [key, values] of this.internalRepr) {\n            // We assume that the user's interaction with this object is limited to\n            // through its public API (i.e. keys and values are already validated).\n            result[key] = values.map(bufToString);\n        }\n        return result;\n    }\n    /**\n     * This modifies the behavior of JSON.stringify to show an object\n     * representation of the metadata map.\n     */\n    toJSON() {\n        const result = {};\n        for (const [key, values] of this.internalRepr) {\n            result[key] = values;\n        }\n        return result;\n    }\n    /**\n     * Returns a new Metadata object based fields in a given IncomingHttpHeaders\n     * object.\n     * @param headers An IncomingHttpHeaders object.\n     */\n    static fromHttp2Headers(headers) {\n        const result = new Metadata();\n        for (const key of Object.keys(headers)) {\n            // Reserved headers (beginning with `:`) are not valid keys.\n            if (key.charAt(0) === ':') {\n                continue;\n            }\n            const values = headers[key];\n            try {\n                if (isBinaryKey(key)) {\n                    if (Array.isArray(values)) {\n                        values.forEach(value => {\n                            result.add(key, Buffer.from(value, 'base64'));\n                        });\n                    }\n                    else if (values !== undefined) {\n                        if (isCustomMetadata(key)) {\n                            values.split(',').forEach(v => {\n                                result.add(key, Buffer.from(v.trim(), 'base64'));\n                            });\n                        }\n                        else {\n                            result.add(key, Buffer.from(values, 'base64'));\n                        }\n                    }\n                }\n                else {\n                    if (Array.isArray(values)) {\n                        values.forEach(value => {\n                            result.add(key, value);\n                        });\n                    }\n                    else if (values !== undefined) {\n                        result.add(key, values);\n                    }\n                }\n            }\n            catch (error) {\n                const message = `Failed to add metadata entry ${key}: ${values}. ${(0, error_1.getErrorMessage)(error)}. For more information see https://github.com/grpc/grpc-node/issues/1173`;\n                (0, logging_1.log)(constants_1.LogVerbosity.ERROR, message);\n            }\n        }\n        return result;\n    }\n}\nexports.Metadata = Metadata;\nconst bufToString = (val) => {\n    return Buffer.isBuffer(val) ? val.toString('base64') : val;\n};\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallCredentials = void 0;\nconst metadata_1 = require(\"./metadata\");\nfunction isCurrentOauth2Client(client) {\n    return ('getRequestHeaders' in client &&\n        typeof client.getRequestHeaders === 'function');\n}\n/**\n * A class that represents a generic method of adding authentication-related\n * metadata on a per-request basis.\n */\nclass CallCredentials {\n    /**\n     * Creates a new CallCredentials object from a given function that generates\n     * Metadata objects.\n     * @param metadataGenerator A function that accepts a set of options, and\n     * generates a Metadata object based on these options, which is passed back\n     * to the caller via a supplied (err, metadata) callback.\n     */\n    static createFromMetadataGenerator(metadataGenerator) {\n        return new SingleCallCredentials(metadataGenerator);\n    }\n    /**\n     * Create a gRPC credential from a Google credential object.\n     * @param googleCredentials The authentication client to use.\n     * @return The resulting CallCredentials object.\n     */\n    static createFromGoogleCredential(googleCredentials) {\n        return CallCredentials.createFromMetadataGenerator((options, callback) => {\n            let getHeaders;\n            if (isCurrentOauth2Client(googleCredentials)) {\n                getHeaders = googleCredentials.getRequestHeaders(options.service_url);\n            }\n            else {\n                getHeaders = new Promise((resolve, reject) => {\n                    googleCredentials.getRequestMetadata(options.service_url, (err, headers) => {\n                        if (err) {\n                            reject(err);\n                            return;\n                        }\n                        if (!headers) {\n                            reject(new Error('Headers not set by metadata plugin'));\n                            return;\n                        }\n                        resolve(headers);\n                    });\n                });\n            }\n            getHeaders.then(headers => {\n                const metadata = new metadata_1.Metadata();\n                for (const key of Object.keys(headers)) {\n                    metadata.add(key, headers[key]);\n                }\n                callback(null, metadata);\n            }, err => {\n                callback(err);\n            });\n        });\n    }\n    static createEmpty() {\n        return new EmptyCallCredentials();\n    }\n}\nexports.CallCredentials = CallCredentials;\nclass ComposedCallCredentials extends CallCredentials {\n    constructor(creds) {\n        super();\n        this.creds = creds;\n    }\n    async generateMetadata(options) {\n        const base = new metadata_1.Metadata();\n        const generated = await Promise.all(this.creds.map(cred => cred.generateMetadata(options)));\n        for (const gen of generated) {\n            base.merge(gen);\n        }\n        return base;\n    }\n    compose(other) {\n        return new ComposedCallCredentials(this.creds.concat([other]));\n    }\n    _equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof ComposedCallCredentials) {\n            return this.creds.every((value, index) => value._equals(other.creds[index]));\n        }\n        else {\n            return false;\n        }\n    }\n}\nclass SingleCallCredentials extends CallCredentials {\n    constructor(metadataGenerator) {\n        super();\n        this.metadataGenerator = metadataGenerator;\n    }\n    generateMetadata(options) {\n        return new Promise((resolve, reject) => {\n            this.metadataGenerator(options, (err, metadata) => {\n                if (metadata !== undefined) {\n                    resolve(metadata);\n                }\n                else {\n                    reject(err);\n                }\n            });\n        });\n    }\n    compose(other) {\n        return new ComposedCallCredentials([this, other]);\n    }\n    _equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof SingleCallCredentials) {\n            return this.metadataGenerator === other.metadataGenerator;\n        }\n        else {\n            return false;\n        }\n    }\n}\nclass EmptyCallCredentials extends CallCredentials {\n    generateMetadata(options) {\n        return Promise.resolve(new metadata_1.Metadata());\n    }\n    compose(other) {\n        return other;\n    }\n    _equals(other) {\n        return other instanceof EmptyCallCredentials;\n    }\n}\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultRootsData = exports.CIPHER_SUITES = void 0;\nconst fs = require(\"fs\");\nexports.CIPHER_SUITES = process.env.GRPC_SSL_CIPHER_SUITES;\nconst DEFAULT_ROOTS_FILE_PATH = process.env.GRPC_DEFAULT_SSL_ROOTS_FILE_PATH;\nlet defaultRootsData = null;\nfunction getDefaultRootsData() {\n    if (DEFAULT_ROOTS_FILE_PATH) {\n        if (defaultRootsData === null) {\n            defaultRootsData = fs.readFileSync(DEFAULT_ROOTS_FILE_PATH);\n        }\n        return defaultRootsData;\n    }\n    return null;\n}\nexports.getDefaultRootsData = getDefaultRootsData;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChannelCredentials = void 0;\nconst tls_1 = require(\"tls\");\nconst call_credentials_1 = require(\"./call-credentials\");\nconst tls_helpers_1 = require(\"./tls-helpers\");\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction verifyIsBufferOrNull(obj, friendlyName) {\n    if (obj && !(obj instanceof Buffer)) {\n        throw new TypeError(`${friendlyName}, if provided, must be a Buffer.`);\n    }\n}\n/**\n * A class that contains credentials for communicating over a channel, as well\n * as a set of per-call credentials, which are applied to every method call made\n * over a channel initialized with an instance of this class.\n */\nclass ChannelCredentials {\n    constructor(callCredentials) {\n        this.callCredentials = callCredentials || call_credentials_1.CallCredentials.createEmpty();\n    }\n    /**\n     * Gets the set of per-call credentials associated with this instance.\n     */\n    _getCallCredentials() {\n        return this.callCredentials;\n    }\n    /**\n     * Return a new ChannelCredentials instance with a given set of credentials.\n     * The resulting instance can be used to construct a Channel that communicates\n     * over TLS.\n     * @param rootCerts The root certificate data.\n     * @param privateKey The client certificate private key, if available.\n     * @param certChain The client certificate key chain, if available.\n     * @param verifyOptions Additional options to modify certificate verification\n     */\n    static createSsl(rootCerts, privateKey, certChain, verifyOptions) {\n        var _a;\n        verifyIsBufferOrNull(rootCerts, 'Root certificate');\n        verifyIsBufferOrNull(privateKey, 'Private key');\n        verifyIsBufferOrNull(certChain, 'Certificate chain');\n        if (privateKey && !certChain) {\n            throw new Error('Private key must be given with accompanying certificate chain');\n        }\n        if (!privateKey && certChain) {\n            throw new Error('Certificate chain must be given with accompanying private key');\n        }\n        const secureContext = (0, tls_1.createSecureContext)({\n            ca: (_a = rootCerts !== null && rootCerts !== void 0 ? rootCerts : (0, tls_helpers_1.getDefaultRootsData)()) !== null && _a !== void 0 ? _a : undefined,\n            key: privateKey !== null && privateKey !== void 0 ? privateKey : undefined,\n            cert: certChain !== null && certChain !== void 0 ? certChain : undefined,\n            ciphers: tls_helpers_1.CIPHER_SUITES,\n        });\n        return new SecureChannelCredentialsImpl(secureContext, verifyOptions !== null && verifyOptions !== void 0 ? verifyOptions : {});\n    }\n    /**\n     * Return a new ChannelCredentials instance with credentials created using\n     * the provided secureContext. The resulting instances can be used to\n     * construct a Channel that communicates over TLS. gRPC will not override\n     * anything in the provided secureContext, so the environment variables\n     * GRPC_SSL_CIPHER_SUITES and GRPC_DEFAULT_SSL_ROOTS_FILE_PATH will\n     * not be applied.\n     * @param secureContext The return value of tls.createSecureContext()\n     * @param verifyOptions Additional options to modify certificate verification\n     */\n    static createFromSecureContext(secureContext, verifyOptions) {\n        return new SecureChannelCredentialsImpl(secureContext, verifyOptions !== null && verifyOptions !== void 0 ? verifyOptions : {});\n    }\n    /**\n     * Return a new ChannelCredentials instance with no credentials.\n     */\n    static createInsecure() {\n        return new InsecureChannelCredentialsImpl();\n    }\n}\nexports.ChannelCredentials = ChannelCredentials;\nclass InsecureChannelCredentialsImpl extends ChannelCredentials {\n    constructor(callCredentials) {\n        super(callCredentials);\n    }\n    compose(callCredentials) {\n        throw new Error('Cannot compose insecure credentials');\n    }\n    _getConnectionOptions() {\n        return null;\n    }\n    _isSecure() {\n        return false;\n    }\n    _equals(other) {\n        return other instanceof InsecureChannelCredentialsImpl;\n    }\n}\nclass SecureChannelCredentialsImpl extends ChannelCredentials {\n    constructor(secureContext, verifyOptions) {\n        super();\n        this.secureContext = secureContext;\n        this.verifyOptions = verifyOptions;\n        this.connectionOptions = {\n            secureContext,\n        };\n        // Node asserts that this option is a function, so we cannot pass undefined\n        if (verifyOptions === null || verifyOptions === void 0 ? void 0 : verifyOptions.checkServerIdentity) {\n            this.connectionOptions.checkServerIdentity =\n                verifyOptions.checkServerIdentity;\n        }\n    }\n    compose(callCredentials) {\n        const combinedCallCredentials = this.callCredentials.compose(callCredentials);\n        return new ComposedChannelCredentialsImpl(this, combinedCallCredentials);\n    }\n    _getConnectionOptions() {\n        // Copy to prevent callers from mutating this.connectionOptions\n        return Object.assign({}, this.connectionOptions);\n    }\n    _isSecure() {\n        return true;\n    }\n    _equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof SecureChannelCredentialsImpl) {\n            return (this.secureContext === other.secureContext &&\n                this.verifyOptions.checkServerIdentity ===\n                    other.verifyOptions.checkServerIdentity);\n        }\n        else {\n            return false;\n        }\n    }\n}\nclass ComposedChannelCredentialsImpl extends ChannelCredentials {\n    constructor(channelCredentials, callCreds) {\n        super(callCreds);\n        this.channelCredentials = channelCredentials;\n    }\n    compose(callCredentials) {\n        const combinedCallCredentials = this.callCredentials.compose(callCredentials);\n        return new ComposedChannelCredentialsImpl(this.channelCredentials, combinedCallCredentials);\n    }\n    _getConnectionOptions() {\n        return this.channelCredentials._getConnectionOptions();\n    }\n    _isSecure() {\n        return true;\n    }\n    _equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof ComposedChannelCredentialsImpl) {\n            return (this.channelCredentials._equals(other.channelCredentials) &&\n                this.callCredentials._equals(other.callCredentials));\n        }\n        else {\n            return false;\n        }\n    }\n}\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateLoadBalancingConfig = exports.getFirstUsableConfig = exports.isLoadBalancerNameRegistered = exports.createLoadBalancer = exports.registerDefaultLoadBalancerType = exports.registerLoadBalancerType = exports.createChildChannelControlHelper = void 0;\n/**\n * Create a child ChannelControlHelper that overrides some methods of the\n * parent while letting others pass through to the parent unmodified. This\n * allows other code to create these children without needing to know about\n * all of the methods to be passed through.\n * @param parent\n * @param overrides\n */\nfunction createChildChannelControlHelper(parent, overrides) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    return {\n        createSubchannel: (_b = (_a = overrides.createSubchannel) === null || _a === void 0 ? void 0 : _a.bind(overrides)) !== null && _b !== void 0 ? _b : parent.createSubchannel.bind(parent),\n        updateState: (_d = (_c = overrides.updateState) === null || _c === void 0 ? void 0 : _c.bind(overrides)) !== null && _d !== void 0 ? _d : parent.updateState.bind(parent),\n        requestReresolution: (_f = (_e = overrides.requestReresolution) === null || _e === void 0 ? void 0 : _e.bind(overrides)) !== null && _f !== void 0 ? _f : parent.requestReresolution.bind(parent),\n        addChannelzChild: (_h = (_g = overrides.addChannelzChild) === null || _g === void 0 ? void 0 : _g.bind(overrides)) !== null && _h !== void 0 ? _h : parent.addChannelzChild.bind(parent),\n        removeChannelzChild: (_k = (_j = overrides.removeChannelzChild) === null || _j === void 0 ? void 0 : _j.bind(overrides)) !== null && _k !== void 0 ? _k : parent.removeChannelzChild.bind(parent),\n    };\n}\nexports.createChildChannelControlHelper = createChildChannelControlHelper;\nconst registeredLoadBalancerTypes = {};\nlet defaultLoadBalancerType = null;\nfunction registerLoadBalancerType(typeName, loadBalancerType, loadBalancingConfigType) {\n    registeredLoadBalancerTypes[typeName] = {\n        LoadBalancer: loadBalancerType,\n        LoadBalancingConfig: loadBalancingConfigType,\n    };\n}\nexports.registerLoadBalancerType = registerLoadBalancerType;\nfunction registerDefaultLoadBalancerType(typeName) {\n    defaultLoadBalancerType = typeName;\n}\nexports.registerDefaultLoadBalancerType = registerDefaultLoadBalancerType;\nfunction createLoadBalancer(config, channelControlHelper) {\n    const typeName = config.getLoadBalancerName();\n    if (typeName in registeredLoadBalancerTypes) {\n        return new registeredLoadBalancerTypes[typeName].LoadBalancer(channelControlHelper);\n    }\n    else {\n        return null;\n    }\n}\nexports.createLoadBalancer = createLoadBalancer;\nfunction isLoadBalancerNameRegistered(typeName) {\n    return typeName in registeredLoadBalancerTypes;\n}\nexports.isLoadBalancerNameRegistered = isLoadBalancerNameRegistered;\nfunction getFirstUsableConfig(configs, fallbackTodefault = false) {\n    for (const config of configs) {\n        if (config.getLoadBalancerName() in registeredLoadBalancerTypes) {\n            return config;\n        }\n    }\n    if (fallbackTodefault) {\n        if (defaultLoadBalancerType) {\n            return new registeredLoadBalancerTypes[defaultLoadBalancerType].LoadBalancingConfig();\n        }\n        else {\n            return null;\n        }\n    }\n    else {\n        return null;\n    }\n}\nexports.getFirstUsableConfig = getFirstUsableConfig;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction validateLoadBalancingConfig(obj) {\n    if (!(obj !== null && typeof obj === 'object')) {\n        throw new Error('Load balancing config must be an object');\n    }\n    const keys = Object.keys(obj);\n    if (keys.length !== 1) {\n        throw new Error('Provided load balancing config has multiple conflicting entries');\n    }\n    const typeName = keys[0];\n    if (typeName in registeredLoadBalancerTypes) {\n        return registeredLoadBalancerTypes[typeName].LoadBalancingConfig.createFromJson(obj[typeName]);\n    }\n    else {\n        throw new Error(`Unrecognized load balancing config name ${typeName}`);\n    }\n}\nexports.validateLoadBalancingConfig = validateLoadBalancingConfig;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extractAndSelectServiceConfig = exports.validateServiceConfig = exports.validateRetryThrottling = void 0;\n/* This file implements gRFC A2 and the service config spec:\n * https://github.com/grpc/proposal/blob/master/A2-service-configs-in-dns.md\n * https://github.com/grpc/grpc/blob/master/doc/service_config.md. Each\n * function here takes an object with unknown structure and returns its\n * specific object type if the input has the right structure, and throws an\n * error otherwise. */\n/* The any type is purposely used here. All functions validate their input at\n * runtime */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst os = require(\"os\");\nconst constants_1 = require(\"./constants\");\nconst load_balancer_1 = require(\"./load-balancer\");\n/**\n * Recognizes a number with up to 9 digits after the decimal point, followed by\n * an \"s\", representing a number of seconds.\n */\nconst DURATION_REGEX = /^\\d+(\\.\\d{1,9})?s$/;\n/**\n * Client language name used for determining whether this client matches a\n * `ServiceConfigCanaryConfig`'s `clientLanguage` list.\n */\nconst CLIENT_LANGUAGE_STRING = 'node';\nfunction validateName(obj) {\n    // In this context, and unset field and '' are considered the same\n    if ('service' in obj && obj.service !== '') {\n        if (typeof obj.service !== 'string') {\n            throw new Error(`Invalid method config name: invalid service: expected type string, got ${typeof obj.service}`);\n        }\n        if ('method' in obj && obj.method !== '') {\n            if (typeof obj.method !== 'string') {\n                throw new Error(`Invalid method config name: invalid method: expected type string, got ${typeof obj.service}`);\n            }\n            return {\n                service: obj.service,\n                method: obj.method,\n            };\n        }\n        else {\n            return {\n                service: obj.service,\n            };\n        }\n    }\n    else {\n        if ('method' in obj && obj.method !== undefined) {\n            throw new Error(`Invalid method config name: method set with empty or unset service`);\n        }\n        return {};\n    }\n}\nfunction validateRetryPolicy(obj) {\n    if (!('maxAttempts' in obj) ||\n        !Number.isInteger(obj.maxAttempts) ||\n        obj.maxAttempts < 2) {\n        throw new Error('Invalid method config retry policy: maxAttempts must be an integer at least 2');\n    }\n    if (!('initialBackoff' in obj) ||\n        typeof obj.initialBackoff !== 'string' ||\n        !DURATION_REGEX.test(obj.initialBackoff)) {\n        throw new Error('Invalid method config retry policy: initialBackoff must be a string consisting of a positive integer followed by s');\n    }\n    if (!('maxBackoff' in obj) ||\n        typeof obj.maxBackoff !== 'string' ||\n        !DURATION_REGEX.test(obj.maxBackoff)) {\n        throw new Error('Invalid method config retry policy: maxBackoff must be a string consisting of a positive integer followed by s');\n    }\n    if (!('backoffMultiplier' in obj) ||\n        typeof obj.backoffMultiplier !== 'number' ||\n        obj.backoffMultiplier <= 0) {\n        throw new Error('Invalid method config retry policy: backoffMultiplier must be a number greater than 0');\n    }\n    if (!('retryableStatusCodes' in obj && Array.isArray(obj.retryableStatusCodes))) {\n        throw new Error('Invalid method config retry policy: retryableStatusCodes is required');\n    }\n    if (obj.retryableStatusCodes.length === 0) {\n        throw new Error('Invalid method config retry policy: retryableStatusCodes must be non-empty');\n    }\n    for (const value of obj.retryableStatusCodes) {\n        if (typeof value === 'number') {\n            if (!Object.values(constants_1.Status).includes(value)) {\n                throw new Error('Invalid method config retry policy: retryableStatusCodes value not in status code range');\n            }\n        }\n        else if (typeof value === 'string') {\n            if (!Object.values(constants_1.Status).includes(value.toUpperCase())) {\n                throw new Error('Invalid method config retry policy: retryableStatusCodes value not a status code name');\n            }\n        }\n        else {\n            throw new Error('Invalid method config retry policy: retryableStatusCodes value must be a string or number');\n        }\n    }\n    return {\n        maxAttempts: obj.maxAttempts,\n        initialBackoff: obj.initialBackoff,\n        maxBackoff: obj.maxBackoff,\n        backoffMultiplier: obj.backoffMultiplier,\n        retryableStatusCodes: obj.retryableStatusCodes,\n    };\n}\nfunction validateHedgingPolicy(obj) {\n    if (!('maxAttempts' in obj) ||\n        !Number.isInteger(obj.maxAttempts) ||\n        obj.maxAttempts < 2) {\n        throw new Error('Invalid method config hedging policy: maxAttempts must be an integer at least 2');\n    }\n    if ('hedgingDelay' in obj &&\n        (typeof obj.hedgingDelay !== 'string' ||\n            !DURATION_REGEX.test(obj.hedgingDelay))) {\n        throw new Error('Invalid method config hedging policy: hedgingDelay must be a string consisting of a positive integer followed by s');\n    }\n    if ('nonFatalStatusCodes' in obj && Array.isArray(obj.nonFatalStatusCodes)) {\n        for (const value of obj.nonFatalStatusCodes) {\n            if (typeof value === 'number') {\n                if (!Object.values(constants_1.Status).includes(value)) {\n                    throw new Error('Invlid method config hedging policy: nonFatalStatusCodes value not in status code range');\n                }\n            }\n            else if (typeof value === 'string') {\n                if (!Object.values(constants_1.Status).includes(value.toUpperCase())) {\n                    throw new Error('Invlid method config hedging policy: nonFatalStatusCodes value not a status code name');\n                }\n            }\n            else {\n                throw new Error('Invlid method config hedging policy: nonFatalStatusCodes value must be a string or number');\n            }\n        }\n    }\n    const result = {\n        maxAttempts: obj.maxAttempts,\n    };\n    if (obj.hedgingDelay) {\n        result.hedgingDelay = obj.hedgingDelay;\n    }\n    if (obj.nonFatalStatusCodes) {\n        result.nonFatalStatusCodes = obj.nonFatalStatusCodes;\n    }\n    return result;\n}\nfunction validateMethodConfig(obj) {\n    var _a;\n    const result = {\n        name: [],\n    };\n    if (!('name' in obj) || !Array.isArray(obj.name)) {\n        throw new Error('Invalid method config: invalid name array');\n    }\n    for (const name of obj.name) {\n        result.name.push(validateName(name));\n    }\n    if ('waitForReady' in obj) {\n        if (typeof obj.waitForReady !== 'boolean') {\n            throw new Error('Invalid method config: invalid waitForReady');\n        }\n        result.waitForReady = obj.waitForReady;\n    }\n    if ('timeout' in obj) {\n        if (typeof obj.timeout === 'object') {\n            if (!('seconds' in obj.timeout) ||\n                !(typeof obj.timeout.seconds === 'number')) {\n                throw new Error('Invalid method config: invalid timeout.seconds');\n            }\n            if (!('nanos' in obj.timeout) ||\n                !(typeof obj.timeout.nanos === 'number')) {\n                throw new Error('Invalid method config: invalid timeout.nanos');\n            }\n            result.timeout = obj.timeout;\n        }\n        else if (typeof obj.timeout === 'string' &&\n            DURATION_REGEX.test(obj.timeout)) {\n            const timeoutParts = obj.timeout\n                .substring(0, obj.timeout.length - 1)\n                .split('.');\n            result.timeout = {\n                seconds: timeoutParts[0] | 0,\n                nanos: ((_a = timeoutParts[1]) !== null && _a !== void 0 ? _a : 0) | 0,\n            };\n        }\n        else {\n            throw new Error('Invalid method config: invalid timeout');\n        }\n    }\n    if ('maxRequestBytes' in obj) {\n        if (typeof obj.maxRequestBytes !== 'number') {\n            throw new Error('Invalid method config: invalid maxRequestBytes');\n        }\n        result.maxRequestBytes = obj.maxRequestBytes;\n    }\n    if ('maxResponseBytes' in obj) {\n        if (typeof obj.maxResponseBytes !== 'number') {\n            throw new Error('Invalid method config: invalid maxRequestBytes');\n        }\n        result.maxResponseBytes = obj.maxResponseBytes;\n    }\n    if ('retryPolicy' in obj) {\n        if ('hedgingPolicy' in obj) {\n            throw new Error('Invalid method config: retryPolicy and hedgingPolicy cannot both be specified');\n        }\n        else {\n            result.retryPolicy = validateRetryPolicy(obj.retryPolicy);\n        }\n    }\n    else if ('hedgingPolicy' in obj) {\n        result.hedgingPolicy = validateHedgingPolicy(obj.hedgingPolicy);\n    }\n    return result;\n}\nfunction validateRetryThrottling(obj) {\n    if (!('maxTokens' in obj) ||\n        typeof obj.maxTokens !== 'number' ||\n        obj.maxTokens <= 0 ||\n        obj.maxTokens > 1000) {\n        throw new Error('Invalid retryThrottling: maxTokens must be a number in (0, 1000]');\n    }\n    if (!('tokenRatio' in obj) ||\n        typeof obj.tokenRatio !== 'number' ||\n        obj.tokenRatio <= 0) {\n        throw new Error('Invalid retryThrottling: tokenRatio must be a number greater than 0');\n    }\n    return {\n        maxTokens: +obj.maxTokens.toFixed(3),\n        tokenRatio: +obj.tokenRatio.toFixed(3),\n    };\n}\nexports.validateRetryThrottling = validateRetryThrottling;\nfunction validateServiceConfig(obj) {\n    const result = {\n        loadBalancingConfig: [],\n        methodConfig: [],\n    };\n    if ('loadBalancingPolicy' in obj) {\n        if (typeof obj.loadBalancingPolicy === 'string') {\n            result.loadBalancingPolicy = obj.loadBalancingPolicy;\n        }\n        else {\n            throw new Error('Invalid service config: invalid loadBalancingPolicy');\n        }\n    }\n    if ('loadBalancingConfig' in obj) {\n        if (Array.isArray(obj.loadBalancingConfig)) {\n            for (const config of obj.loadBalancingConfig) {\n                result.loadBalancingConfig.push((0, load_balancer_1.validateLoadBalancingConfig)(config));\n            }\n        }\n        else {\n            throw new Error('Invalid service config: invalid loadBalancingConfig');\n        }\n    }\n    if ('methodConfig' in obj) {\n        if (Array.isArray(obj.methodConfig)) {\n            for (const methodConfig of obj.methodConfig) {\n                result.methodConfig.push(validateMethodConfig(methodConfig));\n            }\n        }\n    }\n    if ('retryThrottling' in obj) {\n        result.retryThrottling = validateRetryThrottling(obj.retryThrottling);\n    }\n    // Validate method name uniqueness\n    const seenMethodNames = [];\n    for (const methodConfig of result.methodConfig) {\n        for (const name of methodConfig.name) {\n            for (const seenName of seenMethodNames) {\n                if (name.service === seenName.service &&\n                    name.method === seenName.method) {\n                    throw new Error(`Invalid service config: duplicate name ${name.service}/${name.method}`);\n                }\n            }\n            seenMethodNames.push(name);\n        }\n    }\n    return result;\n}\nexports.validateServiceConfig = validateServiceConfig;\nfunction validateCanaryConfig(obj) {\n    if (!('serviceConfig' in obj)) {\n        throw new Error('Invalid service config choice: missing service config');\n    }\n    const result = {\n        serviceConfig: validateServiceConfig(obj.serviceConfig),\n    };\n    if ('clientLanguage' in obj) {\n        if (Array.isArray(obj.clientLanguage)) {\n            result.clientLanguage = [];\n            for (const lang of obj.clientLanguage) {\n                if (typeof lang === 'string') {\n                    result.clientLanguage.push(lang);\n                }\n                else {\n                    throw new Error('Invalid service config choice: invalid clientLanguage');\n                }\n            }\n        }\n        else {\n            throw new Error('Invalid service config choice: invalid clientLanguage');\n        }\n    }\n    if ('clientHostname' in obj) {\n        if (Array.isArray(obj.clientHostname)) {\n            result.clientHostname = [];\n            for (const lang of obj.clientHostname) {\n                if (typeof lang === 'string') {\n                    result.clientHostname.push(lang);\n                }\n                else {\n                    throw new Error('Invalid service config choice: invalid clientHostname');\n                }\n            }\n        }\n        else {\n            throw new Error('Invalid service config choice: invalid clientHostname');\n        }\n    }\n    if ('percentage' in obj) {\n        if (typeof obj.percentage === 'number' &&\n            0 <= obj.percentage &&\n            obj.percentage <= 100) {\n            result.percentage = obj.percentage;\n        }\n        else {\n            throw new Error('Invalid service config choice: invalid percentage');\n        }\n    }\n    // Validate that no unexpected fields are present\n    const allowedFields = [\n        'clientLanguage',\n        'percentage',\n        'clientHostname',\n        'serviceConfig',\n    ];\n    for (const field in obj) {\n        if (!allowedFields.includes(field)) {\n            throw new Error(`Invalid service config choice: unexpected field ${field}`);\n        }\n    }\n    return result;\n}\nfunction validateAndSelectCanaryConfig(obj, percentage) {\n    if (!Array.isArray(obj)) {\n        throw new Error('Invalid service config list');\n    }\n    for (const config of obj) {\n        const validatedConfig = validateCanaryConfig(config);\n        /* For each field, we check if it is present, then only discard the\n         * config if the field value does not match the current client */\n        if (typeof validatedConfig.percentage === 'number' &&\n            percentage > validatedConfig.percentage) {\n            continue;\n        }\n        if (Array.isArray(validatedConfig.clientHostname)) {\n            let hostnameMatched = false;\n            for (const hostname of validatedConfig.clientHostname) {\n                if (hostname === os.hostname()) {\n                    hostnameMatched = true;\n                }\n            }\n            if (!hostnameMatched) {\n                continue;\n            }\n        }\n        if (Array.isArray(validatedConfig.clientLanguage)) {\n            let languageMatched = false;\n            for (const language of validatedConfig.clientLanguage) {\n                if (language === CLIENT_LANGUAGE_STRING) {\n                    languageMatched = true;\n                }\n            }\n            if (!languageMatched) {\n                continue;\n            }\n        }\n        return validatedConfig.serviceConfig;\n    }\n    throw new Error('No matching service config found');\n}\n/**\n * Find the \"grpc_config\" record among the TXT records, parse its value as JSON, validate its contents,\n * and select a service config with selection fields that all match this client. Most of these steps\n * can fail with an error; the caller must handle any errors thrown this way.\n * @param txtRecord The TXT record array that is output from a successful call to dns.resolveTxt\n * @param percentage A number chosen from the range [0, 100) that is used to select which config to use\n * @return The service configuration to use, given the percentage value, or null if the service config\n *     data has a valid format but none of the options match the current client.\n */\nfunction extractAndSelectServiceConfig(txtRecord, percentage) {\n    for (const record of txtRecord) {\n        if (record.length > 0 && record[0].startsWith('grpc_config=')) {\n            /* Treat the list of strings in this record as a single string and remove\n             * \"grpc_config=\" from the beginning. The rest should be a JSON string */\n            const recordString = record.join('').substring('grpc_config='.length);\n            const recordJson = JSON.parse(recordString);\n            return validateAndSelectCanaryConfig(recordJson, percentage);\n        }\n    }\n    return null;\n}\nexports.extractAndSelectServiceConfig = extractAndSelectServiceConfig;\n", "\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectivityState = void 0;\nvar ConnectivityState;\n(function (ConnectivityState) {\n    ConnectivityState[ConnectivityState[\"IDLE\"] = 0] = \"IDLE\";\n    ConnectivityState[ConnectivityState[\"CONNECTING\"] = 1] = \"CONNECTING\";\n    ConnectivityState[ConnectivityState[\"READY\"] = 2] = \"READY\";\n    ConnectivityState[ConnectivityState[\"TRANSIENT_FAILURE\"] = 3] = \"TRANSIENT_FAILURE\";\n    ConnectivityState[ConnectivityState[\"SHUTDOWN\"] = 4] = \"SHUTDOWN\";\n})(ConnectivityState || (exports.ConnectivityState = ConnectivityState = {}));\n", "\"use strict\";\n/*\n * Copyright 2020 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uriToString = exports.splitHostPort = exports.parseUri = void 0;\n/*\n * The groups correspond to URI parts as follows:\n * 1. scheme\n * 2. authority\n * 3. path\n */\nconst URI_REGEX = /^(?:([A-Za-z0-9+.-]+):)?(?:\\/\\/([^/]*)\\/)?(.+)$/;\nfunction parseUri(uriString) {\n    const parsedUri = URI_REGEX.exec(uriString);\n    if (parsedUri === null) {\n        return null;\n    }\n    return {\n        scheme: parsedUri[1],\n        authority: parsedUri[2],\n        path: parsedUri[3],\n    };\n}\nexports.parseUri = parseUri;\nconst NUMBER_REGEX = /^\\d+$/;\nfunction splitHostPort(path) {\n    if (path.startsWith('[')) {\n        const hostEnd = path.indexOf(']');\n        if (hostEnd === -1) {\n            return null;\n        }\n        const host = path.substring(1, hostEnd);\n        /* Only an IPv6 address should be in bracketed notation, and an IPv6\n         * address should have at least one colon */\n        if (host.indexOf(':') === -1) {\n            return null;\n        }\n        if (path.length > hostEnd + 1) {\n            if (path[hostEnd + 1] === ':') {\n                const portString = path.substring(hostEnd + 2);\n                if (NUMBER_REGEX.test(portString)) {\n                    return {\n                        host: host,\n                        port: +portString,\n                    };\n                }\n                else {\n                    return null;\n                }\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return {\n                host,\n            };\n        }\n    }\n    else {\n        const splitPath = path.split(':');\n        /* Exactly one colon means that this is host:port. Zero colons means that\n         * there is no port. And multiple colons means that this is a bare IPv6\n         * address with no port */\n        if (splitPath.length === 2) {\n            if (NUMBER_REGEX.test(splitPath[1])) {\n                return {\n                    host: splitPath[0],\n                    port: +splitPath[1],\n                };\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return {\n                host: path,\n            };\n        }\n    }\n}\nexports.splitHostPort = splitHostPort;\nfunction uriToString(uri) {\n    let result = '';\n    if (uri.scheme !== undefined) {\n        result += uri.scheme + ':';\n    }\n    if (uri.authority !== undefined) {\n        result += '//' + uri.authority + '/';\n    }\n    result += uri.path;\n    return result;\n}\nexports.uriToString = uriToString;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mapUriDefaultScheme = exports.getDefaultAuthority = exports.createResolver = exports.registerDefaultScheme = exports.registerResolver = void 0;\nconst uri_parser_1 = require(\"./uri-parser\");\nconst registeredResolvers = {};\nlet defaultScheme = null;\n/**\n * Register a resolver class to handle target names prefixed with the `prefix`\n * string. This prefix should correspond to a URI scheme name listed in the\n * [gRPC Name Resolution document](https://github.com/grpc/grpc/blob/master/doc/naming.md)\n * @param prefix\n * @param resolverClass\n */\nfunction registerResolver(scheme, resolverClass) {\n    registeredResolvers[scheme] = resolverClass;\n}\nexports.registerResolver = registerResolver;\n/**\n * Register a default resolver to handle target names that do not start with\n * any registered prefix.\n * @param resolverClass\n */\nfunction registerDefaultScheme(scheme) {\n    defaultScheme = scheme;\n}\nexports.registerDefaultScheme = registerDefaultScheme;\n/**\n * Create a name resolver for the specified target, if possible. Throws an\n * error if no such name resolver can be created.\n * @param target\n * @param listener\n */\nfunction createResolver(target, listener, options) {\n    if (target.scheme !== undefined && target.scheme in registeredResolvers) {\n        return new registeredResolvers[target.scheme](target, listener, options);\n    }\n    else {\n        throw new Error(`No resolver could be created for target ${(0, uri_parser_1.uriToString)(target)}`);\n    }\n}\nexports.createResolver = createResolver;\n/**\n * Get the default authority for the specified target, if possible. Throws an\n * error if no registered name resolver can parse that target string.\n * @param target\n */\nfunction getDefaultAuthority(target) {\n    if (target.scheme !== undefined && target.scheme in registeredResolvers) {\n        return registeredResolvers[target.scheme].getDefaultAuthority(target);\n    }\n    else {\n        throw new Error(`Invalid target ${(0, uri_parser_1.uriToString)(target)}`);\n    }\n}\nexports.getDefaultAuthority = getDefaultAuthority;\nfunction mapUriDefaultScheme(target) {\n    if (target.scheme === undefined || !(target.scheme in registeredResolvers)) {\n        if (defaultScheme !== null) {\n            return {\n                scheme: defaultScheme,\n                authority: undefined,\n                path: (0, uri_parser_1.uriToString)(target),\n            };\n        }\n        else {\n            return null;\n        }\n    }\n    return target;\n}\nexports.mapUriDefaultScheme = mapUriDefaultScheme;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueuePicker = exports.UnavailablePicker = exports.PickResultType = void 0;\nconst metadata_1 = require(\"./metadata\");\nconst constants_1 = require(\"./constants\");\nvar PickResultType;\n(function (PickResultType) {\n    PickResultType[PickResultType[\"COMPLETE\"] = 0] = \"COMPLETE\";\n    PickResultType[PickResultType[\"QUEUE\"] = 1] = \"QUEUE\";\n    PickResultType[PickResultType[\"TRANSIENT_FAILURE\"] = 2] = \"TRANSIENT_FAILURE\";\n    PickResultType[PickResultType[\"DROP\"] = 3] = \"DROP\";\n})(PickResultType || (exports.PickResultType = PickResultType = {}));\n/**\n * A standard picker representing a load balancer in the TRANSIENT_FAILURE\n * state. Always responds to every pick request with an UNAVAILABLE status.\n */\nclass UnavailablePicker {\n    constructor(status) {\n        this.status = Object.assign({ code: constants_1.Status.UNAVAILABLE, details: 'No connection established', metadata: new metadata_1.Metadata() }, status);\n    }\n    pick(pickArgs) {\n        return {\n            pickResultType: PickResultType.TRANSIENT_FAILURE,\n            subchannel: null,\n            status: this.status,\n            onCallStarted: null,\n            onCallEnded: null,\n        };\n    }\n}\nexports.UnavailablePicker = UnavailablePicker;\n/**\n * A standard picker representing a load balancer in the IDLE or CONNECTING\n * state. Always responds to every pick request with a QUEUE pick result\n * indicating that the pick should be tried again with the next `Picker`. Also\n * reports back to the load balancer that a connection should be established\n * once any pick is attempted.\n */\nclass QueuePicker {\n    // Constructed with a load balancer. Calls exitIdle on it the first time pick is called\n    constructor(loadBalancer) {\n        this.loadBalancer = loadBalancer;\n        this.calledExitIdle = false;\n    }\n    pick(pickArgs) {\n        if (!this.calledExitIdle) {\n            process.nextTick(() => {\n                this.loadBalancer.exitIdle();\n            });\n            this.calledExitIdle = true;\n        }\n        return {\n            pickResultType: PickResultType.QUEUE,\n            subchannel: null,\n            status: null,\n            onCallStarted: null,\n            onCallEnded: null,\n        };\n    }\n}\nexports.QueuePicker = QueuePicker;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BackoffTimeout = void 0;\nconst INITIAL_BACKOFF_MS = 1000;\nconst BACKOFF_MULTIPLIER = 1.6;\nconst MAX_BACKOFF_MS = 120000;\nconst BACKOFF_JITTER = 0.2;\n/**\n * Get a number uniformly at random in the range [min, max)\n * @param min\n * @param max\n */\nfunction uniformRandom(min, max) {\n    return Math.random() * (max - min) + min;\n}\nclass BackoffTimeout {\n    constructor(callback, options) {\n        this.callback = callback;\n        /**\n         * The delay time at the start, and after each reset.\n         */\n        this.initialDelay = INITIAL_BACKOFF_MS;\n        /**\n         * The exponential backoff multiplier.\n         */\n        this.multiplier = BACKOFF_MULTIPLIER;\n        /**\n         * The maximum delay time\n         */\n        this.maxDelay = MAX_BACKOFF_MS;\n        /**\n         * The maximum fraction by which the delay time can randomly vary after\n         * applying the multiplier.\n         */\n        this.jitter = BACKOFF_JITTER;\n        /**\n         * Indicates whether the timer is currently running.\n         */\n        this.running = false;\n        /**\n         * Indicates whether the timer should keep the Node process running if no\n         * other async operation is doing so.\n         */\n        this.hasRef = true;\n        /**\n         * The time that the currently running timer was started. Only valid if\n         * running is true.\n         */\n        this.startTime = new Date();\n        /**\n         * The approximate time that the currently running timer will end. Only valid\n         * if running is true.\n         */\n        this.endTime = new Date();\n        if (options) {\n            if (options.initialDelay) {\n                this.initialDelay = options.initialDelay;\n            }\n            if (options.multiplier) {\n                this.multiplier = options.multiplier;\n            }\n            if (options.jitter) {\n                this.jitter = options.jitter;\n            }\n            if (options.maxDelay) {\n                this.maxDelay = options.maxDelay;\n            }\n        }\n        this.nextDelay = this.initialDelay;\n        this.timerId = setTimeout(() => { }, 0);\n        clearTimeout(this.timerId);\n    }\n    runTimer(delay) {\n        var _a, _b;\n        this.endTime = this.startTime;\n        this.endTime.setMilliseconds(this.endTime.getMilliseconds() + this.nextDelay);\n        clearTimeout(this.timerId);\n        this.timerId = setTimeout(() => {\n            this.callback();\n            this.running = false;\n        }, delay);\n        if (!this.hasRef) {\n            (_b = (_a = this.timerId).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n    }\n    /**\n     * Call the callback after the current amount of delay time\n     */\n    runOnce() {\n        this.running = true;\n        this.startTime = new Date();\n        this.runTimer(this.nextDelay);\n        const nextBackoff = Math.min(this.nextDelay * this.multiplier, this.maxDelay);\n        const jitterMagnitude = nextBackoff * this.jitter;\n        this.nextDelay =\n            nextBackoff + uniformRandom(-jitterMagnitude, jitterMagnitude);\n    }\n    /**\n     * Stop the timer. The callback will not be called until `runOnce` is called\n     * again.\n     */\n    stop() {\n        clearTimeout(this.timerId);\n        this.running = false;\n    }\n    /**\n     * Reset the delay time to its initial value. If the timer is still running,\n     * retroactively apply that reset to the current timer.\n     */\n    reset() {\n        this.nextDelay = this.initialDelay;\n        if (this.running) {\n            const now = new Date();\n            const newEndTime = this.startTime;\n            newEndTime.setMilliseconds(newEndTime.getMilliseconds() + this.nextDelay);\n            clearTimeout(this.timerId);\n            if (now < newEndTime) {\n                this.runTimer(newEndTime.getTime() - now.getTime());\n            }\n            else {\n                this.running = false;\n            }\n        }\n    }\n    /**\n     * Check whether the timer is currently running.\n     */\n    isRunning() {\n        return this.running;\n    }\n    /**\n     * Set that while the timer is running, it should keep the Node process\n     * running.\n     */\n    ref() {\n        var _a, _b;\n        this.hasRef = true;\n        (_b = (_a = this.timerId).ref) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    /**\n     * Set that while the timer is running, it should not keep the Node process\n     * running.\n     */\n    unref() {\n        var _a, _b;\n        this.hasRef = false;\n        (_b = (_a = this.timerId).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    /**\n     * Get the approximate timestamp of when the timer will fire. Only valid if\n     * this.isRunning() is true.\n     */\n    getEndTime() {\n        return this.endTime;\n    }\n}\nexports.BackoffTimeout = BackoffTimeout;\n", "\"use strict\";\n/*\n * Copyright 2020 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChildLoadBalancerHandler = void 0;\nconst load_balancer_1 = require(\"./load-balancer\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst TYPE_NAME = 'child_load_balancer_helper';\nclass ChildLoadBalancerHandler {\n    constructor(channelControlHelper) {\n        this.channelControlHelper = channelControlHelper;\n        this.currentChild = null;\n        this.pendingChild = null;\n        this.latestConfig = null;\n        this.ChildPolicyHelper = class {\n            constructor(parent) {\n                this.parent = parent;\n                this.child = null;\n            }\n            createSubchannel(subchannelAddress, subchannelArgs) {\n                return this.parent.channelControlHelper.createSubchannel(subchannelAddress, subchannelArgs);\n            }\n            updateState(connectivityState, picker) {\n                var _a;\n                if (this.calledByPendingChild()) {\n                    if (connectivityState === connectivity_state_1.ConnectivityState.CONNECTING) {\n                        return;\n                    }\n                    (_a = this.parent.currentChild) === null || _a === void 0 ? void 0 : _a.destroy();\n                    this.parent.currentChild = this.parent.pendingChild;\n                    this.parent.pendingChild = null;\n                }\n                else if (!this.calledByCurrentChild()) {\n                    return;\n                }\n                this.parent.channelControlHelper.updateState(connectivityState, picker);\n            }\n            requestReresolution() {\n                var _a;\n                const latestChild = (_a = this.parent.pendingChild) !== null && _a !== void 0 ? _a : this.parent.currentChild;\n                if (this.child === latestChild) {\n                    this.parent.channelControlHelper.requestReresolution();\n                }\n            }\n            setChild(newChild) {\n                this.child = newChild;\n            }\n            addChannelzChild(child) {\n                this.parent.channelControlHelper.addChannelzChild(child);\n            }\n            removeChannelzChild(child) {\n                this.parent.channelControlHelper.removeChannelzChild(child);\n            }\n            calledByPendingChild() {\n                return this.child === this.parent.pendingChild;\n            }\n            calledByCurrentChild() {\n                return this.child === this.parent.currentChild;\n            }\n        };\n    }\n    configUpdateRequiresNewPolicyInstance(oldConfig, newConfig) {\n        return oldConfig.getLoadBalancerName() !== newConfig.getLoadBalancerName();\n    }\n    /**\n     * Prerequisites: lbConfig !== null and lbConfig.name is registered\n     * @param addressList\n     * @param lbConfig\n     * @param attributes\n     */\n    updateAddressList(addressList, lbConfig, attributes) {\n        let childToUpdate;\n        if (this.currentChild === null ||\n            this.latestConfig === null ||\n            this.configUpdateRequiresNewPolicyInstance(this.latestConfig, lbConfig)) {\n            const newHelper = new this.ChildPolicyHelper(this);\n            const newChild = (0, load_balancer_1.createLoadBalancer)(lbConfig, newHelper);\n            newHelper.setChild(newChild);\n            if (this.currentChild === null) {\n                this.currentChild = newChild;\n                childToUpdate = this.currentChild;\n            }\n            else {\n                if (this.pendingChild) {\n                    this.pendingChild.destroy();\n                }\n                this.pendingChild = newChild;\n                childToUpdate = this.pendingChild;\n            }\n        }\n        else {\n            if (this.pendingChild === null) {\n                childToUpdate = this.currentChild;\n            }\n            else {\n                childToUpdate = this.pendingChild;\n            }\n        }\n        this.latestConfig = lbConfig;\n        childToUpdate.updateAddressList(addressList, lbConfig, attributes);\n    }\n    exitIdle() {\n        if (this.currentChild) {\n            this.currentChild.exitIdle();\n            if (this.pendingChild) {\n                this.pendingChild.exitIdle();\n            }\n        }\n    }\n    resetBackoff() {\n        if (this.currentChild) {\n            this.currentChild.resetBackoff();\n            if (this.pendingChild) {\n                this.pendingChild.resetBackoff();\n            }\n        }\n    }\n    destroy() {\n        /* Note: state updates are only propagated from the child balancer if that\n         * object is equal to this.currentChild or this.pendingChild. Since this\n         * function sets both of those to null, no further state updates will\n         * occur after this function returns. */\n        if (this.currentChild) {\n            this.currentChild.destroy();\n            this.currentChild = null;\n        }\n        if (this.pendingChild) {\n            this.pendingChild.destroy();\n            this.pendingChild = null;\n        }\n    }\n    getTypeName() {\n        return TYPE_NAME;\n    }\n}\nexports.ChildLoadBalancerHandler = ChildLoadBalancerHandler;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResolvingLoadBalancer = void 0;\nconst load_balancer_1 = require(\"./load-balancer\");\nconst service_config_1 = require(\"./service-config\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst resolver_1 = require(\"./resolver\");\nconst picker_1 = require(\"./picker\");\nconst backoff_timeout_1 = require(\"./backoff-timeout\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst logging = require(\"./logging\");\nconst constants_2 = require(\"./constants\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst load_balancer_child_handler_1 = require(\"./load-balancer-child-handler\");\nconst TRACER_NAME = 'resolving_load_balancer';\nfunction trace(text) {\n    logging.trace(constants_2.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\n/**\n * Name match levels in order from most to least specific. This is the order in\n * which searches will be performed.\n */\nconst NAME_MATCH_LEVEL_ORDER = [\n    'SERVICE_AND_METHOD',\n    'SERVICE',\n    'EMPTY',\n];\nfunction hasMatchingName(service, method, methodConfig, matchLevel) {\n    for (const name of methodConfig.name) {\n        switch (matchLevel) {\n            case 'EMPTY':\n                if (!name.service && !name.method) {\n                    return true;\n                }\n                break;\n            case 'SERVICE':\n                if (name.service === service && !name.method) {\n                    return true;\n                }\n                break;\n            case 'SERVICE_AND_METHOD':\n                if (name.service === service && name.method === method) {\n                    return true;\n                }\n        }\n    }\n    return false;\n}\nfunction findMatchingConfig(service, method, methodConfigs, matchLevel) {\n    for (const config of methodConfigs) {\n        if (hasMatchingName(service, method, config, matchLevel)) {\n            return config;\n        }\n    }\n    return null;\n}\nfunction getDefaultConfigSelector(serviceConfig) {\n    return function defaultConfigSelector(methodName, metadata) {\n        var _a, _b;\n        const splitName = methodName.split('/').filter(x => x.length > 0);\n        const service = (_a = splitName[0]) !== null && _a !== void 0 ? _a : '';\n        const method = (_b = splitName[1]) !== null && _b !== void 0 ? _b : '';\n        if (serviceConfig && serviceConfig.methodConfig) {\n            /* Check for the following in order, and return the first method\n             * config that matches:\n             * 1. A name that exactly matches the service and method\n             * 2. A name with no method set that matches the service\n             * 3. An empty name\n             */\n            for (const matchLevel of NAME_MATCH_LEVEL_ORDER) {\n                const matchingConfig = findMatchingConfig(service, method, serviceConfig.methodConfig, matchLevel);\n                if (matchingConfig) {\n                    return {\n                        methodConfig: matchingConfig,\n                        pickInformation: {},\n                        status: constants_1.Status.OK,\n                        dynamicFilterFactories: [],\n                    };\n                }\n            }\n        }\n        return {\n            methodConfig: { name: [] },\n            pickInformation: {},\n            status: constants_1.Status.OK,\n            dynamicFilterFactories: [],\n        };\n    };\n}\nclass ResolvingLoadBalancer {\n    /**\n     * Wrapper class that behaves like a `LoadBalancer` and also handles name\n     * resolution internally.\n     * @param target The address of the backend to connect to.\n     * @param channelControlHelper `ChannelControlHelper` instance provided by\n     *     this load balancer's owner.\n     * @param defaultServiceConfig The default service configuration to be used\n     *     if none is provided by the name resolver. A `null` value indicates\n     *     that the default behavior should be the default unconfigured behavior.\n     *     In practice, that means using the \"pick first\" load balancer\n     *     implmentation\n     */\n    constructor(target, channelControlHelper, channelOptions, onSuccessfulResolution, onFailedResolution) {\n        this.target = target;\n        this.channelControlHelper = channelControlHelper;\n        this.onSuccessfulResolution = onSuccessfulResolution;\n        this.onFailedResolution = onFailedResolution;\n        this.latestChildState = connectivity_state_1.ConnectivityState.IDLE;\n        this.latestChildPicker = new picker_1.QueuePicker(this);\n        /**\n         * This resolving load balancer's current connectivity state.\n         */\n        this.currentState = connectivity_state_1.ConnectivityState.IDLE;\n        /**\n         * The service config object from the last successful resolution, if\n         * available. A value of null indicates that we have not yet received a valid\n         * service config from the resolver.\n         */\n        this.previousServiceConfig = null;\n        /**\n         * Indicates whether we should attempt to resolve again after the backoff\n         * timer runs out.\n         */\n        this.continueResolving = false;\n        if (channelOptions['grpc.service_config']) {\n            this.defaultServiceConfig = (0, service_config_1.validateServiceConfig)(JSON.parse(channelOptions['grpc.service_config']));\n        }\n        else {\n            this.defaultServiceConfig = {\n                loadBalancingConfig: [],\n                methodConfig: [],\n            };\n        }\n        this.updateState(connectivity_state_1.ConnectivityState.IDLE, new picker_1.QueuePicker(this));\n        this.childLoadBalancer = new load_balancer_child_handler_1.ChildLoadBalancerHandler({\n            createSubchannel: channelControlHelper.createSubchannel.bind(channelControlHelper),\n            requestReresolution: () => {\n                /* If the backoffTimeout is running, we're still backing off from\n                 * making resolve requests, so we shouldn't make another one here.\n                 * In that case, the backoff timer callback will call\n                 * updateResolution */\n                if (this.backoffTimeout.isRunning()) {\n                    trace('requestReresolution delayed by backoff timer until ' + this.backoffTimeout.getEndTime().toISOString());\n                    this.continueResolving = true;\n                }\n                else {\n                    this.updateResolution();\n                }\n            },\n            updateState: (newState, picker) => {\n                this.latestChildState = newState;\n                this.latestChildPicker = picker;\n                this.updateState(newState, picker);\n            },\n            addChannelzChild: channelControlHelper.addChannelzChild.bind(channelControlHelper),\n            removeChannelzChild: channelControlHelper.removeChannelzChild.bind(channelControlHelper),\n        });\n        this.innerResolver = (0, resolver_1.createResolver)(target, {\n            onSuccessfulResolution: (addressList, serviceConfig, serviceConfigError, configSelector, attributes) => {\n                var _a;\n                this.backoffTimeout.stop();\n                this.backoffTimeout.reset();\n                let workingServiceConfig = null;\n                /* This first group of conditionals implements the algorithm described\n                 * in https://github.com/grpc/proposal/blob/master/A21-service-config-error-handling.md\n                 * in the section called \"Behavior on receiving a new gRPC Config\".\n                 */\n                if (serviceConfig === null) {\n                    // Step 4 and 5\n                    if (serviceConfigError === null) {\n                        // Step 5\n                        this.previousServiceConfig = null;\n                        workingServiceConfig = this.defaultServiceConfig;\n                    }\n                    else {\n                        // Step 4\n                        if (this.previousServiceConfig === null) {\n                            // Step 4.ii\n                            this.handleResolutionFailure(serviceConfigError);\n                        }\n                        else {\n                            // Step 4.i\n                            workingServiceConfig = this.previousServiceConfig;\n                        }\n                    }\n                }\n                else {\n                    // Step 3\n                    workingServiceConfig = serviceConfig;\n                    this.previousServiceConfig = serviceConfig;\n                }\n                const workingConfigList = (_a = workingServiceConfig === null || workingServiceConfig === void 0 ? void 0 : workingServiceConfig.loadBalancingConfig) !== null && _a !== void 0 ? _a : [];\n                const loadBalancingConfig = (0, load_balancer_1.getFirstUsableConfig)(workingConfigList, true);\n                if (loadBalancingConfig === null) {\n                    // There were load balancing configs but none are supported. This counts as a resolution failure\n                    this.handleResolutionFailure({\n                        code: constants_1.Status.UNAVAILABLE,\n                        details: 'All load balancer options in service config are not compatible',\n                        metadata: new metadata_1.Metadata(),\n                    });\n                    return;\n                }\n                this.childLoadBalancer.updateAddressList(addressList, loadBalancingConfig, attributes);\n                const finalServiceConfig = workingServiceConfig !== null && workingServiceConfig !== void 0 ? workingServiceConfig : this.defaultServiceConfig;\n                this.onSuccessfulResolution(finalServiceConfig, configSelector !== null && configSelector !== void 0 ? configSelector : getDefaultConfigSelector(finalServiceConfig));\n            },\n            onError: (error) => {\n                this.handleResolutionFailure(error);\n            },\n        }, channelOptions);\n        const backoffOptions = {\n            initialDelay: channelOptions['grpc.initial_reconnect_backoff_ms'],\n            maxDelay: channelOptions['grpc.max_reconnect_backoff_ms'],\n        };\n        this.backoffTimeout = new backoff_timeout_1.BackoffTimeout(() => {\n            if (this.continueResolving) {\n                this.updateResolution();\n                this.continueResolving = false;\n            }\n            else {\n                this.updateState(this.latestChildState, this.latestChildPicker);\n            }\n        }, backoffOptions);\n        this.backoffTimeout.unref();\n    }\n    updateResolution() {\n        this.innerResolver.updateResolution();\n        if (this.currentState === connectivity_state_1.ConnectivityState.IDLE) {\n            this.updateState(connectivity_state_1.ConnectivityState.CONNECTING, new picker_1.QueuePicker(this));\n        }\n        this.backoffTimeout.runOnce();\n    }\n    updateState(connectivityState, picker) {\n        trace((0, uri_parser_1.uriToString)(this.target) +\n            ' ' +\n            connectivity_state_1.ConnectivityState[this.currentState] +\n            ' -> ' +\n            connectivity_state_1.ConnectivityState[connectivityState]);\n        // Ensure that this.exitIdle() is called by the picker\n        if (connectivityState === connectivity_state_1.ConnectivityState.IDLE) {\n            picker = new picker_1.QueuePicker(this);\n        }\n        this.currentState = connectivityState;\n        this.channelControlHelper.updateState(connectivityState, picker);\n    }\n    handleResolutionFailure(error) {\n        if (this.latestChildState === connectivity_state_1.ConnectivityState.IDLE) {\n            this.updateState(connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, new picker_1.UnavailablePicker(error));\n            this.onFailedResolution(error);\n        }\n    }\n    exitIdle() {\n        if (this.currentState === connectivity_state_1.ConnectivityState.IDLE ||\n            this.currentState === connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n            if (this.backoffTimeout.isRunning()) {\n                this.continueResolving = true;\n            }\n            else {\n                this.updateResolution();\n            }\n        }\n        this.childLoadBalancer.exitIdle();\n    }\n    updateAddressList(addressList, lbConfig) {\n        throw new Error('updateAddressList not supported on ResolvingLoadBalancer');\n    }\n    resetBackoff() {\n        this.backoffTimeout.reset();\n        this.childLoadBalancer.resetBackoff();\n    }\n    destroy() {\n        this.childLoadBalancer.destroy();\n        this.innerResolver.destroy();\n        this.backoffTimeout.reset();\n        this.backoffTimeout.stop();\n        this.latestChildState = connectivity_state_1.ConnectivityState.IDLE;\n        this.latestChildPicker = new picker_1.QueuePicker(this);\n        this.currentState = connectivity_state_1.ConnectivityState.IDLE;\n        this.previousServiceConfig = null;\n        this.continueResolving = false;\n    }\n    getTypeName() {\n        return 'resolving_load_balancer';\n    }\n}\nexports.ResolvingLoadBalancer = ResolvingLoadBalancer;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.channelOptionsEqual = exports.recognizedOptions = void 0;\n/**\n * This is for checking provided options at runtime. This is an object for\n * easier membership checking.\n */\nexports.recognizedOptions = {\n    'grpc.ssl_target_name_override': true,\n    'grpc.primary_user_agent': true,\n    'grpc.secondary_user_agent': true,\n    'grpc.default_authority': true,\n    'grpc.keepalive_time_ms': true,\n    'grpc.keepalive_timeout_ms': true,\n    'grpc.keepalive_permit_without_calls': true,\n    'grpc.service_config': true,\n    'grpc.max_concurrent_streams': true,\n    'grpc.initial_reconnect_backoff_ms': true,\n    'grpc.max_reconnect_backoff_ms': true,\n    'grpc.use_local_subchannel_pool': true,\n    'grpc.max_send_message_length': true,\n    'grpc.max_receive_message_length': true,\n    'grpc.enable_http_proxy': true,\n    'grpc.enable_channelz': true,\n    'grpc.dns_min_time_between_resolutions_ms': true,\n    'grpc.enable_retries': true,\n    'grpc.per_rpc_retry_buffer_size': true,\n    'grpc.retry_buffer_size': true,\n    'grpc.max_connection_age_ms': true,\n    'grpc.max_connection_age_grace_ms': true,\n    'grpc-node.max_session_memory': true,\n    'grpc.service_config_disable_resolution': true,\n    'grpc.client_idle_timeout_ms': true,\n    'grpc-node.tls_enable_trace': true,\n};\nfunction channelOptionsEqual(options1, options2) {\n    const keys1 = Object.keys(options1).sort();\n    const keys2 = Object.keys(options2).sort();\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (let i = 0; i < keys1.length; i += 1) {\n        if (keys1[i] !== keys2[i]) {\n            return false;\n        }\n        if (options1[keys1[i]] !== options2[keys2[i]]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.channelOptionsEqual = channelOptionsEqual;\n", "\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringToSubchannelAddress = exports.subchannelAddressToString = exports.subchannelAddressEqual = exports.isTcpSubchannelAddress = void 0;\nconst net_1 = require(\"net\");\nfunction isTcpSubchannelAddress(address) {\n    return 'port' in address;\n}\nexports.isTcpSubchannelAddress = isTcpSubchannelAddress;\nfunction subchannelAddressEqual(address1, address2) {\n    if (!address1 && !address2) {\n        return true;\n    }\n    if (!address1 || !address2) {\n        return false;\n    }\n    if (isTcpSubchannelAddress(address1)) {\n        return (isTcpSubchannelAddress(address2) &&\n            address1.host === address2.host &&\n            address1.port === address2.port);\n    }\n    else {\n        return !isTcpSubchannelAddress(address2) && address1.path === address2.path;\n    }\n}\nexports.subchannelAddressEqual = subchannelAddressEqual;\nfunction subchannelAddressToString(address) {\n    if (isTcpSubchannelAddress(address)) {\n        return address.host + ':' + address.port;\n    }\n    else {\n        return address.path;\n    }\n}\nexports.subchannelAddressToString = subchannelAddressToString;\nconst DEFAULT_PORT = 443;\nfunction stringToSubchannelAddress(addressString, port) {\n    if ((0, net_1.isIP)(addressString)) {\n        return {\n            host: addressString,\n            port: port !== null && port !== void 0 ? port : DEFAULT_PORT,\n        };\n    }\n    else {\n        return {\n            path: addressString,\n        };\n    }\n}\nexports.stringToSubchannelAddress = stringToSubchannelAddress;\n", "\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addAdminServicesToServer = exports.registerAdminService = void 0;\nconst registeredAdminServices = [];\nfunction registerAdminService(getServiceDefinition, getHandlers) {\n    registeredAdminServices.push({ getServiceDefinition, getHandlers });\n}\nexports.registerAdminService = registerAdminService;\nfunction addAdminServicesToServer(server) {\n    for (const { getServiceDefinition, getHandlers } of registeredAdminServices) {\n        server.addService(getServiceDefinition(), getHandlers());\n    }\n}\nexports.addAdminServicesToServer = addAdminServicesToServer;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientDuplexStreamImpl = exports.ClientWritableStreamImpl = exports.ClientReadableStreamImpl = exports.ClientUnaryCallImpl = exports.callErrorFromStatus = void 0;\nconst events_1 = require(\"events\");\nconst stream_1 = require(\"stream\");\nconst constants_1 = require(\"./constants\");\n/**\n * Construct a ServiceError from a StatusObject. This function exists primarily\n * as an attempt to make the error stack trace clearly communicate that the\n * error is not necessarily a problem in gRPC itself.\n * @param status\n */\nfunction callErrorFromStatus(status, callerStack) {\n    const message = `${status.code} ${constants_1.Status[status.code]}: ${status.details}`;\n    const error = new Error(message);\n    const stack = `${error.stack}\\nfor call at\\n${callerStack}`;\n    return Object.assign(new Error(message), status, { stack });\n}\nexports.callErrorFromStatus = callErrorFromStatus;\nclass ClientUnaryCallImpl extends events_1.EventEmitter {\n    constructor() {\n        super();\n    }\n    cancel() {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n}\nexports.ClientUnaryCallImpl = ClientUnaryCallImpl;\nclass ClientReadableStreamImpl extends stream_1.Readable {\n    constructor(deserialize) {\n        super({ objectMode: true });\n        this.deserialize = deserialize;\n    }\n    cancel() {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    _read(_size) {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.startRead();\n    }\n}\nexports.ClientReadableStreamImpl = ClientReadableStreamImpl;\nclass ClientWritableStreamImpl extends stream_1.Writable {\n    constructor(serialize) {\n        super({ objectMode: true });\n        this.serialize = serialize;\n    }\n    cancel() {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    _write(chunk, encoding, cb) {\n        var _a;\n        const context = {\n            callback: cb,\n        };\n        const flags = Number(encoding);\n        if (!Number.isNaN(flags)) {\n            context.flags = flags;\n        }\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.sendMessageWithContext(context, chunk);\n    }\n    _final(cb) {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.halfClose();\n        cb();\n    }\n}\nexports.ClientWritableStreamImpl = ClientWritableStreamImpl;\nclass ClientDuplexStreamImpl extends stream_1.Duplex {\n    constructor(serialize, deserialize) {\n        super({ objectMode: true });\n        this.serialize = serialize;\n        this.deserialize = deserialize;\n    }\n    cancel() {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    _read(_size) {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.startRead();\n    }\n    _write(chunk, encoding, cb) {\n        var _a;\n        const context = {\n            callback: cb,\n        };\n        const flags = Number(encoding);\n        if (!Number.isNaN(flags)) {\n            context.flags = flags;\n        }\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.sendMessageWithContext(context, chunk);\n    }\n    _final(cb) {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.halfClose();\n        cb();\n    }\n}\nexports.ClientDuplexStreamImpl = ClientDuplexStreamImpl;\n", "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InterceptingListenerImpl = exports.isInterceptingListener = void 0;\nfunction isInterceptingListener(listener) {\n    return (listener.onReceiveMetadata !== undefined &&\n        listener.onReceiveMetadata.length === 1);\n}\nexports.isInterceptingListener = isInterceptingListener;\nclass InterceptingListenerImpl {\n    constructor(listener, nextListener) {\n        this.listener = listener;\n        this.nextListener = nextListener;\n        this.processingMetadata = false;\n        this.hasPendingMessage = false;\n        this.processingMessage = false;\n        this.pendingStatus = null;\n    }\n    processPendingMessage() {\n        if (this.hasPendingMessage) {\n            this.nextListener.onReceiveMessage(this.pendingMessage);\n            this.pendingMessage = null;\n            this.hasPendingMessage = false;\n        }\n    }\n    processPendingStatus() {\n        if (this.pendingStatus) {\n            this.nextListener.onReceiveStatus(this.pendingStatus);\n        }\n    }\n    onReceiveMetadata(metadata) {\n        this.processingMetadata = true;\n        this.listener.onReceiveMetadata(metadata, metadata => {\n            this.processingMetadata = false;\n            this.nextListener.onReceiveMetadata(metadata);\n            this.processPendingMessage();\n            this.processPendingStatus();\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onReceiveMessage(message) {\n        /* If this listener processes messages asynchronously, the last message may\n         * be reordered with respect to the status */\n        this.processingMessage = true;\n        this.listener.onReceiveMessage(message, msg => {\n            this.processingMessage = false;\n            if (this.processingMetadata) {\n                this.pendingMessage = msg;\n                this.hasPendingMessage = true;\n            }\n            else {\n                this.nextListener.onReceiveMessage(msg);\n                this.processPendingStatus();\n            }\n        });\n    }\n    onReceiveStatus(status) {\n        this.listener.onReceiveStatus(status, processedStatus => {\n            if (this.processingMetadata || this.processingMessage) {\n                this.pendingStatus = processedStatus;\n            }\n            else {\n                this.nextListener.onReceiveStatus(processedStatus);\n            }\n        });\n    }\n}\nexports.InterceptingListenerImpl = InterceptingListenerImpl;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInterceptingCall = exports.InterceptingCall = exports.RequesterBuilder = exports.ListenerBuilder = exports.InterceptorConfigurationError = void 0;\nconst metadata_1 = require(\"./metadata\");\nconst call_interface_1 = require(\"./call-interface\");\nconst constants_1 = require(\"./constants\");\nconst error_1 = require(\"./error\");\n/**\n * Error class associated with passing both interceptors and interceptor\n * providers to a client constructor or as call options.\n */\nclass InterceptorConfigurationError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'InterceptorConfigurationError';\n        Error.captureStackTrace(this, InterceptorConfigurationError);\n    }\n}\nexports.InterceptorConfigurationError = InterceptorConfigurationError;\nclass ListenerBuilder {\n    constructor() {\n        this.metadata = undefined;\n        this.message = undefined;\n        this.status = undefined;\n    }\n    withOnReceiveMetadata(onReceiveMetadata) {\n        this.metadata = onReceiveMetadata;\n        return this;\n    }\n    withOnReceiveMessage(onReceiveMessage) {\n        this.message = onReceiveMessage;\n        return this;\n    }\n    withOnReceiveStatus(onReceiveStatus) {\n        this.status = onReceiveStatus;\n        return this;\n    }\n    build() {\n        return {\n            onReceiveMetadata: this.metadata,\n            onReceiveMessage: this.message,\n            onReceiveStatus: this.status,\n        };\n    }\n}\nexports.ListenerBuilder = ListenerBuilder;\nclass RequesterBuilder {\n    constructor() {\n        this.start = undefined;\n        this.message = undefined;\n        this.halfClose = undefined;\n        this.cancel = undefined;\n    }\n    withStart(start) {\n        this.start = start;\n        return this;\n    }\n    withSendMessage(sendMessage) {\n        this.message = sendMessage;\n        return this;\n    }\n    withHalfClose(halfClose) {\n        this.halfClose = halfClose;\n        return this;\n    }\n    withCancel(cancel) {\n        this.cancel = cancel;\n        return this;\n    }\n    build() {\n        return {\n            start: this.start,\n            sendMessage: this.message,\n            halfClose: this.halfClose,\n            cancel: this.cancel,\n        };\n    }\n}\nexports.RequesterBuilder = RequesterBuilder;\n/**\n * A Listener with a default pass-through implementation of each method. Used\n * for filling out Listeners with some methods omitted.\n */\nconst defaultListener = {\n    onReceiveMetadata: (metadata, next) => {\n        next(metadata);\n    },\n    onReceiveMessage: (message, next) => {\n        next(message);\n    },\n    onReceiveStatus: (status, next) => {\n        next(status);\n    },\n};\n/**\n * A Requester with a default pass-through implementation of each method. Used\n * for filling out Requesters with some methods omitted.\n */\nconst defaultRequester = {\n    start: (metadata, listener, next) => {\n        next(metadata, listener);\n    },\n    sendMessage: (message, next) => {\n        next(message);\n    },\n    halfClose: next => {\n        next();\n    },\n    cancel: next => {\n        next();\n    },\n};\nclass InterceptingCall {\n    constructor(nextCall, requester) {\n        var _a, _b, _c, _d;\n        this.nextCall = nextCall;\n        /**\n         * Indicates that metadata has been passed to the requester's start\n         * method but it has not been passed to the corresponding next callback\n         */\n        this.processingMetadata = false;\n        /**\n         * Message context for a pending message that is waiting for\n         */\n        this.pendingMessageContext = null;\n        /**\n         * Indicates that a message has been passed to the requester's sendMessage\n         * method but it has not been passed to the corresponding next callback\n         */\n        this.processingMessage = false;\n        /**\n         * Indicates that a status was received but could not be propagated because\n         * a message was still being processed.\n         */\n        this.pendingHalfClose = false;\n        if (requester) {\n            this.requester = {\n                start: (_a = requester.start) !== null && _a !== void 0 ? _a : defaultRequester.start,\n                sendMessage: (_b = requester.sendMessage) !== null && _b !== void 0 ? _b : defaultRequester.sendMessage,\n                halfClose: (_c = requester.halfClose) !== null && _c !== void 0 ? _c : defaultRequester.halfClose,\n                cancel: (_d = requester.cancel) !== null && _d !== void 0 ? _d : defaultRequester.cancel,\n            };\n        }\n        else {\n            this.requester = defaultRequester;\n        }\n    }\n    cancelWithStatus(status, details) {\n        this.requester.cancel(() => {\n            this.nextCall.cancelWithStatus(status, details);\n        });\n    }\n    getPeer() {\n        return this.nextCall.getPeer();\n    }\n    processPendingMessage() {\n        if (this.pendingMessageContext) {\n            this.nextCall.sendMessageWithContext(this.pendingMessageContext, this.pendingMessage);\n            this.pendingMessageContext = null;\n            this.pendingMessage = null;\n        }\n    }\n    processPendingHalfClose() {\n        if (this.pendingHalfClose) {\n            this.nextCall.halfClose();\n        }\n    }\n    start(metadata, interceptingListener) {\n        var _a, _b, _c, _d, _e, _f;\n        const fullInterceptingListener = {\n            onReceiveMetadata: (_b = (_a = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveMetadata) === null || _a === void 0 ? void 0 : _a.bind(interceptingListener)) !== null && _b !== void 0 ? _b : (metadata => { }),\n            onReceiveMessage: (_d = (_c = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveMessage) === null || _c === void 0 ? void 0 : _c.bind(interceptingListener)) !== null && _d !== void 0 ? _d : (message => { }),\n            onReceiveStatus: (_f = (_e = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveStatus) === null || _e === void 0 ? void 0 : _e.bind(interceptingListener)) !== null && _f !== void 0 ? _f : (status => { }),\n        };\n        this.processingMetadata = true;\n        this.requester.start(metadata, fullInterceptingListener, (md, listener) => {\n            var _a, _b, _c;\n            this.processingMetadata = false;\n            let finalInterceptingListener;\n            if ((0, call_interface_1.isInterceptingListener)(listener)) {\n                finalInterceptingListener = listener;\n            }\n            else {\n                const fullListener = {\n                    onReceiveMetadata: (_a = listener.onReceiveMetadata) !== null && _a !== void 0 ? _a : defaultListener.onReceiveMetadata,\n                    onReceiveMessage: (_b = listener.onReceiveMessage) !== null && _b !== void 0 ? _b : defaultListener.onReceiveMessage,\n                    onReceiveStatus: (_c = listener.onReceiveStatus) !== null && _c !== void 0 ? _c : defaultListener.onReceiveStatus,\n                };\n                finalInterceptingListener = new call_interface_1.InterceptingListenerImpl(fullListener, fullInterceptingListener);\n            }\n            this.nextCall.start(md, finalInterceptingListener);\n            this.processPendingMessage();\n            this.processPendingHalfClose();\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendMessageWithContext(context, message) {\n        this.processingMessage = true;\n        this.requester.sendMessage(message, finalMessage => {\n            this.processingMessage = false;\n            if (this.processingMetadata) {\n                this.pendingMessageContext = context;\n                this.pendingMessage = message;\n            }\n            else {\n                this.nextCall.sendMessageWithContext(context, finalMessage);\n                this.processPendingHalfClose();\n            }\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendMessage(message) {\n        this.sendMessageWithContext({}, message);\n    }\n    startRead() {\n        this.nextCall.startRead();\n    }\n    halfClose() {\n        this.requester.halfClose(() => {\n            if (this.processingMetadata || this.processingMessage) {\n                this.pendingHalfClose = true;\n            }\n            else {\n                this.nextCall.halfClose();\n            }\n        });\n    }\n}\nexports.InterceptingCall = InterceptingCall;\nfunction getCall(channel, path, options) {\n    var _a, _b;\n    const deadline = (_a = options.deadline) !== null && _a !== void 0 ? _a : Infinity;\n    const host = options.host;\n    const parent = (_b = options.parent) !== null && _b !== void 0 ? _b : null;\n    const propagateFlags = options.propagate_flags;\n    const credentials = options.credentials;\n    const call = channel.createCall(path, deadline, host, parent, propagateFlags);\n    if (credentials) {\n        call.setCredentials(credentials);\n    }\n    return call;\n}\n/**\n * InterceptingCall implementation that directly owns the underlying Call\n * object and handles serialization and deseraizliation.\n */\nclass BaseInterceptingCall {\n    constructor(call, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    methodDefinition) {\n        this.call = call;\n        this.methodDefinition = methodDefinition;\n    }\n    cancelWithStatus(status, details) {\n        this.call.cancelWithStatus(status, details);\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendMessageWithContext(context, message) {\n        let serialized;\n        try {\n            serialized = this.methodDefinition.requestSerialize(message);\n        }\n        catch (e) {\n            this.call.cancelWithStatus(constants_1.Status.INTERNAL, `Request message serialization failure: ${(0, error_1.getErrorMessage)(e)}`);\n            return;\n        }\n        this.call.sendMessageWithContext(context, serialized);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendMessage(message) {\n        this.sendMessageWithContext({}, message);\n    }\n    start(metadata, interceptingListener) {\n        let readError = null;\n        this.call.start(metadata, {\n            onReceiveMetadata: metadata => {\n                var _a;\n                (_a = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveMetadata) === null || _a === void 0 ? void 0 : _a.call(interceptingListener, metadata);\n            },\n            onReceiveMessage: message => {\n                var _a;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                let deserialized;\n                try {\n                    deserialized = this.methodDefinition.responseDeserialize(message);\n                }\n                catch (e) {\n                    readError = {\n                        code: constants_1.Status.INTERNAL,\n                        details: `Response message parsing error: ${(0, error_1.getErrorMessage)(e)}`,\n                        metadata: new metadata_1.Metadata(),\n                    };\n                    this.call.cancelWithStatus(readError.code, readError.details);\n                    return;\n                }\n                (_a = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveMessage) === null || _a === void 0 ? void 0 : _a.call(interceptingListener, deserialized);\n            },\n            onReceiveStatus: status => {\n                var _a, _b;\n                if (readError) {\n                    (_a = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveStatus) === null || _a === void 0 ? void 0 : _a.call(interceptingListener, readError);\n                }\n                else {\n                    (_b = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveStatus) === null || _b === void 0 ? void 0 : _b.call(interceptingListener, status);\n                }\n            },\n        });\n    }\n    startRead() {\n        this.call.startRead();\n    }\n    halfClose() {\n        this.call.halfClose();\n    }\n}\n/**\n * BaseInterceptingCall with special-cased behavior for methods with unary\n * responses.\n */\nclass BaseUnaryInterceptingCall extends BaseInterceptingCall {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(call, methodDefinition) {\n        super(call, methodDefinition);\n    }\n    start(metadata, listener) {\n        var _a, _b;\n        let receivedMessage = false;\n        const wrapperListener = {\n            onReceiveMetadata: (_b = (_a = listener === null || listener === void 0 ? void 0 : listener.onReceiveMetadata) === null || _a === void 0 ? void 0 : _a.bind(listener)) !== null && _b !== void 0 ? _b : (metadata => { }),\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onReceiveMessage: (message) => {\n                var _a;\n                receivedMessage = true;\n                (_a = listener === null || listener === void 0 ? void 0 : listener.onReceiveMessage) === null || _a === void 0 ? void 0 : _a.call(listener, message);\n            },\n            onReceiveStatus: (status) => {\n                var _a, _b;\n                if (!receivedMessage) {\n                    (_a = listener === null || listener === void 0 ? void 0 : listener.onReceiveMessage) === null || _a === void 0 ? void 0 : _a.call(listener, null);\n                }\n                (_b = listener === null || listener === void 0 ? void 0 : listener.onReceiveStatus) === null || _b === void 0 ? void 0 : _b.call(listener, status);\n            },\n        };\n        super.start(metadata, wrapperListener);\n        this.call.startRead();\n    }\n}\n/**\n * BaseInterceptingCall with special-cased behavior for methods with streaming\n * responses.\n */\nclass BaseStreamingInterceptingCall extends BaseInterceptingCall {\n}\nfunction getBottomInterceptingCall(channel, options, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nmethodDefinition) {\n    const call = getCall(channel, methodDefinition.path, options);\n    if (methodDefinition.responseStream) {\n        return new BaseStreamingInterceptingCall(call, methodDefinition);\n    }\n    else {\n        return new BaseUnaryInterceptingCall(call, methodDefinition);\n    }\n}\nfunction getInterceptingCall(interceptorArgs, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nmethodDefinition, options, channel) {\n    if (interceptorArgs.clientInterceptors.length > 0 &&\n        interceptorArgs.clientInterceptorProviders.length > 0) {\n        throw new InterceptorConfigurationError('Both interceptors and interceptor_providers were passed as options ' +\n            'to the client constructor. Only one of these is allowed.');\n    }\n    if (interceptorArgs.callInterceptors.length > 0 &&\n        interceptorArgs.callInterceptorProviders.length > 0) {\n        throw new InterceptorConfigurationError('Both interceptors and interceptor_providers were passed as call ' +\n            'options. Only one of these is allowed.');\n    }\n    let interceptors = [];\n    // Interceptors passed to the call override interceptors passed to the client constructor\n    if (interceptorArgs.callInterceptors.length > 0 ||\n        interceptorArgs.callInterceptorProviders.length > 0) {\n        interceptors = []\n            .concat(interceptorArgs.callInterceptors, interceptorArgs.callInterceptorProviders.map(provider => provider(methodDefinition)))\n            .filter(interceptor => interceptor);\n        // Filter out falsy values when providers return nothing\n    }\n    else {\n        interceptors = []\n            .concat(interceptorArgs.clientInterceptors, interceptorArgs.clientInterceptorProviders.map(provider => provider(methodDefinition)))\n            .filter(interceptor => interceptor);\n        // Filter out falsy values when providers return nothing\n    }\n    const interceptorOptions = Object.assign({}, options, {\n        method_definition: methodDefinition,\n    });\n    /* For each interceptor in the list, the nextCall function passed to it is\n     * based on the next interceptor in the list, using a nextCall function\n     * constructed with the following interceptor in the list, and so on. The\n     * initialValue, which is effectively at the end of the list, is a nextCall\n     * function that invokes getBottomInterceptingCall, the result of which\n     * handles (de)serialization and also gets the underlying call from the\n     * channel. */\n    const getCall = interceptors.reduceRight((nextCall, nextInterceptor) => {\n        return currentOptions => nextInterceptor(currentOptions, nextCall);\n    }, (finalOptions) => getBottomInterceptingCall(channel, finalOptions, methodDefinition));\n    return getCall(interceptorOptions);\n}\nexports.getInterceptingCall = getInterceptingCall;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Client = void 0;\nconst call_1 = require(\"./call\");\nconst channel_1 = require(\"./channel\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst client_interceptors_1 = require(\"./client-interceptors\");\nconst CHANNEL_SYMBOL = Symbol();\nconst INTERCEPTOR_SYMBOL = Symbol();\nconst INTERCEPTOR_PROVIDER_SYMBOL = Symbol();\nconst CALL_INVOCATION_TRANSFORMER_SYMBOL = Symbol();\nfunction isFunction(arg) {\n    return typeof arg === 'function';\n}\nfunction getErrorStackString(error) {\n    return error.stack.split('\\n').slice(1).join('\\n');\n}\n/**\n * A generic gRPC client. Primarily useful as a base class for all generated\n * clients.\n */\nclass Client {\n    constructor(address, credentials, options = {}) {\n        var _a, _b;\n        options = Object.assign({}, options);\n        this[INTERCEPTOR_SYMBOL] = (_a = options.interceptors) !== null && _a !== void 0 ? _a : [];\n        delete options.interceptors;\n        this[INTERCEPTOR_PROVIDER_SYMBOL] = (_b = options.interceptor_providers) !== null && _b !== void 0 ? _b : [];\n        delete options.interceptor_providers;\n        if (this[INTERCEPTOR_SYMBOL].length > 0 &&\n            this[INTERCEPTOR_PROVIDER_SYMBOL].length > 0) {\n            throw new Error('Both interceptors and interceptor_providers were passed as options ' +\n                'to the client constructor. Only one of these is allowed.');\n        }\n        this[CALL_INVOCATION_TRANSFORMER_SYMBOL] =\n            options.callInvocationTransformer;\n        delete options.callInvocationTransformer;\n        if (options.channelOverride) {\n            this[CHANNEL_SYMBOL] = options.channelOverride;\n        }\n        else if (options.channelFactoryOverride) {\n            const channelFactoryOverride = options.channelFactoryOverride;\n            delete options.channelFactoryOverride;\n            this[CHANNEL_SYMBOL] = channelFactoryOverride(address, credentials, options);\n        }\n        else {\n            this[CHANNEL_SYMBOL] = new channel_1.ChannelImplementation(address, credentials, options);\n        }\n    }\n    close() {\n        this[CHANNEL_SYMBOL].close();\n    }\n    getChannel() {\n        return this[CHANNEL_SYMBOL];\n    }\n    waitForReady(deadline, callback) {\n        const checkState = (err) => {\n            if (err) {\n                callback(new Error('Failed to connect before the deadline'));\n                return;\n            }\n            let newState;\n            try {\n                newState = this[CHANNEL_SYMBOL].getConnectivityState(true);\n            }\n            catch (e) {\n                callback(new Error('The channel has been closed'));\n                return;\n            }\n            if (newState === connectivity_state_1.ConnectivityState.READY) {\n                callback();\n            }\n            else {\n                try {\n                    this[CHANNEL_SYMBOL].watchConnectivityState(newState, deadline, checkState);\n                }\n                catch (e) {\n                    callback(new Error('The channel has been closed'));\n                }\n            }\n        };\n        setImmediate(checkState);\n    }\n    checkOptionalUnaryResponseArguments(arg1, arg2, arg3) {\n        if (isFunction(arg1)) {\n            return { metadata: new metadata_1.Metadata(), options: {}, callback: arg1 };\n        }\n        else if (isFunction(arg2)) {\n            if (arg1 instanceof metadata_1.Metadata) {\n                return { metadata: arg1, options: {}, callback: arg2 };\n            }\n            else {\n                return { metadata: new metadata_1.Metadata(), options: arg1, callback: arg2 };\n            }\n        }\n        else {\n            if (!(arg1 instanceof metadata_1.Metadata &&\n                arg2 instanceof Object &&\n                isFunction(arg3))) {\n                throw new Error('Incorrect arguments passed');\n            }\n            return { metadata: arg1, options: arg2, callback: arg3 };\n        }\n    }\n    makeUnaryRequest(method, serialize, deserialize, argument, metadata, options, callback) {\n        var _a, _b;\n        const checkedArguments = this.checkOptionalUnaryResponseArguments(metadata, options, callback);\n        const methodDefinition = {\n            path: method,\n            requestStream: false,\n            responseStream: false,\n            requestSerialize: serialize,\n            responseDeserialize: deserialize,\n        };\n        let callProperties = {\n            argument: argument,\n            metadata: checkedArguments.metadata,\n            call: new call_1.ClientUnaryCallImpl(),\n            channel: this[CHANNEL_SYMBOL],\n            methodDefinition: methodDefinition,\n            callOptions: checkedArguments.options,\n            callback: checkedArguments.callback,\n        };\n        if (this[CALL_INVOCATION_TRANSFORMER_SYMBOL]) {\n            callProperties = this[CALL_INVOCATION_TRANSFORMER_SYMBOL](callProperties);\n        }\n        const emitter = callProperties.call;\n        const interceptorArgs = {\n            clientInterceptors: this[INTERCEPTOR_SYMBOL],\n            clientInterceptorProviders: this[INTERCEPTOR_PROVIDER_SYMBOL],\n            callInterceptors: (_a = callProperties.callOptions.interceptors) !== null && _a !== void 0 ? _a : [],\n            callInterceptorProviders: (_b = callProperties.callOptions.interceptor_providers) !== null && _b !== void 0 ? _b : [],\n        };\n        const call = (0, client_interceptors_1.getInterceptingCall)(interceptorArgs, callProperties.methodDefinition, callProperties.callOptions, callProperties.channel);\n        /* This needs to happen before the emitter is used. Unfortunately we can't\n         * enforce this with the type system. We need to construct this emitter\n         * before calling the CallInvocationTransformer, and we need to create the\n         * call after that. */\n        emitter.call = call;\n        let responseMessage = null;\n        let receivedStatus = false;\n        let callerStackError = new Error();\n        call.start(callProperties.metadata, {\n            onReceiveMetadata: metadata => {\n                emitter.emit('metadata', metadata);\n            },\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onReceiveMessage(message) {\n                if (responseMessage !== null) {\n                    call.cancelWithStatus(constants_1.Status.INTERNAL, 'Too many responses received');\n                }\n                responseMessage = message;\n            },\n            onReceiveStatus(status) {\n                if (receivedStatus) {\n                    return;\n                }\n                receivedStatus = true;\n                if (status.code === constants_1.Status.OK) {\n                    if (responseMessage === null) {\n                        const callerStack = getErrorStackString(callerStackError);\n                        callProperties.callback((0, call_1.callErrorFromStatus)({\n                            code: constants_1.Status.INTERNAL,\n                            details: 'No message received',\n                            metadata: status.metadata,\n                        }, callerStack));\n                    }\n                    else {\n                        callProperties.callback(null, responseMessage);\n                    }\n                }\n                else {\n                    const callerStack = getErrorStackString(callerStackError);\n                    callProperties.callback((0, call_1.callErrorFromStatus)(status, callerStack));\n                }\n                /* Avoid retaining the callerStackError object in the call context of\n                 * the status event handler. */\n                callerStackError = null;\n                emitter.emit('status', status);\n            },\n        });\n        call.sendMessage(argument);\n        call.halfClose();\n        return emitter;\n    }\n    makeClientStreamRequest(method, serialize, deserialize, metadata, options, callback) {\n        var _a, _b;\n        const checkedArguments = this.checkOptionalUnaryResponseArguments(metadata, options, callback);\n        const methodDefinition = {\n            path: method,\n            requestStream: true,\n            responseStream: false,\n            requestSerialize: serialize,\n            responseDeserialize: deserialize,\n        };\n        let callProperties = {\n            metadata: checkedArguments.metadata,\n            call: new call_1.ClientWritableStreamImpl(serialize),\n            channel: this[CHANNEL_SYMBOL],\n            methodDefinition: methodDefinition,\n            callOptions: checkedArguments.options,\n            callback: checkedArguments.callback,\n        };\n        if (this[CALL_INVOCATION_TRANSFORMER_SYMBOL]) {\n            callProperties = this[CALL_INVOCATION_TRANSFORMER_SYMBOL](callProperties);\n        }\n        const emitter = callProperties.call;\n        const interceptorArgs = {\n            clientInterceptors: this[INTERCEPTOR_SYMBOL],\n            clientInterceptorProviders: this[INTERCEPTOR_PROVIDER_SYMBOL],\n            callInterceptors: (_a = callProperties.callOptions.interceptors) !== null && _a !== void 0 ? _a : [],\n            callInterceptorProviders: (_b = callProperties.callOptions.interceptor_providers) !== null && _b !== void 0 ? _b : [],\n        };\n        const call = (0, client_interceptors_1.getInterceptingCall)(interceptorArgs, callProperties.methodDefinition, callProperties.callOptions, callProperties.channel);\n        /* This needs to happen before the emitter is used. Unfortunately we can't\n         * enforce this with the type system. We need to construct this emitter\n         * before calling the CallInvocationTransformer, and we need to create the\n         * call after that. */\n        emitter.call = call;\n        let responseMessage = null;\n        let receivedStatus = false;\n        let callerStackError = new Error();\n        call.start(callProperties.metadata, {\n            onReceiveMetadata: metadata => {\n                emitter.emit('metadata', metadata);\n            },\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onReceiveMessage(message) {\n                if (responseMessage !== null) {\n                    call.cancelWithStatus(constants_1.Status.INTERNAL, 'Too many responses received');\n                }\n                responseMessage = message;\n            },\n            onReceiveStatus(status) {\n                if (receivedStatus) {\n                    return;\n                }\n                receivedStatus = true;\n                if (status.code === constants_1.Status.OK) {\n                    if (responseMessage === null) {\n                        const callerStack = getErrorStackString(callerStackError);\n                        callProperties.callback((0, call_1.callErrorFromStatus)({\n                            code: constants_1.Status.INTERNAL,\n                            details: 'No message received',\n                            metadata: status.metadata,\n                        }, callerStack));\n                    }\n                    else {\n                        callProperties.callback(null, responseMessage);\n                    }\n                }\n                else {\n                    const callerStack = getErrorStackString(callerStackError);\n                    callProperties.callback((0, call_1.callErrorFromStatus)(status, callerStack));\n                }\n                /* Avoid retaining the callerStackError object in the call context of\n                 * the status event handler. */\n                callerStackError = null;\n                emitter.emit('status', status);\n            },\n        });\n        return emitter;\n    }\n    checkMetadataAndOptions(arg1, arg2) {\n        let metadata;\n        let options;\n        if (arg1 instanceof metadata_1.Metadata) {\n            metadata = arg1;\n            if (arg2) {\n                options = arg2;\n            }\n            else {\n                options = {};\n            }\n        }\n        else {\n            if (arg1) {\n                options = arg1;\n            }\n            else {\n                options = {};\n            }\n            metadata = new metadata_1.Metadata();\n        }\n        return { metadata, options };\n    }\n    makeServerStreamRequest(method, serialize, deserialize, argument, metadata, options) {\n        var _a, _b;\n        const checkedArguments = this.checkMetadataAndOptions(metadata, options);\n        const methodDefinition = {\n            path: method,\n            requestStream: false,\n            responseStream: true,\n            requestSerialize: serialize,\n            responseDeserialize: deserialize,\n        };\n        let callProperties = {\n            argument: argument,\n            metadata: checkedArguments.metadata,\n            call: new call_1.ClientReadableStreamImpl(deserialize),\n            channel: this[CHANNEL_SYMBOL],\n            methodDefinition: methodDefinition,\n            callOptions: checkedArguments.options,\n        };\n        if (this[CALL_INVOCATION_TRANSFORMER_SYMBOL]) {\n            callProperties = this[CALL_INVOCATION_TRANSFORMER_SYMBOL](callProperties);\n        }\n        const stream = callProperties.call;\n        const interceptorArgs = {\n            clientInterceptors: this[INTERCEPTOR_SYMBOL],\n            clientInterceptorProviders: this[INTERCEPTOR_PROVIDER_SYMBOL],\n            callInterceptors: (_a = callProperties.callOptions.interceptors) !== null && _a !== void 0 ? _a : [],\n            callInterceptorProviders: (_b = callProperties.callOptions.interceptor_providers) !== null && _b !== void 0 ? _b : [],\n        };\n        const call = (0, client_interceptors_1.getInterceptingCall)(interceptorArgs, callProperties.methodDefinition, callProperties.callOptions, callProperties.channel);\n        /* This needs to happen before the emitter is used. Unfortunately we can't\n         * enforce this with the type system. We need to construct this emitter\n         * before calling the CallInvocationTransformer, and we need to create the\n         * call after that. */\n        stream.call = call;\n        let receivedStatus = false;\n        let callerStackError = new Error();\n        call.start(callProperties.metadata, {\n            onReceiveMetadata(metadata) {\n                stream.emit('metadata', metadata);\n            },\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onReceiveMessage(message) {\n                stream.push(message);\n            },\n            onReceiveStatus(status) {\n                if (receivedStatus) {\n                    return;\n                }\n                receivedStatus = true;\n                stream.push(null);\n                if (status.code !== constants_1.Status.OK) {\n                    const callerStack = getErrorStackString(callerStackError);\n                    stream.emit('error', (0, call_1.callErrorFromStatus)(status, callerStack));\n                }\n                /* Avoid retaining the callerStackError object in the call context of\n                 * the status event handler. */\n                callerStackError = null;\n                stream.emit('status', status);\n            },\n        });\n        call.sendMessage(argument);\n        call.halfClose();\n        return stream;\n    }\n    makeBidiStreamRequest(method, serialize, deserialize, metadata, options) {\n        var _a, _b;\n        const checkedArguments = this.checkMetadataAndOptions(metadata, options);\n        const methodDefinition = {\n            path: method,\n            requestStream: true,\n            responseStream: true,\n            requestSerialize: serialize,\n            responseDeserialize: deserialize,\n        };\n        let callProperties = {\n            metadata: checkedArguments.metadata,\n            call: new call_1.ClientDuplexStreamImpl(serialize, deserialize),\n            channel: this[CHANNEL_SYMBOL],\n            methodDefinition: methodDefinition,\n            callOptions: checkedArguments.options,\n        };\n        if (this[CALL_INVOCATION_TRANSFORMER_SYMBOL]) {\n            callProperties = this[CALL_INVOCATION_TRANSFORMER_SYMBOL](callProperties);\n        }\n        const stream = callProperties.call;\n        const interceptorArgs = {\n            clientInterceptors: this[INTERCEPTOR_SYMBOL],\n            clientInterceptorProviders: this[INTERCEPTOR_PROVIDER_SYMBOL],\n            callInterceptors: (_a = callProperties.callOptions.interceptors) !== null && _a !== void 0 ? _a : [],\n            callInterceptorProviders: (_b = callProperties.callOptions.interceptor_providers) !== null && _b !== void 0 ? _b : [],\n        };\n        const call = (0, client_interceptors_1.getInterceptingCall)(interceptorArgs, callProperties.methodDefinition, callProperties.callOptions, callProperties.channel);\n        /* This needs to happen before the emitter is used. Unfortunately we can't\n         * enforce this with the type system. We need to construct this emitter\n         * before calling the CallInvocationTransformer, and we need to create the\n         * call after that. */\n        stream.call = call;\n        let receivedStatus = false;\n        let callerStackError = new Error();\n        call.start(callProperties.metadata, {\n            onReceiveMetadata(metadata) {\n                stream.emit('metadata', metadata);\n            },\n            onReceiveMessage(message) {\n                stream.push(message);\n            },\n            onReceiveStatus(status) {\n                if (receivedStatus) {\n                    return;\n                }\n                receivedStatus = true;\n                stream.push(null);\n                if (status.code !== constants_1.Status.OK) {\n                    const callerStack = getErrorStackString(callerStackError);\n                    stream.emit('error', (0, call_1.callErrorFromStatus)(status, callerStack));\n                }\n                /* Avoid retaining the callerStackError object in the call context of\n                 * the status event handler. */\n                callerStackError = null;\n                stream.emit('status', status);\n            },\n        });\n        return stream;\n    }\n}\nexports.Client = Client;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadPackageDefinition = exports.makeClientConstructor = void 0;\nconst client_1 = require(\"./client\");\n/**\n * Map with short names for each of the requester maker functions. Used in\n * makeClientConstructor\n * @private\n */\nconst requesterFuncs = {\n    unary: client_1.Client.prototype.makeUnaryRequest,\n    server_stream: client_1.Client.prototype.makeServerStreamRequest,\n    client_stream: client_1.Client.prototype.makeClientStreamRequest,\n    bidi: client_1.Client.prototype.makeBidiStreamRequest,\n};\n/**\n * Returns true, if given key is included in the blacklisted\n * keys.\n * @param key key for check, string.\n */\nfunction isPrototypePolluted(key) {\n    return ['__proto__', 'prototype', 'constructor'].includes(key);\n}\n/**\n * Creates a constructor for a client with the given methods, as specified in\n * the methods argument. The resulting class will have an instance method for\n * each method in the service, which is a partial application of one of the\n * [Client]{@link grpc.Client} request methods, depending on `requestSerialize`\n * and `responseSerialize`, with the `method`, `serialize`, and `deserialize`\n * arguments predefined.\n * @param methods An object mapping method names to\n *     method attributes\n * @param serviceName The fully qualified name of the service\n * @param classOptions An options object.\n * @return New client constructor, which is a subclass of\n *     {@link grpc.Client}, and has the same arguments as that constructor.\n */\nfunction makeClientConstructor(methods, serviceName, classOptions) {\n    if (!classOptions) {\n        classOptions = {};\n    }\n    class ServiceClientImpl extends client_1.Client {\n    }\n    Object.keys(methods).forEach(name => {\n        if (isPrototypePolluted(name)) {\n            return;\n        }\n        const attrs = methods[name];\n        let methodType;\n        // TODO(murgatroid99): Verify that we don't need this anymore\n        if (typeof name === 'string' && name.charAt(0) === '$') {\n            throw new Error('Method names cannot start with $');\n        }\n        if (attrs.requestStream) {\n            if (attrs.responseStream) {\n                methodType = 'bidi';\n            }\n            else {\n                methodType = 'client_stream';\n            }\n        }\n        else {\n            if (attrs.responseStream) {\n                methodType = 'server_stream';\n            }\n            else {\n                methodType = 'unary';\n            }\n        }\n        const serialize = attrs.requestSerialize;\n        const deserialize = attrs.responseDeserialize;\n        const methodFunc = partial(requesterFuncs[methodType], attrs.path, serialize, deserialize);\n        ServiceClientImpl.prototype[name] = methodFunc;\n        // Associate all provided attributes with the method\n        Object.assign(ServiceClientImpl.prototype[name], attrs);\n        if (attrs.originalName && !isPrototypePolluted(attrs.originalName)) {\n            ServiceClientImpl.prototype[attrs.originalName] =\n                ServiceClientImpl.prototype[name];\n        }\n    });\n    ServiceClientImpl.service = methods;\n    ServiceClientImpl.serviceName = serviceName;\n    return ServiceClientImpl;\n}\nexports.makeClientConstructor = makeClientConstructor;\nfunction partial(fn, path, serialize, deserialize) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (...args) {\n        return fn.call(this, path, serialize, deserialize, ...args);\n    };\n}\nfunction isProtobufTypeDefinition(obj) {\n    return 'format' in obj;\n}\n/**\n * Load a gRPC package definition as a gRPC object hierarchy.\n * @param packageDef The package definition object.\n * @return The resulting gRPC object.\n */\nfunction loadPackageDefinition(packageDef) {\n    const result = {};\n    for (const serviceFqn in packageDef) {\n        if (Object.prototype.hasOwnProperty.call(packageDef, serviceFqn)) {\n            const service = packageDef[serviceFqn];\n            const nameComponents = serviceFqn.split('.');\n            if (nameComponents.some((comp) => isPrototypePolluted(comp))) {\n                continue;\n            }\n            const serviceName = nameComponents[nameComponents.length - 1];\n            let current = result;\n            for (const packageName of nameComponents.slice(0, -1)) {\n                if (!current[packageName]) {\n                    current[packageName] = {};\n                }\n                current = current[packageName];\n            }\n            if (isProtobufTypeDefinition(service)) {\n                current[serviceName] = service;\n            }\n            else {\n                current[serviceName] = makeClientConstructor(service, serviceName, {});\n            }\n        }\n    }\n    return result;\n}\nexports.loadPackageDefinition = loadPackageDefinition;\n", "\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = exports.getChannelzServiceDefinition = exports.getChannelzHandlers = exports.unregisterChannelzRef = exports.registerChannelzSocket = exports.registerChannelzServer = exports.registerChannelzSubchannel = exports.registerChannelzChannel = exports.ChannelzCallTracker = exports.ChannelzChildrenTracker = exports.ChannelzTrace = void 0;\nconst net_1 = require(\"net\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst constants_1 = require(\"./constants\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst admin_1 = require(\"./admin\");\nconst make_client_1 = require(\"./make-client\");\nfunction channelRefToMessage(ref) {\n    return {\n        channel_id: ref.id,\n        name: ref.name,\n    };\n}\nfunction subchannelRefToMessage(ref) {\n    return {\n        subchannel_id: ref.id,\n        name: ref.name,\n    };\n}\nfunction serverRefToMessage(ref) {\n    return {\n        server_id: ref.id,\n    };\n}\nfunction socketRefToMessage(ref) {\n    return {\n        socket_id: ref.id,\n        name: ref.name,\n    };\n}\n/**\n * The loose upper bound on the number of events that should be retained in a\n * trace. This may be exceeded by up to a factor of 2. Arbitrarily chosen as a\n * number that should be large enough to contain the recent relevant\n * information, but small enough to not use excessive memory.\n */\nconst TARGET_RETAINED_TRACES = 32;\nclass ChannelzTrace {\n    constructor() {\n        this.events = [];\n        this.eventsLogged = 0;\n        this.creationTimestamp = new Date();\n    }\n    addTrace(severity, description, child) {\n        const timestamp = new Date();\n        this.events.push({\n            description: description,\n            severity: severity,\n            timestamp: timestamp,\n            childChannel: (child === null || child === void 0 ? void 0 : child.kind) === 'channel' ? child : undefined,\n            childSubchannel: (child === null || child === void 0 ? void 0 : child.kind) === 'subchannel' ? child : undefined,\n        });\n        // Whenever the trace array gets too large, discard the first half\n        if (this.events.length >= TARGET_RETAINED_TRACES * 2) {\n            this.events = this.events.slice(TARGET_RETAINED_TRACES);\n        }\n        this.eventsLogged += 1;\n    }\n    getTraceMessage() {\n        return {\n            creation_timestamp: dateToProtoTimestamp(this.creationTimestamp),\n            num_events_logged: this.eventsLogged,\n            events: this.events.map(event => {\n                return {\n                    description: event.description,\n                    severity: event.severity,\n                    timestamp: dateToProtoTimestamp(event.timestamp),\n                    channel_ref: event.childChannel\n                        ? channelRefToMessage(event.childChannel)\n                        : null,\n                    subchannel_ref: event.childSubchannel\n                        ? subchannelRefToMessage(event.childSubchannel)\n                        : null,\n                };\n            }),\n        };\n    }\n}\nexports.ChannelzTrace = ChannelzTrace;\nclass ChannelzChildrenTracker {\n    constructor() {\n        this.channelChildren = new Map();\n        this.subchannelChildren = new Map();\n        this.socketChildren = new Map();\n    }\n    refChild(child) {\n        var _a, _b, _c;\n        switch (child.kind) {\n            case 'channel': {\n                const trackedChild = (_a = this.channelChildren.get(child.id)) !== null && _a !== void 0 ? _a : {\n                    ref: child,\n                    count: 0,\n                };\n                trackedChild.count += 1;\n                this.channelChildren.set(child.id, trackedChild);\n                break;\n            }\n            case 'subchannel': {\n                const trackedChild = (_b = this.subchannelChildren.get(child.id)) !== null && _b !== void 0 ? _b : {\n                    ref: child,\n                    count: 0,\n                };\n                trackedChild.count += 1;\n                this.subchannelChildren.set(child.id, trackedChild);\n                break;\n            }\n            case 'socket': {\n                const trackedChild = (_c = this.socketChildren.get(child.id)) !== null && _c !== void 0 ? _c : {\n                    ref: child,\n                    count: 0,\n                };\n                trackedChild.count += 1;\n                this.socketChildren.set(child.id, trackedChild);\n                break;\n            }\n        }\n    }\n    unrefChild(child) {\n        switch (child.kind) {\n            case 'channel': {\n                const trackedChild = this.channelChildren.get(child.id);\n                if (trackedChild !== undefined) {\n                    trackedChild.count -= 1;\n                    if (trackedChild.count === 0) {\n                        this.channelChildren.delete(child.id);\n                    }\n                    else {\n                        this.channelChildren.set(child.id, trackedChild);\n                    }\n                }\n                break;\n            }\n            case 'subchannel': {\n                const trackedChild = this.subchannelChildren.get(child.id);\n                if (trackedChild !== undefined) {\n                    trackedChild.count -= 1;\n                    if (trackedChild.count === 0) {\n                        this.subchannelChildren.delete(child.id);\n                    }\n                    else {\n                        this.subchannelChildren.set(child.id, trackedChild);\n                    }\n                }\n                break;\n            }\n            case 'socket': {\n                const trackedChild = this.socketChildren.get(child.id);\n                if (trackedChild !== undefined) {\n                    trackedChild.count -= 1;\n                    if (trackedChild.count === 0) {\n                        this.socketChildren.delete(child.id);\n                    }\n                    else {\n                        this.socketChildren.set(child.id, trackedChild);\n                    }\n                }\n                break;\n            }\n        }\n    }\n    getChildLists() {\n        const channels = [];\n        for (const { ref } of this.channelChildren.values()) {\n            channels.push(ref);\n        }\n        const subchannels = [];\n        for (const { ref } of this.subchannelChildren.values()) {\n            subchannels.push(ref);\n        }\n        const sockets = [];\n        for (const { ref } of this.socketChildren.values()) {\n            sockets.push(ref);\n        }\n        return { channels, subchannels, sockets };\n    }\n}\nexports.ChannelzChildrenTracker = ChannelzChildrenTracker;\nclass ChannelzCallTracker {\n    constructor() {\n        this.callsStarted = 0;\n        this.callsSucceeded = 0;\n        this.callsFailed = 0;\n        this.lastCallStartedTimestamp = null;\n    }\n    addCallStarted() {\n        this.callsStarted += 1;\n        this.lastCallStartedTimestamp = new Date();\n    }\n    addCallSucceeded() {\n        this.callsSucceeded += 1;\n    }\n    addCallFailed() {\n        this.callsFailed += 1;\n    }\n}\nexports.ChannelzCallTracker = ChannelzCallTracker;\nlet nextId = 1;\nfunction getNextId() {\n    return nextId++;\n}\nconst channels = [];\nconst subchannels = [];\nconst servers = [];\nconst sockets = [];\nfunction registerChannelzChannel(name, getInfo, channelzEnabled) {\n    const id = getNextId();\n    const ref = { id, name, kind: 'channel' };\n    if (channelzEnabled) {\n        channels[id] = { ref, getInfo };\n    }\n    return ref;\n}\nexports.registerChannelzChannel = registerChannelzChannel;\nfunction registerChannelzSubchannel(name, getInfo, channelzEnabled) {\n    const id = getNextId();\n    const ref = { id, name, kind: 'subchannel' };\n    if (channelzEnabled) {\n        subchannels[id] = { ref, getInfo };\n    }\n    return ref;\n}\nexports.registerChannelzSubchannel = registerChannelzSubchannel;\nfunction registerChannelzServer(getInfo, channelzEnabled) {\n    const id = getNextId();\n    const ref = { id, kind: 'server' };\n    if (channelzEnabled) {\n        servers[id] = { ref, getInfo };\n    }\n    return ref;\n}\nexports.registerChannelzServer = registerChannelzServer;\nfunction registerChannelzSocket(name, getInfo, channelzEnabled) {\n    const id = getNextId();\n    const ref = { id, name, kind: 'socket' };\n    if (channelzEnabled) {\n        sockets[id] = { ref, getInfo };\n    }\n    return ref;\n}\nexports.registerChannelzSocket = registerChannelzSocket;\nfunction unregisterChannelzRef(ref) {\n    switch (ref.kind) {\n        case 'channel':\n            delete channels[ref.id];\n            return;\n        case 'subchannel':\n            delete subchannels[ref.id];\n            return;\n        case 'server':\n            delete servers[ref.id];\n            return;\n        case 'socket':\n            delete sockets[ref.id];\n            return;\n    }\n}\nexports.unregisterChannelzRef = unregisterChannelzRef;\n/**\n * Parse a single section of an IPv6 address as two bytes\n * @param addressSection A hexadecimal string of length up to 4\n * @returns The pair of bytes representing this address section\n */\nfunction parseIPv6Section(addressSection) {\n    const numberValue = Number.parseInt(addressSection, 16);\n    return [(numberValue / 256) | 0, numberValue % 256];\n}\n/**\n * Parse a chunk of an IPv6 address string to some number of bytes\n * @param addressChunk Some number of segments of up to 4 hexadecimal\n *   characters each, joined by colons.\n * @returns The list of bytes representing this address chunk\n */\nfunction parseIPv6Chunk(addressChunk) {\n    if (addressChunk === '') {\n        return [];\n    }\n    const bytePairs = addressChunk\n        .split(':')\n        .map(section => parseIPv6Section(section));\n    const result = [];\n    return result.concat(...bytePairs);\n}\n/**\n * Converts an IPv4 or IPv6 address from string representation to binary\n * representation\n * @param ipAddress an IP address in standard IPv4 or IPv6 text format\n * @returns\n */\nfunction ipAddressStringToBuffer(ipAddress) {\n    if ((0, net_1.isIPv4)(ipAddress)) {\n        return Buffer.from(Uint8Array.from(ipAddress.split('.').map(segment => Number.parseInt(segment))));\n    }\n    else if ((0, net_1.isIPv6)(ipAddress)) {\n        let leftSection;\n        let rightSection;\n        const doubleColonIndex = ipAddress.indexOf('::');\n        if (doubleColonIndex === -1) {\n            leftSection = ipAddress;\n            rightSection = '';\n        }\n        else {\n            leftSection = ipAddress.substring(0, doubleColonIndex);\n            rightSection = ipAddress.substring(doubleColonIndex + 2);\n        }\n        const leftBuffer = Buffer.from(parseIPv6Chunk(leftSection));\n        const rightBuffer = Buffer.from(parseIPv6Chunk(rightSection));\n        const middleBuffer = Buffer.alloc(16 - leftBuffer.length - rightBuffer.length, 0);\n        return Buffer.concat([leftBuffer, middleBuffer, rightBuffer]);\n    }\n    else {\n        return null;\n    }\n}\nfunction connectivityStateToMessage(state) {\n    switch (state) {\n        case connectivity_state_1.ConnectivityState.CONNECTING:\n            return {\n                state: 'CONNECTING',\n            };\n        case connectivity_state_1.ConnectivityState.IDLE:\n            return {\n                state: 'IDLE',\n            };\n        case connectivity_state_1.ConnectivityState.READY:\n            return {\n                state: 'READY',\n            };\n        case connectivity_state_1.ConnectivityState.SHUTDOWN:\n            return {\n                state: 'SHUTDOWN',\n            };\n        case connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE:\n            return {\n                state: 'TRANSIENT_FAILURE',\n            };\n        default:\n            return {\n                state: 'UNKNOWN',\n            };\n    }\n}\nfunction dateToProtoTimestamp(date) {\n    if (!date) {\n        return null;\n    }\n    const millisSinceEpoch = date.getTime();\n    return {\n        seconds: (millisSinceEpoch / 1000) | 0,\n        nanos: (millisSinceEpoch % 1000) * 1000000,\n    };\n}\nfunction getChannelMessage(channelEntry) {\n    const resolvedInfo = channelEntry.getInfo();\n    return {\n        ref: channelRefToMessage(channelEntry.ref),\n        data: {\n            target: resolvedInfo.target,\n            state: connectivityStateToMessage(resolvedInfo.state),\n            calls_started: resolvedInfo.callTracker.callsStarted,\n            calls_succeeded: resolvedInfo.callTracker.callsSucceeded,\n            calls_failed: resolvedInfo.callTracker.callsFailed,\n            last_call_started_timestamp: dateToProtoTimestamp(resolvedInfo.callTracker.lastCallStartedTimestamp),\n            trace: resolvedInfo.trace.getTraceMessage(),\n        },\n        channel_ref: resolvedInfo.children.channels.map(ref => channelRefToMessage(ref)),\n        subchannel_ref: resolvedInfo.children.subchannels.map(ref => subchannelRefToMessage(ref)),\n    };\n}\nfunction GetChannel(call, callback) {\n    const channelId = Number.parseInt(call.request.channel_id);\n    const channelEntry = channels[channelId];\n    if (channelEntry === undefined) {\n        callback({\n            code: constants_1.Status.NOT_FOUND,\n            details: 'No channel data found for id ' + channelId,\n        });\n        return;\n    }\n    callback(null, { channel: getChannelMessage(channelEntry) });\n}\nfunction GetTopChannels(call, callback) {\n    const maxResults = Number.parseInt(call.request.max_results);\n    const resultList = [];\n    let i = Number.parseInt(call.request.start_channel_id);\n    for (; i < channels.length; i++) {\n        const channelEntry = channels[i];\n        if (channelEntry === undefined) {\n            continue;\n        }\n        resultList.push(getChannelMessage(channelEntry));\n        if (resultList.length >= maxResults) {\n            break;\n        }\n    }\n    callback(null, {\n        channel: resultList,\n        end: i >= servers.length,\n    });\n}\nfunction getServerMessage(serverEntry) {\n    const resolvedInfo = serverEntry.getInfo();\n    return {\n        ref: serverRefToMessage(serverEntry.ref),\n        data: {\n            calls_started: resolvedInfo.callTracker.callsStarted,\n            calls_succeeded: resolvedInfo.callTracker.callsSucceeded,\n            calls_failed: resolvedInfo.callTracker.callsFailed,\n            last_call_started_timestamp: dateToProtoTimestamp(resolvedInfo.callTracker.lastCallStartedTimestamp),\n            trace: resolvedInfo.trace.getTraceMessage(),\n        },\n        listen_socket: resolvedInfo.listenerChildren.sockets.map(ref => socketRefToMessage(ref)),\n    };\n}\nfunction GetServer(call, callback) {\n    const serverId = Number.parseInt(call.request.server_id);\n    const serverEntry = servers[serverId];\n    if (serverEntry === undefined) {\n        callback({\n            code: constants_1.Status.NOT_FOUND,\n            details: 'No server data found for id ' + serverId,\n        });\n        return;\n    }\n    callback(null, { server: getServerMessage(serverEntry) });\n}\nfunction GetServers(call, callback) {\n    const maxResults = Number.parseInt(call.request.max_results);\n    const resultList = [];\n    let i = Number.parseInt(call.request.start_server_id);\n    for (; i < servers.length; i++) {\n        const serverEntry = servers[i];\n        if (serverEntry === undefined) {\n            continue;\n        }\n        resultList.push(getServerMessage(serverEntry));\n        if (resultList.length >= maxResults) {\n            break;\n        }\n    }\n    callback(null, {\n        server: resultList,\n        end: i >= servers.length,\n    });\n}\nfunction GetSubchannel(call, callback) {\n    const subchannelId = Number.parseInt(call.request.subchannel_id);\n    const subchannelEntry = subchannels[subchannelId];\n    if (subchannelEntry === undefined) {\n        callback({\n            code: constants_1.Status.NOT_FOUND,\n            details: 'No subchannel data found for id ' + subchannelId,\n        });\n        return;\n    }\n    const resolvedInfo = subchannelEntry.getInfo();\n    const subchannelMessage = {\n        ref: subchannelRefToMessage(subchannelEntry.ref),\n        data: {\n            target: resolvedInfo.target,\n            state: connectivityStateToMessage(resolvedInfo.state),\n            calls_started: resolvedInfo.callTracker.callsStarted,\n            calls_succeeded: resolvedInfo.callTracker.callsSucceeded,\n            calls_failed: resolvedInfo.callTracker.callsFailed,\n            last_call_started_timestamp: dateToProtoTimestamp(resolvedInfo.callTracker.lastCallStartedTimestamp),\n            trace: resolvedInfo.trace.getTraceMessage(),\n        },\n        socket_ref: resolvedInfo.children.sockets.map(ref => socketRefToMessage(ref)),\n    };\n    callback(null, { subchannel: subchannelMessage });\n}\nfunction subchannelAddressToAddressMessage(subchannelAddress) {\n    var _a;\n    if ((0, subchannel_address_1.isTcpSubchannelAddress)(subchannelAddress)) {\n        return {\n            address: 'tcpip_address',\n            tcpip_address: {\n                ip_address: (_a = ipAddressStringToBuffer(subchannelAddress.host)) !== null && _a !== void 0 ? _a : undefined,\n                port: subchannelAddress.port,\n            },\n        };\n    }\n    else {\n        return {\n            address: 'uds_address',\n            uds_address: {\n                filename: subchannelAddress.path,\n            },\n        };\n    }\n}\nfunction GetSocket(call, callback) {\n    var _a, _b, _c, _d, _e;\n    const socketId = Number.parseInt(call.request.socket_id);\n    const socketEntry = sockets[socketId];\n    if (socketEntry === undefined) {\n        callback({\n            code: constants_1.Status.NOT_FOUND,\n            details: 'No socket data found for id ' + socketId,\n        });\n        return;\n    }\n    const resolvedInfo = socketEntry.getInfo();\n    const securityMessage = resolvedInfo.security\n        ? {\n            model: 'tls',\n            tls: {\n                cipher_suite: resolvedInfo.security.cipherSuiteStandardName\n                    ? 'standard_name'\n                    : 'other_name',\n                standard_name: (_a = resolvedInfo.security.cipherSuiteStandardName) !== null && _a !== void 0 ? _a : undefined,\n                other_name: (_b = resolvedInfo.security.cipherSuiteOtherName) !== null && _b !== void 0 ? _b : undefined,\n                local_certificate: (_c = resolvedInfo.security.localCertificate) !== null && _c !== void 0 ? _c : undefined,\n                remote_certificate: (_d = resolvedInfo.security.remoteCertificate) !== null && _d !== void 0 ? _d : undefined,\n            },\n        }\n        : null;\n    const socketMessage = {\n        ref: socketRefToMessage(socketEntry.ref),\n        local: resolvedInfo.localAddress\n            ? subchannelAddressToAddressMessage(resolvedInfo.localAddress)\n            : null,\n        remote: resolvedInfo.remoteAddress\n            ? subchannelAddressToAddressMessage(resolvedInfo.remoteAddress)\n            : null,\n        remote_name: (_e = resolvedInfo.remoteName) !== null && _e !== void 0 ? _e : undefined,\n        security: securityMessage,\n        data: {\n            keep_alives_sent: resolvedInfo.keepAlivesSent,\n            streams_started: resolvedInfo.streamsStarted,\n            streams_succeeded: resolvedInfo.streamsSucceeded,\n            streams_failed: resolvedInfo.streamsFailed,\n            last_local_stream_created_timestamp: dateToProtoTimestamp(resolvedInfo.lastLocalStreamCreatedTimestamp),\n            last_remote_stream_created_timestamp: dateToProtoTimestamp(resolvedInfo.lastRemoteStreamCreatedTimestamp),\n            messages_received: resolvedInfo.messagesReceived,\n            messages_sent: resolvedInfo.messagesSent,\n            last_message_received_timestamp: dateToProtoTimestamp(resolvedInfo.lastMessageReceivedTimestamp),\n            last_message_sent_timestamp: dateToProtoTimestamp(resolvedInfo.lastMessageSentTimestamp),\n            local_flow_control_window: resolvedInfo.localFlowControlWindow\n                ? { value: resolvedInfo.localFlowControlWindow }\n                : null,\n            remote_flow_control_window: resolvedInfo.remoteFlowControlWindow\n                ? { value: resolvedInfo.remoteFlowControlWindow }\n                : null,\n        },\n    };\n    callback(null, { socket: socketMessage });\n}\nfunction GetServerSockets(call, callback) {\n    const serverId = Number.parseInt(call.request.server_id);\n    const serverEntry = servers[serverId];\n    if (serverEntry === undefined) {\n        callback({\n            code: constants_1.Status.NOT_FOUND,\n            details: 'No server data found for id ' + serverId,\n        });\n        return;\n    }\n    const startId = Number.parseInt(call.request.start_socket_id);\n    const maxResults = Number.parseInt(call.request.max_results);\n    const resolvedInfo = serverEntry.getInfo();\n    // If we wanted to include listener sockets in the result, this line would\n    // instead say\n    // const allSockets = resolvedInfo.listenerChildren.sockets.concat(resolvedInfo.sessionChildren.sockets).sort((ref1, ref2) => ref1.id - ref2.id);\n    const allSockets = resolvedInfo.sessionChildren.sockets.sort((ref1, ref2) => ref1.id - ref2.id);\n    const resultList = [];\n    let i = 0;\n    for (; i < allSockets.length; i++) {\n        if (allSockets[i].id >= startId) {\n            resultList.push(socketRefToMessage(allSockets[i]));\n            if (resultList.length >= maxResults) {\n                break;\n            }\n        }\n    }\n    callback(null, {\n        socket_ref: resultList,\n        end: i >= allSockets.length,\n    });\n}\nfunction getChannelzHandlers() {\n    return {\n        GetChannel,\n        GetTopChannels,\n        GetServer,\n        GetServers,\n        GetSubchannel,\n        GetSocket,\n        GetServerSockets,\n    };\n}\nexports.getChannelzHandlers = getChannelzHandlers;\nlet loadedChannelzDefinition = null;\nfunction getChannelzServiceDefinition() {\n    if (loadedChannelzDefinition) {\n        return loadedChannelzDefinition;\n    }\n    /* The purpose of this complexity is to avoid loading @grpc/proto-loader at\n     * runtime for users who will not use/enable channelz. */\n    const loaderLoadSync = require('@grpc/proto-loader')\n        .loadSync;\n    const loadedProto = loaderLoadSync('channelz.proto', {\n        keepCase: true,\n        longs: String,\n        enums: String,\n        defaults: true,\n        oneofs: true,\n        includeDirs: [`${__dirname}/../../proto`],\n    });\n    const channelzGrpcObject = (0, make_client_1.loadPackageDefinition)(loadedProto);\n    loadedChannelzDefinition =\n        channelzGrpcObject.grpc.channelz.v1.Channelz.service;\n    return loadedChannelzDefinition;\n}\nexports.getChannelzServiceDefinition = getChannelzServiceDefinition;\nfunction setup() {\n    (0, admin_1.registerAdminService)(getChannelzServiceDefinition, getChannelzHandlers);\n}\nexports.setup = setup;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Subchannel = void 0;\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst backoff_timeout_1 = require(\"./backoff-timeout\");\nconst logging = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst channelz_1 = require(\"./channelz\");\nconst TRACER_NAME = 'subchannel';\n/* setInterval and setTimeout only accept signed 32 bit integers. JS doesn't\n * have a constant for the max signed 32 bit integer, so this is a simple way\n * to calculate it */\nconst KEEPALIVE_MAX_TIME_MS = ~(1 << 31);\nclass Subchannel {\n    /**\n     * A class representing a connection to a single backend.\n     * @param channelTarget The target string for the channel as a whole\n     * @param subchannelAddress The address for the backend that this subchannel\n     *     will connect to\n     * @param options The channel options, plus any specific subchannel options\n     *     for this subchannel\n     * @param credentials The channel credentials used to establish this\n     *     connection\n     */\n    constructor(channelTarget, subchannelAddress, options, credentials, connector) {\n        var _a;\n        this.channelTarget = channelTarget;\n        this.subchannelAddress = subchannelAddress;\n        this.options = options;\n        this.credentials = credentials;\n        this.connector = connector;\n        /**\n         * The subchannel's current connectivity state. Invariant: `session` === `null`\n         * if and only if `connectivityState` is IDLE or TRANSIENT_FAILURE.\n         */\n        this.connectivityState = connectivity_state_1.ConnectivityState.IDLE;\n        /**\n         * The underlying http2 session used to make requests.\n         */\n        this.transport = null;\n        /**\n         * Indicates that the subchannel should transition from TRANSIENT_FAILURE to\n         * CONNECTING instead of IDLE when the backoff timeout ends.\n         */\n        this.continueConnecting = false;\n        /**\n         * A list of listener functions that will be called whenever the connectivity\n         * state changes. Will be modified by `addConnectivityStateListener` and\n         * `removeConnectivityStateListener`\n         */\n        this.stateListeners = new Set();\n        /**\n         * Tracks channels and subchannel pools with references to this subchannel\n         */\n        this.refcount = 0;\n        // Channelz info\n        this.channelzEnabled = true;\n        this.callTracker = new channelz_1.ChannelzCallTracker();\n        this.childrenTracker = new channelz_1.ChannelzChildrenTracker();\n        // Channelz socket info\n        this.streamTracker = new channelz_1.ChannelzCallTracker();\n        const backoffOptions = {\n            initialDelay: options['grpc.initial_reconnect_backoff_ms'],\n            maxDelay: options['grpc.max_reconnect_backoff_ms'],\n        };\n        this.backoffTimeout = new backoff_timeout_1.BackoffTimeout(() => {\n            this.handleBackoffTimer();\n        }, backoffOptions);\n        this.backoffTimeout.unref();\n        this.subchannelAddressString = (0, subchannel_address_1.subchannelAddressToString)(subchannelAddress);\n        this.keepaliveTime = (_a = options['grpc.keepalive_time_ms']) !== null && _a !== void 0 ? _a : -1;\n        if (options['grpc.enable_channelz'] === 0) {\n            this.channelzEnabled = false;\n        }\n        this.channelzTrace = new channelz_1.ChannelzTrace();\n        this.channelzRef = (0, channelz_1.registerChannelzSubchannel)(this.subchannelAddressString, () => this.getChannelzInfo(), this.channelzEnabled);\n        if (this.channelzEnabled) {\n            this.channelzTrace.addTrace('CT_INFO', 'Subchannel created');\n        }\n        this.trace('Subchannel constructed with options ' +\n            JSON.stringify(options, undefined, 2));\n    }\n    getChannelzInfo() {\n        return {\n            state: this.connectivityState,\n            trace: this.channelzTrace,\n            callTracker: this.callTracker,\n            children: this.childrenTracker.getChildLists(),\n            target: this.subchannelAddressString,\n        };\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    refTrace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, 'subchannel_refcount', '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    handleBackoffTimer() {\n        if (this.continueConnecting) {\n            this.transitionToState([connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE], connectivity_state_1.ConnectivityState.CONNECTING);\n        }\n        else {\n            this.transitionToState([connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE], connectivity_state_1.ConnectivityState.IDLE);\n        }\n    }\n    /**\n     * Start a backoff timer with the current nextBackoff timeout\n     */\n    startBackoff() {\n        this.backoffTimeout.runOnce();\n    }\n    stopBackoff() {\n        this.backoffTimeout.stop();\n        this.backoffTimeout.reset();\n    }\n    startConnectingInternal() {\n        let options = this.options;\n        if (options['grpc.keepalive_time_ms']) {\n            const adjustedKeepaliveTime = Math.min(this.keepaliveTime, KEEPALIVE_MAX_TIME_MS);\n            options = Object.assign(Object.assign({}, options), { 'grpc.keepalive_time_ms': adjustedKeepaliveTime });\n        }\n        this.connector\n            .connect(this.subchannelAddress, this.credentials, options)\n            .then(transport => {\n            if (this.transitionToState([connectivity_state_1.ConnectivityState.CONNECTING], connectivity_state_1.ConnectivityState.READY)) {\n                this.transport = transport;\n                if (this.channelzEnabled) {\n                    this.childrenTracker.refChild(transport.getChannelzRef());\n                }\n                transport.addDisconnectListener(tooManyPings => {\n                    this.transitionToState([connectivity_state_1.ConnectivityState.READY], connectivity_state_1.ConnectivityState.IDLE);\n                    if (tooManyPings && this.keepaliveTime > 0) {\n                        this.keepaliveTime *= 2;\n                        logging.log(constants_1.LogVerbosity.ERROR, `Connection to ${(0, uri_parser_1.uriToString)(this.channelTarget)} at ${this.subchannelAddressString} rejected by server because of excess pings. Increasing ping interval to ${this.keepaliveTime} ms`);\n                    }\n                });\n            }\n            else {\n                /* If we can't transition from CONNECTING to READY here, we will\n                 * not be using this transport, so release its resources. */\n                transport.shutdown();\n            }\n        }, error => {\n            this.transitionToState([connectivity_state_1.ConnectivityState.CONNECTING], connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, `${error}`);\n        });\n    }\n    /**\n     * Initiate a state transition from any element of oldStates to the new\n     * state. If the current connectivityState is not in oldStates, do nothing.\n     * @param oldStates The set of states to transition from\n     * @param newState The state to transition to\n     * @returns True if the state changed, false otherwise\n     */\n    transitionToState(oldStates, newState, errorMessage) {\n        var _a, _b;\n        if (oldStates.indexOf(this.connectivityState) === -1) {\n            return false;\n        }\n        this.trace(connectivity_state_1.ConnectivityState[this.connectivityState] +\n            ' -> ' +\n            connectivity_state_1.ConnectivityState[newState]);\n        if (this.channelzEnabled) {\n            this.channelzTrace.addTrace('CT_INFO', 'Connectivity state change to ' + connectivity_state_1.ConnectivityState[newState]);\n        }\n        const previousState = this.connectivityState;\n        this.connectivityState = newState;\n        switch (newState) {\n            case connectivity_state_1.ConnectivityState.READY:\n                this.stopBackoff();\n                break;\n            case connectivity_state_1.ConnectivityState.CONNECTING:\n                this.startBackoff();\n                this.startConnectingInternal();\n                this.continueConnecting = false;\n                break;\n            case connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE:\n                if (this.channelzEnabled && this.transport) {\n                    this.childrenTracker.unrefChild(this.transport.getChannelzRef());\n                }\n                (_a = this.transport) === null || _a === void 0 ? void 0 : _a.shutdown();\n                this.transport = null;\n                /* If the backoff timer has already ended by the time we get to the\n                 * TRANSIENT_FAILURE state, we want to immediately transition out of\n                 * TRANSIENT_FAILURE as though the backoff timer is ending right now */\n                if (!this.backoffTimeout.isRunning()) {\n                    process.nextTick(() => {\n                        this.handleBackoffTimer();\n                    });\n                }\n                break;\n            case connectivity_state_1.ConnectivityState.IDLE:\n                if (this.channelzEnabled && this.transport) {\n                    this.childrenTracker.unrefChild(this.transport.getChannelzRef());\n                }\n                (_b = this.transport) === null || _b === void 0 ? void 0 : _b.shutdown();\n                this.transport = null;\n                break;\n            default:\n                throw new Error(`Invalid state: unknown ConnectivityState ${newState}`);\n        }\n        for (const listener of this.stateListeners) {\n            listener(this, previousState, newState, this.keepaliveTime, errorMessage);\n        }\n        return true;\n    }\n    ref() {\n        this.refTrace('refcount ' + this.refcount + ' -> ' + (this.refcount + 1));\n        this.refcount += 1;\n    }\n    unref() {\n        this.refTrace('refcount ' + this.refcount + ' -> ' + (this.refcount - 1));\n        this.refcount -= 1;\n        if (this.refcount === 0) {\n            if (this.channelzEnabled) {\n                this.channelzTrace.addTrace('CT_INFO', 'Shutting down');\n            }\n            if (this.channelzEnabled) {\n                (0, channelz_1.unregisterChannelzRef)(this.channelzRef);\n            }\n            process.nextTick(() => {\n                this.transitionToState([connectivity_state_1.ConnectivityState.CONNECTING, connectivity_state_1.ConnectivityState.READY], connectivity_state_1.ConnectivityState.IDLE);\n            });\n        }\n    }\n    unrefIfOneRef() {\n        if (this.refcount === 1) {\n            this.unref();\n            return true;\n        }\n        return false;\n    }\n    createCall(metadata, host, method, listener) {\n        if (!this.transport) {\n            throw new Error('Cannot create call, subchannel not READY');\n        }\n        let statsTracker;\n        if (this.channelzEnabled) {\n            this.callTracker.addCallStarted();\n            this.streamTracker.addCallStarted();\n            statsTracker = {\n                onCallEnd: status => {\n                    if (status.code === constants_1.Status.OK) {\n                        this.callTracker.addCallSucceeded();\n                    }\n                    else {\n                        this.callTracker.addCallFailed();\n                    }\n                },\n            };\n        }\n        else {\n            statsTracker = {};\n        }\n        return this.transport.createCall(metadata, host, method, listener, statsTracker);\n    }\n    /**\n     * If the subchannel is currently IDLE, start connecting and switch to the\n     * CONNECTING state. If the subchannel is current in TRANSIENT_FAILURE,\n     * the next time it would transition to IDLE, start connecting again instead.\n     * Otherwise, do nothing.\n     */\n    startConnecting() {\n        process.nextTick(() => {\n            /* First, try to transition from IDLE to connecting. If that doesn't happen\n             * because the state is not currently IDLE, check if it is\n             * TRANSIENT_FAILURE, and if so indicate that it should go back to\n             * connecting after the backoff timer ends. Otherwise do nothing */\n            if (!this.transitionToState([connectivity_state_1.ConnectivityState.IDLE], connectivity_state_1.ConnectivityState.CONNECTING)) {\n                if (this.connectivityState === connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n                    this.continueConnecting = true;\n                }\n            }\n        });\n    }\n    /**\n     * Get the subchannel's current connectivity state.\n     */\n    getConnectivityState() {\n        return this.connectivityState;\n    }\n    /**\n     * Add a listener function to be called whenever the subchannel's\n     * connectivity state changes.\n     * @param listener\n     */\n    addConnectivityStateListener(listener) {\n        this.stateListeners.add(listener);\n    }\n    /**\n     * Remove a listener previously added with `addConnectivityStateListener`\n     * @param listener A reference to a function previously passed to\n     *     `addConnectivityStateListener`\n     */\n    removeConnectivityStateListener(listener) {\n        this.stateListeners.delete(listener);\n    }\n    /**\n     * Reset the backoff timeout, and immediately start connecting if in backoff.\n     */\n    resetBackoff() {\n        process.nextTick(() => {\n            this.backoffTimeout.reset();\n            this.transitionToState([connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE], connectivity_state_1.ConnectivityState.CONNECTING);\n        });\n    }\n    getAddress() {\n        return this.subchannelAddressString;\n    }\n    getChannelzRef() {\n        return this.channelzRef;\n    }\n    getRealSubchannel() {\n        return this;\n    }\n    realSubchannelEquals(other) {\n        return other.getRealSubchannel() === this;\n    }\n    throttleKeepalive(newKeepaliveTime) {\n        if (newKeepaliveTime > this.keepaliveTime) {\n            this.keepaliveTime = newKeepaliveTime;\n        }\n    }\n}\nexports.Subchannel = Subchannel;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = exports.DEFAULT_PORT = void 0;\nconst resolver_1 = require(\"./resolver\");\nconst dns = require(\"dns\");\nconst util = require(\"util\");\nconst service_config_1 = require(\"./service-config\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst logging = require(\"./logging\");\nconst constants_2 = require(\"./constants\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst net_1 = require(\"net\");\nconst backoff_timeout_1 = require(\"./backoff-timeout\");\nconst TRACER_NAME = 'dns_resolver';\nfunction trace(text) {\n    logging.trace(constants_2.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\n/**\n * The default TCP port to connect to if not explicitly specified in the target.\n */\nexports.DEFAULT_PORT = 443;\nconst DEFAULT_MIN_TIME_BETWEEN_RESOLUTIONS_MS = 30000;\nconst resolveTxtPromise = util.promisify(dns.resolveTxt);\nconst dnsLookupPromise = util.promisify(dns.lookup);\n/**\n * Merge any number of arrays into a single alternating array\n * @param arrays\n */\nfunction mergeArrays(...arrays) {\n    const result = [];\n    for (let i = 0; i <\n        Math.max.apply(null, arrays.map(array => array.length)); i++) {\n        for (const array of arrays) {\n            if (i < array.length) {\n                result.push(array[i]);\n            }\n        }\n    }\n    return result;\n}\n/**\n * Resolver implementation that handles DNS names and IP addresses.\n */\nclass DnsResolver {\n    constructor(target, listener, channelOptions) {\n        var _a, _b, _c;\n        this.target = target;\n        this.listener = listener;\n        this.pendingLookupPromise = null;\n        this.pendingTxtPromise = null;\n        this.latestLookupResult = null;\n        this.latestServiceConfig = null;\n        this.latestServiceConfigError = null;\n        this.continueResolving = false;\n        this.isNextResolutionTimerRunning = false;\n        this.isServiceConfigEnabled = true;\n        this.returnedIpResult = false;\n        trace('Resolver constructed for target ' + (0, uri_parser_1.uriToString)(target));\n        const hostPort = (0, uri_parser_1.splitHostPort)(target.path);\n        if (hostPort === null) {\n            this.ipResult = null;\n            this.dnsHostname = null;\n            this.port = null;\n        }\n        else {\n            if ((0, net_1.isIPv4)(hostPort.host) || (0, net_1.isIPv6)(hostPort.host)) {\n                this.ipResult = [\n                    {\n                        host: hostPort.host,\n                        port: (_a = hostPort.port) !== null && _a !== void 0 ? _a : exports.DEFAULT_PORT,\n                    },\n                ];\n                this.dnsHostname = null;\n                this.port = null;\n            }\n            else {\n                this.ipResult = null;\n                this.dnsHostname = hostPort.host;\n                this.port = (_b = hostPort.port) !== null && _b !== void 0 ? _b : exports.DEFAULT_PORT;\n            }\n        }\n        this.percentage = Math.random() * 100;\n        if (channelOptions['grpc.service_config_disable_resolution'] === 1) {\n            this.isServiceConfigEnabled = false;\n        }\n        this.defaultResolutionError = {\n            code: constants_1.Status.UNAVAILABLE,\n            details: `Name resolution failed for target ${(0, uri_parser_1.uriToString)(this.target)}`,\n            metadata: new metadata_1.Metadata(),\n        };\n        const backoffOptions = {\n            initialDelay: channelOptions['grpc.initial_reconnect_backoff_ms'],\n            maxDelay: channelOptions['grpc.max_reconnect_backoff_ms'],\n        };\n        this.backoff = new backoff_timeout_1.BackoffTimeout(() => {\n            if (this.continueResolving) {\n                this.startResolutionWithBackoff();\n            }\n        }, backoffOptions);\n        this.backoff.unref();\n        this.minTimeBetweenResolutionsMs =\n            (_c = channelOptions['grpc.dns_min_time_between_resolutions_ms']) !== null && _c !== void 0 ? _c : DEFAULT_MIN_TIME_BETWEEN_RESOLUTIONS_MS;\n        this.nextResolutionTimer = setTimeout(() => { }, 0);\n        clearTimeout(this.nextResolutionTimer);\n    }\n    /**\n     * If the target is an IP address, just provide that address as a result.\n     * Otherwise, initiate A, AAAA, and TXT lookups\n     */\n    startResolution() {\n        if (this.ipResult !== null) {\n            if (!this.returnedIpResult) {\n                trace('Returning IP address for target ' + (0, uri_parser_1.uriToString)(this.target));\n                setImmediate(() => {\n                    this.listener.onSuccessfulResolution(this.ipResult, null, null, null, {});\n                });\n                this.returnedIpResult = true;\n            }\n            this.backoff.stop();\n            this.backoff.reset();\n            this.stopNextResolutionTimer();\n            return;\n        }\n        if (this.dnsHostname === null) {\n            trace('Failed to parse DNS address ' + (0, uri_parser_1.uriToString)(this.target));\n            setImmediate(() => {\n                this.listener.onError({\n                    code: constants_1.Status.UNAVAILABLE,\n                    details: `Failed to parse DNS address ${(0, uri_parser_1.uriToString)(this.target)}`,\n                    metadata: new metadata_1.Metadata(),\n                });\n            });\n            this.stopNextResolutionTimer();\n        }\n        else {\n            if (this.pendingLookupPromise !== null) {\n                return;\n            }\n            trace('Looking up DNS hostname ' + this.dnsHostname);\n            /* We clear out latestLookupResult here to ensure that it contains the\n             * latest result since the last time we started resolving. That way, the\n             * TXT resolution handler can use it, but only if it finishes second. We\n             * don't clear out any previous service config results because it's\n             * better to use a service config that's slightly out of date than to\n             * revert to an effectively blank one. */\n            this.latestLookupResult = null;\n            const hostname = this.dnsHostname;\n            /* We lookup both address families here and then split them up later\n             * because when looking up a single family, dns.lookup outputs an error\n             * if the name exists but there are no records for that family, and that\n             * error is indistinguishable from other kinds of errors */\n            this.pendingLookupPromise = dnsLookupPromise(hostname, { all: true });\n            this.pendingLookupPromise.then(addressList => {\n                if (this.pendingLookupPromise === null) {\n                    return;\n                }\n                this.pendingLookupPromise = null;\n                this.backoff.reset();\n                this.backoff.stop();\n                const ip4Addresses = addressList.filter(addr => addr.family === 4);\n                const ip6Addresses = addressList.filter(addr => addr.family === 6);\n                this.latestLookupResult = mergeArrays(ip6Addresses, ip4Addresses).map(addr => ({ host: addr.address, port: +this.port }));\n                const allAddressesString = '[' +\n                    this.latestLookupResult\n                        .map(addr => addr.host + ':' + addr.port)\n                        .join(',') +\n                    ']';\n                trace('Resolved addresses for target ' +\n                    (0, uri_parser_1.uriToString)(this.target) +\n                    ': ' +\n                    allAddressesString);\n                if (this.latestLookupResult.length === 0) {\n                    this.listener.onError(this.defaultResolutionError);\n                    return;\n                }\n                /* If the TXT lookup has not yet finished, both of the last two\n                 * arguments will be null, which is the equivalent of getting an\n                 * empty TXT response. When the TXT lookup does finish, its handler\n                 * can update the service config by using the same address list */\n                this.listener.onSuccessfulResolution(this.latestLookupResult, this.latestServiceConfig, this.latestServiceConfigError, null, {});\n            }, err => {\n                if (this.pendingLookupPromise === null) {\n                    return;\n                }\n                trace('Resolution error for target ' +\n                    (0, uri_parser_1.uriToString)(this.target) +\n                    ': ' +\n                    err.message);\n                this.pendingLookupPromise = null;\n                this.stopNextResolutionTimer();\n                this.listener.onError(this.defaultResolutionError);\n            });\n            /* If there already is a still-pending TXT resolution, we can just use\n             * that result when it comes in */\n            if (this.isServiceConfigEnabled && this.pendingTxtPromise === null) {\n                /* We handle the TXT query promise differently than the others because\n                 * the name resolution attempt as a whole is a success even if the TXT\n                 * lookup fails */\n                this.pendingTxtPromise = resolveTxtPromise(hostname);\n                this.pendingTxtPromise.then(txtRecord => {\n                    if (this.pendingTxtPromise === null) {\n                        return;\n                    }\n                    this.pendingTxtPromise = null;\n                    try {\n                        this.latestServiceConfig = (0, service_config_1.extractAndSelectServiceConfig)(txtRecord, this.percentage);\n                    }\n                    catch (err) {\n                        this.latestServiceConfigError = {\n                            code: constants_1.Status.UNAVAILABLE,\n                            details: `Parsing service config failed with error ${err.message}`,\n                            metadata: new metadata_1.Metadata(),\n                        };\n                    }\n                    if (this.latestLookupResult !== null) {\n                        /* We rely here on the assumption that calling this function with\n                         * identical parameters will be essentialy idempotent, and calling\n                         * it with the same address list and a different service config\n                         * should result in a fast and seamless switchover. */\n                        this.listener.onSuccessfulResolution(this.latestLookupResult, this.latestServiceConfig, this.latestServiceConfigError, null, {});\n                    }\n                }, err => {\n                    /* If TXT lookup fails we should do nothing, which means that we\n                     * continue to use the result of the most recent successful lookup,\n                     * or the default null config object if there has never been a\n                     * successful lookup. We do not set the latestServiceConfigError\n                     * here because that is specifically used for response validation\n                     * errors. We still need to handle this error so that it does not\n                     * bubble up as an unhandled promise rejection. */\n                });\n            }\n        }\n    }\n    startNextResolutionTimer() {\n        var _a, _b;\n        clearTimeout(this.nextResolutionTimer);\n        this.nextResolutionTimer = (_b = (_a = setTimeout(() => {\n            this.stopNextResolutionTimer();\n            if (this.continueResolving) {\n                this.startResolutionWithBackoff();\n            }\n        }, this.minTimeBetweenResolutionsMs)).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        this.isNextResolutionTimerRunning = true;\n    }\n    stopNextResolutionTimer() {\n        clearTimeout(this.nextResolutionTimer);\n        this.isNextResolutionTimerRunning = false;\n    }\n    startResolutionWithBackoff() {\n        if (this.pendingLookupPromise === null) {\n            this.continueResolving = false;\n            this.backoff.runOnce();\n            this.startNextResolutionTimer();\n            this.startResolution();\n        }\n    }\n    updateResolution() {\n        /* If there is a pending lookup, just let it finish. Otherwise, if the\n         * nextResolutionTimer or backoff timer is running, set the\n         * continueResolving flag to resolve when whichever of those timers\n         * fires. Otherwise, start resolving immediately. */\n        if (this.pendingLookupPromise === null) {\n            if (this.isNextResolutionTimerRunning || this.backoff.isRunning()) {\n                if (this.isNextResolutionTimerRunning) {\n                    trace('resolution update delayed by \"min time between resolutions\" rate limit');\n                }\n                else {\n                    trace('resolution update delayed by backoff timer until ' + this.backoff.getEndTime().toISOString());\n                }\n                this.continueResolving = true;\n            }\n            else {\n                this.startResolutionWithBackoff();\n            }\n        }\n    }\n    /**\n     * Reset the resolver to the same state it had when it was created. In-flight\n     * DNS requests cannot be cancelled, but they are discarded and their results\n     * will be ignored.\n     */\n    destroy() {\n        this.continueResolving = false;\n        this.backoff.reset();\n        this.backoff.stop();\n        this.stopNextResolutionTimer();\n        this.pendingLookupPromise = null;\n        this.pendingTxtPromise = null;\n        this.latestLookupResult = null;\n        this.latestServiceConfig = null;\n        this.latestServiceConfigError = null;\n        this.returnedIpResult = false;\n    }\n    /**\n     * Get the default authority for the given target. For IP targets, that is\n     * the IP address. For DNS targets, it is the hostname.\n     * @param target\n     */\n    static getDefaultAuthority(target) {\n        return target.path;\n    }\n}\n/**\n * Set up the DNS resolver class by registering it as the handler for the\n * \"dns:\" prefix and as the default resolver.\n */\nfunction setup() {\n    (0, resolver_1.registerResolver)('dns', DnsResolver);\n    (0, resolver_1.registerDefaultScheme)('dns');\n}\nexports.setup = setup;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getProxiedConnection = exports.mapProxyName = void 0;\nconst logging_1 = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\nconst resolver_1 = require(\"./resolver\");\nconst http = require(\"http\");\nconst tls = require(\"tls\");\nconst logging = require(\"./logging\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst url_1 = require(\"url\");\nconst resolver_dns_1 = require(\"./resolver-dns\");\nconst TRACER_NAME = 'proxy';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nfunction getProxyInfo() {\n    let proxyEnv = '';\n    let envVar = '';\n    /* Prefer using 'grpc_proxy'. Fallback on 'http_proxy' if it is not set.\n     * Also prefer using 'https_proxy' with fallback on 'http_proxy'. The\n     * fallback behavior can be removed if there's a demand for it.\n     */\n    if (process.env.grpc_proxy) {\n        envVar = 'grpc_proxy';\n        proxyEnv = process.env.grpc_proxy;\n    }\n    else if (process.env.https_proxy) {\n        envVar = 'https_proxy';\n        proxyEnv = process.env.https_proxy;\n    }\n    else if (process.env.http_proxy) {\n        envVar = 'http_proxy';\n        proxyEnv = process.env.http_proxy;\n    }\n    else {\n        return {};\n    }\n    let proxyUrl;\n    try {\n        proxyUrl = new url_1.URL(proxyEnv);\n    }\n    catch (e) {\n        (0, logging_1.log)(constants_1.LogVerbosity.ERROR, `cannot parse value of \"${envVar}\" env var`);\n        return {};\n    }\n    if (proxyUrl.protocol !== 'http:') {\n        (0, logging_1.log)(constants_1.LogVerbosity.ERROR, `\"${proxyUrl.protocol}\" scheme not supported in proxy URI`);\n        return {};\n    }\n    let userCred = null;\n    if (proxyUrl.username) {\n        if (proxyUrl.password) {\n            (0, logging_1.log)(constants_1.LogVerbosity.INFO, 'userinfo found in proxy URI');\n            userCred = `${proxyUrl.username}:${proxyUrl.password}`;\n        }\n        else {\n            userCred = proxyUrl.username;\n        }\n    }\n    const hostname = proxyUrl.hostname;\n    let port = proxyUrl.port;\n    /* The proxy URL uses the scheme \"http:\", which has a default port number of\n     * 80. We need to set that explicitly here if it is omitted because otherwise\n     * it will use gRPC's default port 443. */\n    if (port === '') {\n        port = '80';\n    }\n    const result = {\n        address: `${hostname}:${port}`,\n    };\n    if (userCred) {\n        result.creds = userCred;\n    }\n    trace('Proxy server ' + result.address + ' set by environment variable ' + envVar);\n    return result;\n}\nfunction getNoProxyHostList() {\n    /* Prefer using 'no_grpc_proxy'. Fallback on 'no_proxy' if it is not set. */\n    let noProxyStr = process.env.no_grpc_proxy;\n    let envVar = 'no_grpc_proxy';\n    if (!noProxyStr) {\n        noProxyStr = process.env.no_proxy;\n        envVar = 'no_proxy';\n    }\n    if (noProxyStr) {\n        trace('No proxy server list set by environment variable ' + envVar);\n        return noProxyStr.split(',');\n    }\n    else {\n        return [];\n    }\n}\nfunction mapProxyName(target, options) {\n    var _a;\n    const noProxyResult = {\n        target: target,\n        extraOptions: {},\n    };\n    if (((_a = options['grpc.enable_http_proxy']) !== null && _a !== void 0 ? _a : 1) === 0) {\n        return noProxyResult;\n    }\n    if (target.scheme === 'unix') {\n        return noProxyResult;\n    }\n    const proxyInfo = getProxyInfo();\n    if (!proxyInfo.address) {\n        return noProxyResult;\n    }\n    const hostPort = (0, uri_parser_1.splitHostPort)(target.path);\n    if (!hostPort) {\n        return noProxyResult;\n    }\n    const serverHost = hostPort.host;\n    for (const host of getNoProxyHostList()) {\n        if (host === serverHost) {\n            trace('Not using proxy for target in no_proxy list: ' + (0, uri_parser_1.uriToString)(target));\n            return noProxyResult;\n        }\n    }\n    const extraOptions = {\n        'grpc.http_connect_target': (0, uri_parser_1.uriToString)(target),\n    };\n    if (proxyInfo.creds) {\n        extraOptions['grpc.http_connect_creds'] = proxyInfo.creds;\n    }\n    return {\n        target: {\n            scheme: 'dns',\n            path: proxyInfo.address,\n        },\n        extraOptions: extraOptions,\n    };\n}\nexports.mapProxyName = mapProxyName;\nfunction getProxiedConnection(address, channelOptions, connectionOptions) {\n    var _a;\n    if (!('grpc.http_connect_target' in channelOptions)) {\n        return Promise.resolve({});\n    }\n    const realTarget = channelOptions['grpc.http_connect_target'];\n    const parsedTarget = (0, uri_parser_1.parseUri)(realTarget);\n    if (parsedTarget === null) {\n        return Promise.resolve({});\n    }\n    const splitHostPost = (0, uri_parser_1.splitHostPort)(parsedTarget.path);\n    if (splitHostPost === null) {\n        return Promise.resolve({});\n    }\n    const hostPort = `${splitHostPost.host}:${(_a = splitHostPost.port) !== null && _a !== void 0 ? _a : resolver_dns_1.DEFAULT_PORT}`;\n    const options = {\n        method: 'CONNECT',\n        path: hostPort,\n    };\n    const headers = {\n        Host: hostPort,\n    };\n    // Connect to the subchannel address as a proxy\n    if ((0, subchannel_address_1.isTcpSubchannelAddress)(address)) {\n        options.host = address.host;\n        options.port = address.port;\n    }\n    else {\n        options.socketPath = address.path;\n    }\n    if ('grpc.http_connect_creds' in channelOptions) {\n        headers['Proxy-Authorization'] =\n            'Basic ' +\n                Buffer.from(channelOptions['grpc.http_connect_creds']).toString('base64');\n    }\n    options.headers = headers;\n    const proxyAddressString = (0, subchannel_address_1.subchannelAddressToString)(address);\n    trace('Using proxy ' + proxyAddressString + ' to connect to ' + options.path);\n    return new Promise((resolve, reject) => {\n        const request = http.request(options);\n        request.once('connect', (res, socket, head) => {\n            var _a;\n            request.removeAllListeners();\n            socket.removeAllListeners();\n            if (res.statusCode === 200) {\n                trace('Successfully connected to ' +\n                    options.path +\n                    ' through proxy ' +\n                    proxyAddressString);\n                if ('secureContext' in connectionOptions) {\n                    /* The proxy is connecting to a TLS server, so upgrade this socket\n                     * connection to a TLS connection.\n                     * This is a workaround for https://github.com/nodejs/node/issues/32922\n                     * See https://github.com/grpc/grpc-node/pull/1369 for more info. */\n                    const targetPath = (0, resolver_1.getDefaultAuthority)(parsedTarget);\n                    const hostPort = (0, uri_parser_1.splitHostPort)(targetPath);\n                    const remoteHost = (_a = hostPort === null || hostPort === void 0 ? void 0 : hostPort.host) !== null && _a !== void 0 ? _a : targetPath;\n                    const cts = tls.connect(Object.assign({ host: remoteHost, servername: remoteHost, socket: socket }, connectionOptions), () => {\n                        trace('Successfully established a TLS connection to ' +\n                            options.path +\n                            ' through proxy ' +\n                            proxyAddressString);\n                        resolve({ socket: cts, realTarget: parsedTarget });\n                    });\n                    cts.on('error', (error) => {\n                        trace('Failed to establish a TLS connection to ' +\n                            options.path +\n                            ' through proxy ' +\n                            proxyAddressString +\n                            ' with error ' +\n                            error.message);\n                        reject();\n                    });\n                }\n                else {\n                    trace('Successfully established a plaintext connection to ' +\n                        options.path +\n                        ' through proxy ' +\n                        proxyAddressString);\n                    resolve({\n                        socket,\n                        realTarget: parsedTarget,\n                    });\n                }\n            }\n            else {\n                (0, logging_1.log)(constants_1.LogVerbosity.ERROR, 'Failed to connect to ' +\n                    options.path +\n                    ' through proxy ' +\n                    proxyAddressString +\n                    ' with status ' +\n                    res.statusCode);\n                reject();\n            }\n        });\n        request.once('error', err => {\n            request.removeAllListeners();\n            (0, logging_1.log)(constants_1.LogVerbosity.ERROR, 'Failed to connect to proxy ' +\n                proxyAddressString +\n                ' with error ' +\n                err.message);\n            reject();\n        });\n        request.end();\n    });\n}\nexports.getProxiedConnection = getProxiedConnection;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StreamDecoder = void 0;\nvar ReadState;\n(function (ReadState) {\n    ReadState[ReadState[\"NO_DATA\"] = 0] = \"NO_DATA\";\n    ReadState[ReadState[\"READING_SIZE\"] = 1] = \"READING_SIZE\";\n    ReadState[ReadState[\"READING_MESSAGE\"] = 2] = \"READING_MESSAGE\";\n})(ReadState || (ReadState = {}));\nclass StreamDecoder {\n    constructor(maxReadMessageLength) {\n        this.maxReadMessageLength = maxReadMessageLength;\n        this.readState = ReadState.NO_DATA;\n        this.readCompressFlag = Buffer.alloc(1);\n        this.readPartialSize = Buffer.alloc(4);\n        this.readSizeRemaining = 4;\n        this.readMessageSize = 0;\n        this.readPartialMessage = [];\n        this.readMessageRemaining = 0;\n    }\n    write(data) {\n        let readHead = 0;\n        let toRead;\n        const result = [];\n        while (readHead < data.length) {\n            switch (this.readState) {\n                case ReadState.NO_DATA:\n                    this.readCompressFlag = data.slice(readHead, readHead + 1);\n                    readHead += 1;\n                    this.readState = ReadState.READING_SIZE;\n                    this.readPartialSize.fill(0);\n                    this.readSizeRemaining = 4;\n                    this.readMessageSize = 0;\n                    this.readMessageRemaining = 0;\n                    this.readPartialMessage = [];\n                    break;\n                case ReadState.READING_SIZE:\n                    toRead = Math.min(data.length - readHead, this.readSizeRemaining);\n                    data.copy(this.readPartialSize, 4 - this.readSizeRemaining, readHead, readHead + toRead);\n                    this.readSizeRemaining -= toRead;\n                    readHead += toRead;\n                    // readSizeRemaining >=0 here\n                    if (this.readSizeRemaining === 0) {\n                        this.readMessageSize = this.readPartialSize.readUInt32BE(0);\n                        if (this.maxReadMessageLength !== -1 && this.readMessageSize > this.maxReadMessageLength) {\n                            throw new Error(`Received message larger than max (${this.readMessageSize} vs ${this.maxReadMessageLength})`);\n                        }\n                        this.readMessageRemaining = this.readMessageSize;\n                        if (this.readMessageRemaining > 0) {\n                            this.readState = ReadState.READING_MESSAGE;\n                        }\n                        else {\n                            const message = Buffer.concat([this.readCompressFlag, this.readPartialSize], 5);\n                            this.readState = ReadState.NO_DATA;\n                            result.push(message);\n                        }\n                    }\n                    break;\n                case ReadState.READING_MESSAGE:\n                    toRead = Math.min(data.length - readHead, this.readMessageRemaining);\n                    this.readPartialMessage.push(data.slice(readHead, readHead + toRead));\n                    this.readMessageRemaining -= toRead;\n                    readHead += toRead;\n                    // readMessageRemaining >=0 here\n                    if (this.readMessageRemaining === 0) {\n                        // At this point, we have read a full message\n                        const framedMessageBuffers = [\n                            this.readCompressFlag,\n                            this.readPartialSize,\n                        ].concat(this.readPartialMessage);\n                        const framedMessage = Buffer.concat(framedMessageBuffers, this.readMessageSize + 5);\n                        this.readState = ReadState.NO_DATA;\n                        result.push(framedMessage);\n                    }\n                    break;\n                default:\n                    throw new Error('Unexpected read state');\n            }\n        }\n        return result;\n    }\n}\nexports.StreamDecoder = StreamDecoder;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Http2SubchannelCall = void 0;\nconst http2 = require(\"http2\");\nconst os = require(\"os\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst stream_decoder_1 = require(\"./stream-decoder\");\nconst logging = require(\"./logging\");\nconst constants_2 = require(\"./constants\");\nconst TRACER_NAME = 'subchannel_call';\n/**\n * Should do approximately the same thing as util.getSystemErrorName but the\n * TypeScript types don't have that function for some reason so I just made my\n * own.\n * @param errno\n */\nfunction getSystemErrorName(errno) {\n    for (const [name, num] of Object.entries(os.constants.errno)) {\n        if (num === errno) {\n            return name;\n        }\n    }\n    return 'Unknown system error ' + errno;\n}\nclass Http2SubchannelCall {\n    constructor(http2Stream, callEventTracker, listener, transport, callId) {\n        var _a;\n        this.http2Stream = http2Stream;\n        this.callEventTracker = callEventTracker;\n        this.listener = listener;\n        this.transport = transport;\n        this.callId = callId;\n        this.isReadFilterPending = false;\n        this.isPushPending = false;\n        this.canPush = false;\n        /**\n         * Indicates that an 'end' event has come from the http2 stream, so there\n         * will be no more data events.\n         */\n        this.readsClosed = false;\n        this.statusOutput = false;\n        this.unpushedReadMessages = [];\n        // Status code mapped from :status. To be used if grpc-status is not received\n        this.mappedStatusCode = constants_1.Status.UNKNOWN;\n        // This is populated (non-null) if and only if the call has ended\n        this.finalStatus = null;\n        this.internalError = null;\n        const maxReceiveMessageLength = (_a = transport.getOptions()['grpc.max_receive_message_length']) !== null && _a !== void 0 ? _a : constants_1.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH;\n        this.decoder = new stream_decoder_1.StreamDecoder(maxReceiveMessageLength);\n        http2Stream.on('response', (headers, flags) => {\n            let headersString = '';\n            for (const header of Object.keys(headers)) {\n                headersString += '\\t\\t' + header + ': ' + headers[header] + '\\n';\n            }\n            this.trace('Received server headers:\\n' + headersString);\n            switch (headers[':status']) {\n                // TODO(murgatroid99): handle 100 and 101\n                case 400:\n                    this.mappedStatusCode = constants_1.Status.INTERNAL;\n                    break;\n                case 401:\n                    this.mappedStatusCode = constants_1.Status.UNAUTHENTICATED;\n                    break;\n                case 403:\n                    this.mappedStatusCode = constants_1.Status.PERMISSION_DENIED;\n                    break;\n                case 404:\n                    this.mappedStatusCode = constants_1.Status.UNIMPLEMENTED;\n                    break;\n                case 429:\n                case 502:\n                case 503:\n                case 504:\n                    this.mappedStatusCode = constants_1.Status.UNAVAILABLE;\n                    break;\n                default:\n                    this.mappedStatusCode = constants_1.Status.UNKNOWN;\n            }\n            if (flags & http2.constants.NGHTTP2_FLAG_END_STREAM) {\n                this.handleTrailers(headers);\n            }\n            else {\n                let metadata;\n                try {\n                    metadata = metadata_1.Metadata.fromHttp2Headers(headers);\n                }\n                catch (error) {\n                    this.endCall({\n                        code: constants_1.Status.UNKNOWN,\n                        details: error.message,\n                        metadata: new metadata_1.Metadata(),\n                    });\n                    return;\n                }\n                this.listener.onReceiveMetadata(metadata);\n            }\n        });\n        http2Stream.on('trailers', (headers) => {\n            this.handleTrailers(headers);\n        });\n        http2Stream.on('data', (data) => {\n            /* If the status has already been output, allow the http2 stream to\n             * drain without processing the data. */\n            if (this.statusOutput) {\n                return;\n            }\n            this.trace('receive HTTP/2 data frame of length ' + data.length);\n            let messages;\n            try {\n                messages = this.decoder.write(data);\n            }\n            catch (e) {\n                this.cancelWithStatus(constants_1.Status.RESOURCE_EXHAUSTED, e.message);\n                return;\n            }\n            for (const message of messages) {\n                this.trace('parsed message of length ' + message.length);\n                this.callEventTracker.addMessageReceived();\n                this.tryPush(message);\n            }\n        });\n        http2Stream.on('end', () => {\n            this.readsClosed = true;\n            this.maybeOutputStatus();\n        });\n        http2Stream.on('close', () => {\n            /* Use process.next tick to ensure that this code happens after any\n             * \"error\" event that may be emitted at about the same time, so that\n             * we can bubble up the error message from that event. */\n            process.nextTick(() => {\n                var _a;\n                this.trace('HTTP/2 stream closed with code ' + http2Stream.rstCode);\n                /* If we have a final status with an OK status code, that means that\n                 * we have received all of the messages and we have processed the\n                 * trailers and the call completed successfully, so it doesn't matter\n                 * how the stream ends after that */\n                if (((_a = this.finalStatus) === null || _a === void 0 ? void 0 : _a.code) === constants_1.Status.OK) {\n                    return;\n                }\n                let code;\n                let details = '';\n                switch (http2Stream.rstCode) {\n                    case http2.constants.NGHTTP2_NO_ERROR:\n                        /* If we get a NO_ERROR code and we already have a status, the\n                         * stream completed properly and we just haven't fully processed\n                         * it yet */\n                        if (this.finalStatus !== null) {\n                            return;\n                        }\n                        code = constants_1.Status.INTERNAL;\n                        details = `Received RST_STREAM with code ${http2Stream.rstCode}`;\n                        break;\n                    case http2.constants.NGHTTP2_REFUSED_STREAM:\n                        code = constants_1.Status.UNAVAILABLE;\n                        details = 'Stream refused by server';\n                        break;\n                    case http2.constants.NGHTTP2_CANCEL:\n                        code = constants_1.Status.CANCELLED;\n                        details = 'Call cancelled';\n                        break;\n                    case http2.constants.NGHTTP2_ENHANCE_YOUR_CALM:\n                        code = constants_1.Status.RESOURCE_EXHAUSTED;\n                        details = 'Bandwidth exhausted or memory limit exceeded';\n                        break;\n                    case http2.constants.NGHTTP2_INADEQUATE_SECURITY:\n                        code = constants_1.Status.PERMISSION_DENIED;\n                        details = 'Protocol not secure enough';\n                        break;\n                    case http2.constants.NGHTTP2_INTERNAL_ERROR:\n                        code = constants_1.Status.INTERNAL;\n                        if (this.internalError === null) {\n                            /* This error code was previously handled in the default case, and\n                             * there are several instances of it online, so I wanted to\n                             * preserve the original error message so that people find existing\n                             * information in searches, but also include the more recognizable\n                             * \"Internal server error\" message. */\n                            details = `Received RST_STREAM with code ${http2Stream.rstCode} (Internal server error)`;\n                        }\n                        else {\n                            if (this.internalError.code === 'ECONNRESET' ||\n                                this.internalError.code === 'ETIMEDOUT') {\n                                code = constants_1.Status.UNAVAILABLE;\n                                details = this.internalError.message;\n                            }\n                            else {\n                                /* The \"Received RST_STREAM with code ...\" error is preserved\n                                 * here for continuity with errors reported online, but the\n                                 * error message at the end will probably be more relevant in\n                                 * most cases. */\n                                details = `Received RST_STREAM with code ${http2Stream.rstCode} triggered by internal client error: ${this.internalError.message}`;\n                            }\n                        }\n                        break;\n                    default:\n                        code = constants_1.Status.INTERNAL;\n                        details = `Received RST_STREAM with code ${http2Stream.rstCode}`;\n                }\n                // This is a no-op if trailers were received at all.\n                // This is OK, because status codes emitted here correspond to more\n                // catastrophic issues that prevent us from receiving trailers in the\n                // first place.\n                this.endCall({\n                    code,\n                    details,\n                    metadata: new metadata_1.Metadata(),\n                    rstCode: http2Stream.rstCode,\n                });\n            });\n        });\n        http2Stream.on('error', (err) => {\n            /* We need an error handler here to stop \"Uncaught Error\" exceptions\n             * from bubbling up. However, errors here should all correspond to\n             * \"close\" events, where we will handle the error more granularly */\n            /* Specifically looking for stream errors that were *not* constructed\n             * from a RST_STREAM response here:\n             * https://github.com/nodejs/node/blob/8b8620d580314050175983402dfddf2674e8e22a/lib/internal/http2/core.js#L2267\n             */\n            if (err.code !== 'ERR_HTTP2_STREAM_ERROR') {\n                this.trace('Node error event: message=' +\n                    err.message +\n                    ' code=' +\n                    err.code +\n                    ' errno=' +\n                    getSystemErrorName(err.errno) +\n                    ' syscall=' +\n                    err.syscall);\n                this.internalError = err;\n            }\n            this.callEventTracker.onStreamEnd(false);\n        });\n    }\n    onDisconnect() {\n        this.endCall({\n            code: constants_1.Status.UNAVAILABLE,\n            details: 'Connection dropped',\n            metadata: new metadata_1.Metadata(),\n        });\n    }\n    outputStatus() {\n        /* Precondition: this.finalStatus !== null */\n        if (!this.statusOutput) {\n            this.statusOutput = true;\n            this.trace('ended with status: code=' +\n                this.finalStatus.code +\n                ' details=\"' +\n                this.finalStatus.details +\n                '\"');\n            this.callEventTracker.onCallEnd(this.finalStatus);\n            /* We delay the actual action of bubbling up the status to insulate the\n             * cleanup code in this class from any errors that may be thrown in the\n             * upper layers as a result of bubbling up the status. In particular,\n             * if the status is not OK, the \"error\" event may be emitted\n             * synchronously at the top level, which will result in a thrown error if\n             * the user does not handle that event. */\n            process.nextTick(() => {\n                this.listener.onReceiveStatus(this.finalStatus);\n            });\n            /* Leave the http2 stream in flowing state to drain incoming messages, to\n             * ensure that the stream closure completes. The call stream already does\n             * not push more messages after the status is output, so the messages go\n             * nowhere either way. */\n            this.http2Stream.resume();\n        }\n    }\n    trace(text) {\n        logging.trace(constants_2.LogVerbosity.DEBUG, TRACER_NAME, '[' + this.callId + '] ' + text);\n    }\n    /**\n     * On first call, emits a 'status' event with the given StatusObject.\n     * Subsequent calls are no-ops.\n     * @param status The status of the call.\n     */\n    endCall(status) {\n        /* If the status is OK and a new status comes in (e.g. from a\n         * deserialization failure), that new status takes priority */\n        if (this.finalStatus === null || this.finalStatus.code === constants_1.Status.OK) {\n            this.finalStatus = status;\n            this.maybeOutputStatus();\n        }\n        this.destroyHttp2Stream();\n    }\n    maybeOutputStatus() {\n        if (this.finalStatus !== null) {\n            /* The combination check of readsClosed and that the two message buffer\n             * arrays are empty checks that there all incoming data has been fully\n             * processed */\n            if (this.finalStatus.code !== constants_1.Status.OK ||\n                (this.readsClosed &&\n                    this.unpushedReadMessages.length === 0 &&\n                    !this.isReadFilterPending &&\n                    !this.isPushPending)) {\n                this.outputStatus();\n            }\n        }\n    }\n    push(message) {\n        this.trace('pushing to reader message of length ' +\n            (message instanceof Buffer ? message.length : null));\n        this.canPush = false;\n        this.isPushPending = true;\n        process.nextTick(() => {\n            this.isPushPending = false;\n            /* If we have already output the status any later messages should be\n             * ignored, and can cause out-of-order operation errors higher up in the\n             * stack. Checking as late as possible here to avoid any race conditions.\n             */\n            if (this.statusOutput) {\n                return;\n            }\n            this.listener.onReceiveMessage(message);\n            this.maybeOutputStatus();\n        });\n    }\n    tryPush(messageBytes) {\n        if (this.canPush) {\n            this.http2Stream.pause();\n            this.push(messageBytes);\n        }\n        else {\n            this.trace('unpushedReadMessages.push message of length ' + messageBytes.length);\n            this.unpushedReadMessages.push(messageBytes);\n        }\n    }\n    handleTrailers(headers) {\n        this.callEventTracker.onStreamEnd(true);\n        let headersString = '';\n        for (const header of Object.keys(headers)) {\n            headersString += '\\t\\t' + header + ': ' + headers[header] + '\\n';\n        }\n        this.trace('Received server trailers:\\n' + headersString);\n        let metadata;\n        try {\n            metadata = metadata_1.Metadata.fromHttp2Headers(headers);\n        }\n        catch (e) {\n            metadata = new metadata_1.Metadata();\n        }\n        const metadataMap = metadata.getMap();\n        let code = this.mappedStatusCode;\n        if (code === constants_1.Status.UNKNOWN &&\n            typeof metadataMap['grpc-status'] === 'string') {\n            const receivedStatus = Number(metadataMap['grpc-status']);\n            if (receivedStatus in constants_1.Status) {\n                code = receivedStatus;\n                this.trace('received status code ' + receivedStatus + ' from server');\n            }\n            metadata.remove('grpc-status');\n        }\n        let details = '';\n        if (typeof metadataMap['grpc-message'] === 'string') {\n            try {\n                details = decodeURI(metadataMap['grpc-message']);\n            }\n            catch (e) {\n                details = metadataMap['grpc-message'];\n            }\n            metadata.remove('grpc-message');\n            this.trace('received status details string \"' + details + '\" from server');\n        }\n        const status = { code, details, metadata };\n        // This is a no-op if the call was already ended when handling headers.\n        this.endCall(status);\n    }\n    destroyHttp2Stream() {\n        var _a;\n        // The http2 stream could already have been destroyed if cancelWithStatus\n        // is called in response to an internal http2 error.\n        if (!this.http2Stream.destroyed) {\n            /* If the call has ended with an OK status, communicate that when closing\n             * the stream, partly to avoid a situation in which we detect an error\n             * RST_STREAM as a result after we have the status */\n            let code;\n            if (((_a = this.finalStatus) === null || _a === void 0 ? void 0 : _a.code) === constants_1.Status.OK) {\n                code = http2.constants.NGHTTP2_NO_ERROR;\n            }\n            else {\n                code = http2.constants.NGHTTP2_CANCEL;\n            }\n            this.trace('close http2 stream with code ' + code);\n            this.http2Stream.close(code);\n        }\n    }\n    cancelWithStatus(status, details) {\n        this.trace('cancelWithStatus code: ' + status + ' details: \"' + details + '\"');\n        this.endCall({ code: status, details, metadata: new metadata_1.Metadata() });\n    }\n    getStatus() {\n        return this.finalStatus;\n    }\n    getPeer() {\n        return this.transport.getPeerName();\n    }\n    getCallNumber() {\n        return this.callId;\n    }\n    startRead() {\n        /* If the stream has ended with an error, we should not emit any more\n         * messages and we should communicate that the stream has ended */\n        if (this.finalStatus !== null && this.finalStatus.code !== constants_1.Status.OK) {\n            this.readsClosed = true;\n            this.maybeOutputStatus();\n            return;\n        }\n        this.canPush = true;\n        if (this.unpushedReadMessages.length > 0) {\n            const nextMessage = this.unpushedReadMessages.shift();\n            this.push(nextMessage);\n            return;\n        }\n        /* Only resume reading from the http2Stream if we don't have any pending\n         * messages to emit */\n        this.http2Stream.resume();\n    }\n    sendMessageWithContext(context, message) {\n        this.trace('write() called with message of length ' + message.length);\n        const cb = (error) => {\n            /* nextTick here ensures that no stream action can be taken in the call\n             * stack of the write callback, in order to hopefully work around\n             * https://github.com/nodejs/node/issues/49147 */\n            process.nextTick(() => {\n                var _a;\n                let code = constants_1.Status.UNAVAILABLE;\n                if ((error === null || error === void 0 ? void 0 : error.code) ===\n                    'ERR_STREAM_WRITE_AFTER_END') {\n                    code = constants_1.Status.INTERNAL;\n                }\n                if (error) {\n                    this.cancelWithStatus(code, `Write error: ${error.message}`);\n                }\n                (_a = context.callback) === null || _a === void 0 ? void 0 : _a.call(context);\n            });\n        };\n        this.trace('sending data chunk of length ' + message.length);\n        this.callEventTracker.addMessageSent();\n        try {\n            this.http2Stream.write(message, cb);\n        }\n        catch (error) {\n            this.endCall({\n                code: constants_1.Status.UNAVAILABLE,\n                details: `Write failed with error ${error.message}`,\n                metadata: new metadata_1.Metadata(),\n            });\n        }\n    }\n    halfClose() {\n        this.trace('end() called');\n        this.trace('calling end() on HTTP/2 stream');\n        this.http2Stream.end();\n    }\n}\nexports.Http2SubchannelCall = Http2SubchannelCall;\n", "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNextCallNumber = void 0;\nlet nextCallNumber = 0;\nfunction getNextCallNumber() {\n    return nextCallNumber++;\n}\nexports.getNextCallNumber = getNextCallNumber;\n", "\"use strict\";\n/*\n * Copyright 2023 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Http2SubchannelConnector = void 0;\nconst http2 = require(\"http2\");\nconst tls_1 = require(\"tls\");\nconst channelz_1 = require(\"./channelz\");\nconst constants_1 = require(\"./constants\");\nconst http_proxy_1 = require(\"./http_proxy\");\nconst logging = require(\"./logging\");\nconst resolver_1 = require(\"./resolver\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst net = require(\"net\");\nconst subchannel_call_1 = require(\"./subchannel-call\");\nconst call_number_1 = require(\"./call-number\");\nconst TRACER_NAME = 'transport';\nconst FLOW_CONTROL_TRACER_NAME = 'transport_flowctrl';\nconst clientVersion = require('../../package.json').version;\nconst { HTTP2_HEADER_AUTHORITY, HTTP2_HEADER_CONTENT_TYPE, HTTP2_HEADER_METHOD, HTTP2_HEADER_PATH, HTTP2_HEADER_TE, HTTP2_HEADER_USER_AGENT, } = http2.constants;\nconst KEEPALIVE_TIMEOUT_MS = 20000;\nconst tooManyPingsData = Buffer.from('too_many_pings', 'ascii');\nclass Http2Transport {\n    constructor(session, subchannelAddress, options, \n    /**\n     * Name of the remote server, if it is not the same as the subchannel\n     * address, i.e. if connecting through an HTTP CONNECT proxy.\n     */\n    remoteName) {\n        this.session = session;\n        this.options = options;\n        this.remoteName = remoteName;\n        /**\n         * The amount of time in between sending pings\n         */\n        this.keepaliveTimeMs = -1;\n        /**\n         * The amount of time to wait for an acknowledgement after sending a ping\n         */\n        this.keepaliveTimeoutMs = KEEPALIVE_TIMEOUT_MS;\n        /**\n         * Timer reference for timeout that indicates when to send the next ping\n         */\n        this.keepaliveTimerId = null;\n        /**\n         * Indicates that the keepalive timer ran out while there were no active\n         * calls, and a ping should be sent the next time a call starts.\n         */\n        this.pendingSendKeepalivePing = false;\n        /**\n         * Timer reference tracking when the most recent ping will be considered lost\n         */\n        this.keepaliveTimeoutId = null;\n        /**\n         * Indicates whether keepalive pings should be sent without any active calls\n         */\n        this.keepaliveWithoutCalls = false;\n        this.activeCalls = new Set();\n        this.disconnectListeners = [];\n        this.disconnectHandled = false;\n        this.channelzEnabled = true;\n        this.streamTracker = new channelz_1.ChannelzCallTracker();\n        this.keepalivesSent = 0;\n        this.messagesSent = 0;\n        this.messagesReceived = 0;\n        this.lastMessageSentTimestamp = null;\n        this.lastMessageReceivedTimestamp = null;\n        /* Populate subchannelAddressString and channelzRef before doing anything\n         * else, because they are used in the trace methods. */\n        this.subchannelAddressString = (0, subchannel_address_1.subchannelAddressToString)(subchannelAddress);\n        if (options['grpc.enable_channelz'] === 0) {\n            this.channelzEnabled = false;\n        }\n        this.channelzRef = (0, channelz_1.registerChannelzSocket)(this.subchannelAddressString, () => this.getChannelzInfo(), this.channelzEnabled);\n        // Build user-agent string.\n        this.userAgent = [\n            options['grpc.primary_user_agent'],\n            `grpc-node-js/${clientVersion}`,\n            options['grpc.secondary_user_agent'],\n        ]\n            .filter(e => e)\n            .join(' '); // remove falsey values first\n        if ('grpc.keepalive_time_ms' in options) {\n            this.keepaliveTimeMs = options['grpc.keepalive_time_ms'];\n        }\n        if ('grpc.keepalive_timeout_ms' in options) {\n            this.keepaliveTimeoutMs = options['grpc.keepalive_timeout_ms'];\n        }\n        if ('grpc.keepalive_permit_without_calls' in options) {\n            this.keepaliveWithoutCalls =\n                options['grpc.keepalive_permit_without_calls'] === 1;\n        }\n        else {\n            this.keepaliveWithoutCalls = false;\n        }\n        session.once('close', () => {\n            this.trace('session closed');\n            this.stopKeepalivePings();\n            this.handleDisconnect();\n        });\n        session.once('goaway', (errorCode, lastStreamID, opaqueData) => {\n            let tooManyPings = false;\n            /* See the last paragraph of\n             * https://github.com/grpc/proposal/blob/master/A8-client-side-keepalive.md#basic-keepalive */\n            if (errorCode === http2.constants.NGHTTP2_ENHANCE_YOUR_CALM &&\n                opaqueData &&\n                opaqueData.equals(tooManyPingsData)) {\n                tooManyPings = true;\n            }\n            this.trace('connection closed by GOAWAY with code ' + errorCode + ' and data ' + (opaqueData === null || opaqueData === void 0 ? void 0 : opaqueData.toString()));\n            this.reportDisconnectToOwner(tooManyPings);\n        });\n        session.once('error', error => {\n            /* Do nothing here. Any error should also trigger a close event, which is\n             * where we want to handle that.  */\n            this.trace('connection closed with error ' + error.message);\n        });\n        if (logging.isTracerEnabled(TRACER_NAME)) {\n            session.on('remoteSettings', (settings) => {\n                this.trace('new settings received' +\n                    (this.session !== session ? ' on the old connection' : '') +\n                    ': ' +\n                    JSON.stringify(settings));\n            });\n            session.on('localSettings', (settings) => {\n                this.trace('local settings acknowledged by remote' +\n                    (this.session !== session ? ' on the old connection' : '') +\n                    ': ' +\n                    JSON.stringify(settings));\n            });\n        }\n        /* Start the keepalive timer last, because this can trigger trace logs,\n         * which should only happen after everything else is set up. */\n        if (this.keepaliveWithoutCalls) {\n            this.maybeStartKeepalivePingTimer();\n        }\n    }\n    getChannelzInfo() {\n        var _a, _b, _c;\n        const sessionSocket = this.session.socket;\n        const remoteAddress = sessionSocket.remoteAddress\n            ? (0, subchannel_address_1.stringToSubchannelAddress)(sessionSocket.remoteAddress, sessionSocket.remotePort)\n            : null;\n        const localAddress = sessionSocket.localAddress\n            ? (0, subchannel_address_1.stringToSubchannelAddress)(sessionSocket.localAddress, sessionSocket.localPort)\n            : null;\n        let tlsInfo;\n        if (this.session.encrypted) {\n            const tlsSocket = sessionSocket;\n            const cipherInfo = tlsSocket.getCipher();\n            const certificate = tlsSocket.getCertificate();\n            const peerCertificate = tlsSocket.getPeerCertificate();\n            tlsInfo = {\n                cipherSuiteStandardName: (_a = cipherInfo.standardName) !== null && _a !== void 0 ? _a : null,\n                cipherSuiteOtherName: cipherInfo.standardName ? null : cipherInfo.name,\n                localCertificate: certificate && 'raw' in certificate ? certificate.raw : null,\n                remoteCertificate: peerCertificate && 'raw' in peerCertificate\n                    ? peerCertificate.raw\n                    : null,\n            };\n        }\n        else {\n            tlsInfo = null;\n        }\n        const socketInfo = {\n            remoteAddress: remoteAddress,\n            localAddress: localAddress,\n            security: tlsInfo,\n            remoteName: this.remoteName,\n            streamsStarted: this.streamTracker.callsStarted,\n            streamsSucceeded: this.streamTracker.callsSucceeded,\n            streamsFailed: this.streamTracker.callsFailed,\n            messagesSent: this.messagesSent,\n            messagesReceived: this.messagesReceived,\n            keepAlivesSent: this.keepalivesSent,\n            lastLocalStreamCreatedTimestamp: this.streamTracker.lastCallStartedTimestamp,\n            lastRemoteStreamCreatedTimestamp: null,\n            lastMessageSentTimestamp: this.lastMessageSentTimestamp,\n            lastMessageReceivedTimestamp: this.lastMessageReceivedTimestamp,\n            localFlowControlWindow: (_b = this.session.state.localWindowSize) !== null && _b !== void 0 ? _b : null,\n            remoteFlowControlWindow: (_c = this.session.state.remoteWindowSize) !== null && _c !== void 0 ? _c : null,\n        };\n        return socketInfo;\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    keepaliveTrace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, 'keepalive', '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    flowControlTrace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, FLOW_CONTROL_TRACER_NAME, '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    internalsTrace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, 'transport_internals', '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    /**\n     * Indicate to the owner of this object that this transport should no longer\n     * be used. That happens if the connection drops, or if the server sends a\n     * GOAWAY.\n     * @param tooManyPings If true, this was triggered by a GOAWAY with data\n     * indicating that the session was closed becaues the client sent too many\n     * pings.\n     * @returns\n     */\n    reportDisconnectToOwner(tooManyPings) {\n        if (this.disconnectHandled) {\n            return;\n        }\n        this.disconnectHandled = true;\n        this.disconnectListeners.forEach(listener => listener(tooManyPings));\n    }\n    /**\n     * Handle connection drops, but not GOAWAYs.\n     */\n    handleDisconnect() {\n        this.reportDisconnectToOwner(false);\n        /* Give calls an event loop cycle to finish naturally before reporting the\n         * disconnnection to them. */\n        setImmediate(() => {\n            for (const call of this.activeCalls) {\n                call.onDisconnect();\n            }\n        });\n    }\n    addDisconnectListener(listener) {\n        this.disconnectListeners.push(listener);\n    }\n    clearKeepaliveTimer() {\n        if (!this.keepaliveTimerId) {\n            return;\n        }\n        clearTimeout(this.keepaliveTimerId);\n        this.keepaliveTimerId = null;\n    }\n    clearKeepaliveTimeout() {\n        if (!this.keepaliveTimeoutId) {\n            return;\n        }\n        clearTimeout(this.keepaliveTimeoutId);\n        this.keepaliveTimeoutId = null;\n    }\n    canSendPing() {\n        return (this.keepaliveTimeMs > 0 &&\n            (this.keepaliveWithoutCalls || this.activeCalls.size > 0));\n    }\n    maybeSendPing() {\n        var _a, _b;\n        this.clearKeepaliveTimer();\n        if (!this.canSendPing()) {\n            this.pendingSendKeepalivePing = true;\n            return;\n        }\n        if (this.channelzEnabled) {\n            this.keepalivesSent += 1;\n        }\n        this.keepaliveTrace('Sending ping with timeout ' + this.keepaliveTimeoutMs + 'ms');\n        if (!this.keepaliveTimeoutId) {\n            this.keepaliveTimeoutId = setTimeout(() => {\n                this.keepaliveTrace('Ping timeout passed without response');\n                this.handleDisconnect();\n            }, this.keepaliveTimeoutMs);\n            (_b = (_a = this.keepaliveTimeoutId).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n        try {\n            this.session.ping((err, duration, payload) => {\n                if (err) {\n                    this.keepaliveTrace('Ping failed with error ' + err.message);\n                    this.handleDisconnect();\n                }\n                this.keepaliveTrace('Received ping response');\n                this.clearKeepaliveTimeout();\n                this.maybeStartKeepalivePingTimer();\n            });\n        }\n        catch (e) {\n            /* If we fail to send a ping, the connection is no longer functional, so\n             * we should discard it. */\n            this.handleDisconnect();\n        }\n    }\n    /**\n     * Starts the keepalive ping timer if appropriate. If the timer already ran\n     * out while there were no active requests, instead send a ping immediately.\n     * If the ping timer is already running or a ping is currently in flight,\n     * instead do nothing and wait for them to resolve.\n     */\n    maybeStartKeepalivePingTimer() {\n        var _a, _b;\n        if (!this.canSendPing()) {\n            return;\n        }\n        if (this.pendingSendKeepalivePing) {\n            this.pendingSendKeepalivePing = false;\n            this.maybeSendPing();\n        }\n        else if (!this.keepaliveTimerId && !this.keepaliveTimeoutId) {\n            this.keepaliveTrace('Starting keepalive timer for ' + this.keepaliveTimeMs + 'ms');\n            this.keepaliveTimerId = (_b = (_a = setTimeout(() => {\n                this.maybeSendPing();\n            }, this.keepaliveTimeMs)).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n        /* Otherwise, there is already either a keepalive timer or a ping pending,\n         * wait for those to resolve. */\n    }\n    stopKeepalivePings() {\n        if (this.keepaliveTimerId) {\n            clearTimeout(this.keepaliveTimerId);\n            this.keepaliveTimerId = null;\n        }\n        this.clearKeepaliveTimeout();\n    }\n    removeActiveCall(call) {\n        this.activeCalls.delete(call);\n        if (this.activeCalls.size === 0) {\n            this.session.unref();\n        }\n    }\n    addActiveCall(call) {\n        this.activeCalls.add(call);\n        if (this.activeCalls.size === 1) {\n            this.session.ref();\n            if (!this.keepaliveWithoutCalls) {\n                this.maybeStartKeepalivePingTimer();\n            }\n        }\n    }\n    createCall(metadata, host, method, listener, subchannelCallStatsTracker) {\n        const headers = metadata.toHttp2Headers();\n        headers[HTTP2_HEADER_AUTHORITY] = host;\n        headers[HTTP2_HEADER_USER_AGENT] = this.userAgent;\n        headers[HTTP2_HEADER_CONTENT_TYPE] = 'application/grpc';\n        headers[HTTP2_HEADER_METHOD] = 'POST';\n        headers[HTTP2_HEADER_PATH] = method;\n        headers[HTTP2_HEADER_TE] = 'trailers';\n        let http2Stream;\n        /* In theory, if an error is thrown by session.request because session has\n         * become unusable (e.g. because it has received a goaway), this subchannel\n         * should soon see the corresponding close or goaway event anyway and leave\n         * READY. But we have seen reports that this does not happen\n         * (https://github.com/googleapis/nodejs-firestore/issues/1023#issuecomment-653204096)\n         * so for defense in depth, we just discard the session when we see an\n         * error here.\n         */\n        try {\n            http2Stream = this.session.request(headers);\n        }\n        catch (e) {\n            this.handleDisconnect();\n            throw e;\n        }\n        this.flowControlTrace('local window size: ' +\n            this.session.state.localWindowSize +\n            ' remote window size: ' +\n            this.session.state.remoteWindowSize);\n        this.internalsTrace('session.closed=' +\n            this.session.closed +\n            ' session.destroyed=' +\n            this.session.destroyed +\n            ' session.socket.destroyed=' +\n            this.session.socket.destroyed);\n        let eventTracker;\n        // eslint-disable-next-line prefer-const\n        let call;\n        if (this.channelzEnabled) {\n            this.streamTracker.addCallStarted();\n            eventTracker = {\n                addMessageSent: () => {\n                    var _a;\n                    this.messagesSent += 1;\n                    this.lastMessageSentTimestamp = new Date();\n                    (_a = subchannelCallStatsTracker.addMessageSent) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker);\n                },\n                addMessageReceived: () => {\n                    var _a;\n                    this.messagesReceived += 1;\n                    this.lastMessageReceivedTimestamp = new Date();\n                    (_a = subchannelCallStatsTracker.addMessageReceived) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker);\n                },\n                onCallEnd: status => {\n                    var _a;\n                    (_a = subchannelCallStatsTracker.onCallEnd) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker, status);\n                    this.removeActiveCall(call);\n                },\n                onStreamEnd: success => {\n                    var _a;\n                    if (success) {\n                        this.streamTracker.addCallSucceeded();\n                    }\n                    else {\n                        this.streamTracker.addCallFailed();\n                    }\n                    (_a = subchannelCallStatsTracker.onStreamEnd) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker, success);\n                },\n            };\n        }\n        else {\n            eventTracker = {\n                addMessageSent: () => {\n                    var _a;\n                    (_a = subchannelCallStatsTracker.addMessageSent) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker);\n                },\n                addMessageReceived: () => {\n                    var _a;\n                    (_a = subchannelCallStatsTracker.addMessageReceived) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker);\n                },\n                onCallEnd: status => {\n                    var _a;\n                    (_a = subchannelCallStatsTracker.onCallEnd) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker, status);\n                    this.removeActiveCall(call);\n                },\n                onStreamEnd: success => {\n                    var _a;\n                    (_a = subchannelCallStatsTracker.onStreamEnd) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker, success);\n                },\n            };\n        }\n        call = new subchannel_call_1.Http2SubchannelCall(http2Stream, eventTracker, listener, this, (0, call_number_1.getNextCallNumber)());\n        this.addActiveCall(call);\n        return call;\n    }\n    getChannelzRef() {\n        return this.channelzRef;\n    }\n    getPeerName() {\n        return this.subchannelAddressString;\n    }\n    getOptions() {\n        return this.options;\n    }\n    shutdown() {\n        this.session.close();\n        (0, channelz_1.unregisterChannelzRef)(this.channelzRef);\n    }\n}\nclass Http2SubchannelConnector {\n    constructor(channelTarget) {\n        this.channelTarget = channelTarget;\n        this.session = null;\n        this.isShutdown = false;\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, (0, uri_parser_1.uriToString)(this.channelTarget) + ' ' + text);\n    }\n    createSession(address, credentials, options, proxyConnectionResult) {\n        if (this.isShutdown) {\n            return Promise.reject();\n        }\n        return new Promise((resolve, reject) => {\n            var _a, _b, _c;\n            let remoteName;\n            if (proxyConnectionResult.realTarget) {\n                remoteName = (0, uri_parser_1.uriToString)(proxyConnectionResult.realTarget);\n                this.trace('creating HTTP/2 session through proxy to ' +\n                    (0, uri_parser_1.uriToString)(proxyConnectionResult.realTarget));\n            }\n            else {\n                remoteName = null;\n                this.trace('creating HTTP/2 session to ' + (0, subchannel_address_1.subchannelAddressToString)(address));\n            }\n            const targetAuthority = (0, resolver_1.getDefaultAuthority)((_a = proxyConnectionResult.realTarget) !== null && _a !== void 0 ? _a : this.channelTarget);\n            let connectionOptions = credentials._getConnectionOptions() || {};\n            connectionOptions.maxSendHeaderBlockLength = Number.MAX_SAFE_INTEGER;\n            if ('grpc-node.max_session_memory' in options) {\n                connectionOptions.maxSessionMemory =\n                    options['grpc-node.max_session_memory'];\n            }\n            else {\n                /* By default, set a very large max session memory limit, to effectively\n                 * disable enforcement of the limit. Some testing indicates that Node's\n                 * behavior degrades badly when this limit is reached, so we solve that\n                 * by disabling the check entirely. */\n                connectionOptions.maxSessionMemory = Number.MAX_SAFE_INTEGER;\n            }\n            let addressScheme = 'http://';\n            if ('secureContext' in connectionOptions) {\n                addressScheme = 'https://';\n                // If provided, the value of grpc.ssl_target_name_override should be used\n                // to override the target hostname when checking server identity.\n                // This option is used for testing only.\n                if (options['grpc.ssl_target_name_override']) {\n                    const sslTargetNameOverride = options['grpc.ssl_target_name_override'];\n                    connectionOptions.checkServerIdentity = (host, cert) => {\n                        return (0, tls_1.checkServerIdentity)(sslTargetNameOverride, cert);\n                    };\n                    connectionOptions.servername = sslTargetNameOverride;\n                }\n                else {\n                    const authorityHostname = (_c = (_b = (0, uri_parser_1.splitHostPort)(targetAuthority)) === null || _b === void 0 ? void 0 : _b.host) !== null && _c !== void 0 ? _c : 'localhost';\n                    // We want to always set servername to support SNI\n                    connectionOptions.servername = authorityHostname;\n                }\n                if (proxyConnectionResult.socket) {\n                    /* This is part of the workaround for\n                     * https://github.com/nodejs/node/issues/32922. Without that bug,\n                     * proxyConnectionResult.socket would always be a plaintext socket and\n                     * this would say\n                     * connectionOptions.socket = proxyConnectionResult.socket; */\n                    connectionOptions.createConnection = (authority, option) => {\n                        return proxyConnectionResult.socket;\n                    };\n                }\n            }\n            else {\n                /* In all but the most recent versions of Node, http2.connect does not use\n                 * the options when establishing plaintext connections, so we need to\n                 * establish that connection explicitly. */\n                connectionOptions.createConnection = (authority, option) => {\n                    if (proxyConnectionResult.socket) {\n                        return proxyConnectionResult.socket;\n                    }\n                    else {\n                        /* net.NetConnectOpts is declared in a way that is more restrictive\n                         * than what net.connect will actually accept, so we use the type\n                         * assertion to work around that. */\n                        return net.connect(address);\n                    }\n                };\n            }\n            connectionOptions = Object.assign(Object.assign(Object.assign({}, connectionOptions), address), { enableTrace: options['grpc-node.tls_enable_trace'] === 1 });\n            /* http2.connect uses the options here:\n             * https://github.com/nodejs/node/blob/70c32a6d190e2b5d7b9ff9d5b6a459d14e8b7d59/lib/internal/http2/core.js#L3028-L3036\n             * The spread operator overides earlier values with later ones, so any port\n             * or host values in the options will be used rather than any values extracted\n             * from the first argument. In addition, the path overrides the host and port,\n             * as documented for plaintext connections here:\n             * https://nodejs.org/api/net.html#net_socket_connect_options_connectlistener\n             * and for TLS connections here:\n             * https://nodejs.org/api/tls.html#tls_tls_connect_options_callback. In\n             * earlier versions of Node, http2.connect passes these options to\n             * tls.connect but not net.connect, so in the insecure case we still need\n             * to set the createConnection option above to create the connection\n             * explicitly. We cannot do that in the TLS case because http2.connect\n             * passes necessary additional options to tls.connect.\n             * The first argument just needs to be parseable as a URL and the scheme\n             * determines whether the connection will be established over TLS or not.\n             */\n            const session = http2.connect(addressScheme + targetAuthority, connectionOptions);\n            this.session = session;\n            let errorMessage = 'Failed to connect';\n            session.unref();\n            session.once('connect', () => {\n                session.removeAllListeners();\n                resolve(new Http2Transport(session, address, options, remoteName));\n                this.session = null;\n            });\n            session.once('close', () => {\n                this.session = null;\n                // Leave time for error event to happen before rejecting\n                setImmediate(() => {\n                    reject(`${errorMessage} (${new Date().toISOString()})`);\n                });\n            });\n            session.once('error', error => {\n                errorMessage = error.message;\n                this.trace('connection failed with error ' + errorMessage);\n            });\n        });\n    }\n    connect(address, credentials, options) {\n        var _a, _b;\n        if (this.isShutdown) {\n            return Promise.reject();\n        }\n        /* Pass connection options through to the proxy so that it's able to\n         * upgrade it's connection to support tls if needed.\n         * This is a workaround for https://github.com/nodejs/node/issues/32922\n         * See https://github.com/grpc/grpc-node/pull/1369 for more info. */\n        const connectionOptions = credentials._getConnectionOptions() || {};\n        if ('secureContext' in connectionOptions) {\n            connectionOptions.ALPNProtocols = ['h2'];\n            // If provided, the value of grpc.ssl_target_name_override should be used\n            // to override the target hostname when checking server identity.\n            // This option is used for testing only.\n            if (options['grpc.ssl_target_name_override']) {\n                const sslTargetNameOverride = options['grpc.ssl_target_name_override'];\n                connectionOptions.checkServerIdentity = (host, cert) => {\n                    return (0, tls_1.checkServerIdentity)(sslTargetNameOverride, cert);\n                };\n                connectionOptions.servername = sslTargetNameOverride;\n            }\n            else {\n                if ('grpc.http_connect_target' in options) {\n                    /* This is more or less how servername will be set in createSession\n                     * if a connection is successfully established through the proxy.\n                     * If the proxy is not used, these connectionOptions are discarded\n                     * anyway */\n                    const targetPath = (0, resolver_1.getDefaultAuthority)((_a = (0, uri_parser_1.parseUri)(options['grpc.http_connect_target'])) !== null && _a !== void 0 ? _a : {\n                        path: 'localhost',\n                    });\n                    const hostPort = (0, uri_parser_1.splitHostPort)(targetPath);\n                    connectionOptions.servername = (_b = hostPort === null || hostPort === void 0 ? void 0 : hostPort.host) !== null && _b !== void 0 ? _b : targetPath;\n                }\n            }\n            if (options['grpc-node.tls_enable_trace']) {\n                connectionOptions.enableTrace = true;\n            }\n        }\n        return (0, http_proxy_1.getProxiedConnection)(address, options, connectionOptions).then(result => this.createSession(address, credentials, options, result));\n    }\n    shutdown() {\n        var _a;\n        this.isShutdown = true;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.close();\n        this.session = null;\n    }\n}\nexports.Http2SubchannelConnector = Http2SubchannelConnector;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSubchannelPool = exports.SubchannelPool = void 0;\nconst channel_options_1 = require(\"./channel-options\");\nconst subchannel_1 = require(\"./subchannel\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst transport_1 = require(\"./transport\");\n// 10 seconds in milliseconds. This value is arbitrary.\n/**\n * The amount of time in between checks for dropping subchannels that have no\n * other references\n */\nconst REF_CHECK_INTERVAL = 10000;\nclass SubchannelPool {\n    /**\n     * A pool of subchannels use for making connections. Subchannels with the\n     * exact same parameters will be reused.\n     */\n    constructor() {\n        this.pool = Object.create(null);\n        /**\n         * A timer of a task performing a periodic subchannel cleanup.\n         */\n        this.cleanupTimer = null;\n    }\n    /**\n     * Unrefs all unused subchannels and cancels the cleanup task if all\n     * subchannels have been unrefed.\n     */\n    unrefUnusedSubchannels() {\n        let allSubchannelsUnrefed = true;\n        /* These objects are created with Object.create(null), so they do not\n         * have a prototype, which means that for (... in ...) loops over them\n         * do not need to be filtered */\n        // eslint-disable-disable-next-line:forin\n        for (const channelTarget in this.pool) {\n            const subchannelObjArray = this.pool[channelTarget];\n            const refedSubchannels = subchannelObjArray.filter(value => !value.subchannel.unrefIfOneRef());\n            if (refedSubchannels.length > 0) {\n                allSubchannelsUnrefed = false;\n            }\n            /* For each subchannel in the pool, try to unref it if it has\n             * exactly one ref (which is the ref from the pool itself). If that\n             * does happen, remove the subchannel from the pool */\n            this.pool[channelTarget] = refedSubchannels;\n        }\n        /* Currently we do not delete keys with empty values. If that results\n         * in significant memory usage we should change it. */\n        // Cancel the cleanup task if all subchannels have been unrefed.\n        if (allSubchannelsUnrefed && this.cleanupTimer !== null) {\n            clearInterval(this.cleanupTimer);\n            this.cleanupTimer = null;\n        }\n    }\n    /**\n     * Ensures that the cleanup task is spawned.\n     */\n    ensureCleanupTask() {\n        var _a, _b;\n        if (this.cleanupTimer === null) {\n            this.cleanupTimer = setInterval(() => {\n                this.unrefUnusedSubchannels();\n            }, REF_CHECK_INTERVAL);\n            // Unref because this timer should not keep the event loop running.\n            // Call unref only if it exists to address electron/electron#21162\n            (_b = (_a = this.cleanupTimer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n    }\n    /**\n     * Get a subchannel if one already exists with exactly matching parameters.\n     * Otherwise, create and save a subchannel with those parameters.\n     * @param channelTarget\n     * @param subchannelTarget\n     * @param channelArguments\n     * @param channelCredentials\n     */\n    getOrCreateSubchannel(channelTargetUri, subchannelTarget, channelArguments, channelCredentials) {\n        this.ensureCleanupTask();\n        const channelTarget = (0, uri_parser_1.uriToString)(channelTargetUri);\n        if (channelTarget in this.pool) {\n            const subchannelObjArray = this.pool[channelTarget];\n            for (const subchannelObj of subchannelObjArray) {\n                if ((0, subchannel_address_1.subchannelAddressEqual)(subchannelTarget, subchannelObj.subchannelAddress) &&\n                    (0, channel_options_1.channelOptionsEqual)(channelArguments, subchannelObj.channelArguments) &&\n                    channelCredentials._equals(subchannelObj.channelCredentials)) {\n                    return subchannelObj.subchannel;\n                }\n            }\n        }\n        // If we get here, no matching subchannel was found\n        const subchannel = new subchannel_1.Subchannel(channelTargetUri, subchannelTarget, channelArguments, channelCredentials, new transport_1.Http2SubchannelConnector(channelTargetUri));\n        if (!(channelTarget in this.pool)) {\n            this.pool[channelTarget] = [];\n        }\n        this.pool[channelTarget].push({\n            subchannelAddress: subchannelTarget,\n            channelArguments,\n            channelCredentials,\n            subchannel,\n        });\n        subchannel.ref();\n        return subchannel;\n    }\n}\nexports.SubchannelPool = SubchannelPool;\nconst globalSubchannelPool = new SubchannelPool();\n/**\n * Get either the global subchannel pool, or a new subchannel pool.\n * @param global\n */\nfunction getSubchannelPool(global) {\n    if (global) {\n        return globalSubchannelPool;\n    }\n    else {\n        return new SubchannelPool();\n    }\n}\nexports.getSubchannelPool = getSubchannelPool;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilterStackFactory = exports.FilterStack = void 0;\nclass FilterStack {\n    constructor(filters) {\n        this.filters = filters;\n    }\n    sendMetadata(metadata) {\n        let result = metadata;\n        for (let i = 0; i < this.filters.length; i++) {\n            result = this.filters[i].sendMetadata(result);\n        }\n        return result;\n    }\n    receiveMetadata(metadata) {\n        let result = metadata;\n        for (let i = this.filters.length - 1; i >= 0; i--) {\n            result = this.filters[i].receiveMetadata(result);\n        }\n        return result;\n    }\n    sendMessage(message) {\n        let result = message;\n        for (let i = 0; i < this.filters.length; i++) {\n            result = this.filters[i].sendMessage(result);\n        }\n        return result;\n    }\n    receiveMessage(message) {\n        let result = message;\n        for (let i = this.filters.length - 1; i >= 0; i--) {\n            result = this.filters[i].receiveMessage(result);\n        }\n        return result;\n    }\n    receiveTrailers(status) {\n        let result = status;\n        for (let i = this.filters.length - 1; i >= 0; i--) {\n            result = this.filters[i].receiveTrailers(result);\n        }\n        return result;\n    }\n    push(filters) {\n        this.filters.unshift(...filters);\n    }\n    getFilters() {\n        return this.filters;\n    }\n}\nexports.FilterStack = FilterStack;\nclass FilterStackFactory {\n    constructor(factories) {\n        this.factories = factories;\n    }\n    push(filterFactories) {\n        this.factories.unshift(...filterFactories);\n    }\n    clone() {\n        return new FilterStackFactory([...this.factories]);\n    }\n    createFilter() {\n        return new FilterStack(this.factories.map(factory => factory.createFilter()));\n    }\n}\nexports.FilterStackFactory = FilterStackFactory;\n", "\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompressionAlgorithms = void 0;\nvar CompressionAlgorithms;\n(function (CompressionAlgorithms) {\n    CompressionAlgorithms[CompressionAlgorithms[\"identity\"] = 0] = \"identity\";\n    CompressionAlgorithms[CompressionAlgorithms[\"deflate\"] = 1] = \"deflate\";\n    CompressionAlgorithms[CompressionAlgorithms[\"gzip\"] = 2] = \"gzip\";\n})(CompressionAlgorithms || (exports.CompressionAlgorithms = CompressionAlgorithms = {}));\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseFilter = void 0;\nclass BaseFilter {\n    async sendMetadata(metadata) {\n        return metadata;\n    }\n    receiveMetadata(metadata) {\n        return metadata;\n    }\n    async sendMessage(message) {\n        return message;\n    }\n    async receiveMessage(message) {\n        return message;\n    }\n    receiveTrailers(status) {\n        return status;\n    }\n}\nexports.BaseFilter = BaseFilter;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompressionFilterFactory = exports.CompressionFilter = void 0;\nconst zlib = require(\"zlib\");\nconst compression_algorithms_1 = require(\"./compression-algorithms\");\nconst constants_1 = require(\"./constants\");\nconst filter_1 = require(\"./filter\");\nconst logging = require(\"./logging\");\nconst isCompressionAlgorithmKey = (key) => {\n    return (typeof key === 'number' && typeof compression_algorithms_1.CompressionAlgorithms[key] === 'string');\n};\nclass CompressionHandler {\n    /**\n     * @param message Raw uncompressed message bytes\n     * @param compress Indicates whether the message should be compressed\n     * @return Framed message, compressed if applicable\n     */\n    async writeMessage(message, compress) {\n        let messageBuffer = message;\n        if (compress) {\n            messageBuffer = await this.compressMessage(messageBuffer);\n        }\n        const output = Buffer.allocUnsafe(messageBuffer.length + 5);\n        output.writeUInt8(compress ? 1 : 0, 0);\n        output.writeUInt32BE(messageBuffer.length, 1);\n        messageBuffer.copy(output, 5);\n        return output;\n    }\n    /**\n     * @param data Framed message, possibly compressed\n     * @return Uncompressed message\n     */\n    async readMessage(data) {\n        const compressed = data.readUInt8(0) === 1;\n        let messageBuffer = data.slice(5);\n        if (compressed) {\n            messageBuffer = await this.decompressMessage(messageBuffer);\n        }\n        return messageBuffer;\n    }\n}\nclass IdentityHandler extends CompressionHandler {\n    async compressMessage(message) {\n        return message;\n    }\n    async writeMessage(message, compress) {\n        const output = Buffer.allocUnsafe(message.length + 5);\n        /* With \"identity\" compression, messages should always be marked as\n         * uncompressed */\n        output.writeUInt8(0, 0);\n        output.writeUInt32BE(message.length, 1);\n        message.copy(output, 5);\n        return output;\n    }\n    decompressMessage(message) {\n        return Promise.reject(new Error('Received compressed message but \"grpc-encoding\" header was identity'));\n    }\n}\nclass DeflateHandler extends CompressionHandler {\n    constructor(maxRecvMessageLength) {\n        super();\n        this.maxRecvMessageLength = maxRecvMessageLength;\n    }\n    compressMessage(message) {\n        return new Promise((resolve, reject) => {\n            zlib.deflate(message, (err, output) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(output);\n                }\n            });\n        });\n    }\n    decompressMessage(message) {\n        return new Promise((resolve, reject) => {\n            let totalLength = 0;\n            const messageParts = [];\n            const decompresser = zlib.createInflate();\n            decompresser.on('data', (chunk) => {\n                messageParts.push(chunk);\n                totalLength += chunk.byteLength;\n                if (this.maxRecvMessageLength !== -1 && totalLength > this.maxRecvMessageLength) {\n                    decompresser.destroy();\n                    reject({\n                        code: constants_1.Status.RESOURCE_EXHAUSTED,\n                        details: `Received message that decompresses to a size larger than ${this.maxRecvMessageLength}`\n                    });\n                }\n            });\n            decompresser.on('end', () => {\n                resolve(Buffer.concat(messageParts));\n            });\n            decompresser.write(message);\n            decompresser.end();\n        });\n    }\n}\nclass GzipHandler extends CompressionHandler {\n    constructor(maxRecvMessageLength) {\n        super();\n        this.maxRecvMessageLength = maxRecvMessageLength;\n    }\n    compressMessage(message) {\n        return new Promise((resolve, reject) => {\n            zlib.gzip(message, (err, output) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(output);\n                }\n            });\n        });\n    }\n    decompressMessage(message) {\n        return new Promise((resolve, reject) => {\n            let totalLength = 0;\n            const messageParts = [];\n            const decompresser = zlib.createGunzip();\n            decompresser.on('data', (chunk) => {\n                messageParts.push(chunk);\n                totalLength += chunk.byteLength;\n                if (this.maxRecvMessageLength !== -1 && totalLength > this.maxRecvMessageLength) {\n                    decompresser.destroy();\n                    reject({\n                        code: constants_1.Status.RESOURCE_EXHAUSTED,\n                        details: `Received message that decompresses to a size larger than ${this.maxRecvMessageLength}`\n                    });\n                }\n            });\n            decompresser.on('end', () => {\n                resolve(Buffer.concat(messageParts));\n            });\n            decompresser.write(message);\n            decompresser.end();\n        });\n    }\n}\nclass UnknownHandler extends CompressionHandler {\n    constructor(compressionName) {\n        super();\n        this.compressionName = compressionName;\n    }\n    compressMessage(message) {\n        return Promise.reject(new Error(`Received message compressed with unsupported compression method ${this.compressionName}`));\n    }\n    decompressMessage(message) {\n        // This should be unreachable\n        return Promise.reject(new Error(`Compression method not supported: ${this.compressionName}`));\n    }\n}\nfunction getCompressionHandler(compressionName, maxReceiveMessageSize) {\n    switch (compressionName) {\n        case 'identity':\n            return new IdentityHandler();\n        case 'deflate':\n            return new DeflateHandler(maxReceiveMessageSize);\n        case 'gzip':\n            return new GzipHandler(maxReceiveMessageSize);\n        default:\n            return new UnknownHandler(compressionName);\n    }\n}\nclass CompressionFilter extends filter_1.BaseFilter {\n    constructor(channelOptions, sharedFilterConfig) {\n        var _a, _b;\n        super();\n        this.sharedFilterConfig = sharedFilterConfig;\n        this.sendCompression = new IdentityHandler();\n        this.receiveCompression = new IdentityHandler();\n        this.currentCompressionAlgorithm = 'identity';\n        const compressionAlgorithmKey = channelOptions['grpc.default_compression_algorithm'];\n        this.maxReceiveMessageLength = (_a = channelOptions['grpc.max_receive_message_length']) !== null && _a !== void 0 ? _a : constants_1.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH;\n        if (compressionAlgorithmKey !== undefined) {\n            if (isCompressionAlgorithmKey(compressionAlgorithmKey)) {\n                const clientSelectedEncoding = compression_algorithms_1.CompressionAlgorithms[compressionAlgorithmKey];\n                const serverSupportedEncodings = (_b = sharedFilterConfig.serverSupportedEncodingHeader) === null || _b === void 0 ? void 0 : _b.split(',');\n                /**\n                 * There are two possible situations here:\n                 * 1) We don't have any info yet from the server about what compression it supports\n                 *    In that case we should just use what the client tells us to use\n                 * 2) We've previously received a response from the server including a grpc-accept-encoding header\n                 *    In that case we only want to use the encoding chosen by the client if the server supports it\n                 */\n                if (!serverSupportedEncodings ||\n                    serverSupportedEncodings.includes(clientSelectedEncoding)) {\n                    this.currentCompressionAlgorithm = clientSelectedEncoding;\n                    this.sendCompression = getCompressionHandler(this.currentCompressionAlgorithm, -1);\n                }\n            }\n            else {\n                logging.log(constants_1.LogVerbosity.ERROR, `Invalid value provided for grpc.default_compression_algorithm option: ${compressionAlgorithmKey}`);\n            }\n        }\n    }\n    async sendMetadata(metadata) {\n        const headers = await metadata;\n        headers.set('grpc-accept-encoding', 'identity,deflate,gzip');\n        headers.set('accept-encoding', 'identity');\n        // No need to send the header if it's \"identity\" -  behavior is identical; save the bandwidth\n        if (this.currentCompressionAlgorithm === 'identity') {\n            headers.remove('grpc-encoding');\n        }\n        else {\n            headers.set('grpc-encoding', this.currentCompressionAlgorithm);\n        }\n        return headers;\n    }\n    receiveMetadata(metadata) {\n        const receiveEncoding = metadata.get('grpc-encoding');\n        if (receiveEncoding.length > 0) {\n            const encoding = receiveEncoding[0];\n            if (typeof encoding === 'string') {\n                this.receiveCompression = getCompressionHandler(encoding, this.maxReceiveMessageLength);\n            }\n        }\n        metadata.remove('grpc-encoding');\n        /* Check to see if the compression we're using to send messages is supported by the server\n         * If not, reset the sendCompression filter and have it use the default IdentityHandler */\n        const serverSupportedEncodingsHeader = metadata.get('grpc-accept-encoding')[0];\n        if (serverSupportedEncodingsHeader) {\n            this.sharedFilterConfig.serverSupportedEncodingHeader =\n                serverSupportedEncodingsHeader;\n            const serverSupportedEncodings = serverSupportedEncodingsHeader.split(',');\n            if (!serverSupportedEncodings.includes(this.currentCompressionAlgorithm)) {\n                this.sendCompression = new IdentityHandler();\n                this.currentCompressionAlgorithm = 'identity';\n            }\n        }\n        metadata.remove('grpc-accept-encoding');\n        return metadata;\n    }\n    async sendMessage(message) {\n        var _a;\n        /* This filter is special. The input message is the bare message bytes,\n         * and the output is a framed and possibly compressed message. For this\n         * reason, this filter should be at the bottom of the filter stack */\n        const resolvedMessage = await message;\n        let compress;\n        if (this.sendCompression instanceof IdentityHandler) {\n            compress = false;\n        }\n        else {\n            compress = (((_a = resolvedMessage.flags) !== null && _a !== void 0 ? _a : 0) & 2 /* WriteFlags.NoCompress */) === 0;\n        }\n        return {\n            message: await this.sendCompression.writeMessage(resolvedMessage.message, compress),\n            flags: resolvedMessage.flags,\n        };\n    }\n    async receiveMessage(message) {\n        /* This filter is also special. The input message is framed and possibly\n         * compressed, and the output message is deframed and uncompressed. So\n         * this is another reason that this filter should be at the bottom of the\n         * filter stack. */\n        return this.receiveCompression.readMessage(await message);\n    }\n}\nexports.CompressionFilter = CompressionFilter;\nclass CompressionFilterFactory {\n    constructor(channel, options) {\n        this.options = options;\n        this.sharedFilterConfig = {};\n    }\n    createFilter() {\n        return new CompressionFilter(this.options, this.sharedFilterConfig);\n    }\n}\nexports.CompressionFilterFactory = CompressionFilterFactory;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deadlineToString = exports.getRelativeTimeout = exports.getDeadlineTimeoutString = exports.minDeadline = void 0;\nfunction minDeadline(...deadlineList) {\n    let minValue = Infinity;\n    for (const deadline of deadlineList) {\n        const deadlineMsecs = deadline instanceof Date ? deadline.getTime() : deadline;\n        if (deadlineMsecs < minValue) {\n            minValue = deadlineMsecs;\n        }\n    }\n    return minValue;\n}\nexports.minDeadline = minDeadline;\nconst units = [\n    ['m', 1],\n    ['S', 1000],\n    ['M', 60 * 1000],\n    ['H', 60 * 60 * 1000],\n];\nfunction getDeadlineTimeoutString(deadline) {\n    const now = new Date().getTime();\n    if (deadline instanceof Date) {\n        deadline = deadline.getTime();\n    }\n    const timeoutMs = Math.max(deadline - now, 0);\n    for (const [unit, factor] of units) {\n        const amount = timeoutMs / factor;\n        if (amount < 1e8) {\n            return String(Math.ceil(amount)) + unit;\n        }\n    }\n    throw new Error('Deadline is too far in the future');\n}\nexports.getDeadlineTimeoutString = getDeadlineTimeoutString;\n/**\n * See https://nodejs.org/api/timers.html#settimeoutcallback-delay-args\n * In particular, \"When delay is larger than 2147483647 or less than 1, the\n * delay will be set to 1. Non-integer delays are truncated to an integer.\"\n * This number of milliseconds is almost 25 days.\n */\nconst MAX_TIMEOUT_TIME = 2147483647;\n/**\n * Get the timeout value that should be passed to setTimeout now for the timer\n * to end at the deadline. For any deadline before now, the timer should end\n * immediately, represented by a value of 0. For any deadline more than\n * MAX_TIMEOUT_TIME milliseconds in the future, a timer cannot be set that will\n * end at that time, so it is treated as infinitely far in the future.\n * @param deadline\n * @returns\n */\nfunction getRelativeTimeout(deadline) {\n    const deadlineMs = deadline instanceof Date ? deadline.getTime() : deadline;\n    const now = new Date().getTime();\n    const timeout = deadlineMs - now;\n    if (timeout < 0) {\n        return 0;\n    }\n    else if (timeout > MAX_TIMEOUT_TIME) {\n        return Infinity;\n    }\n    else {\n        return timeout;\n    }\n}\nexports.getRelativeTimeout = getRelativeTimeout;\nfunction deadlineToString(deadline) {\n    if (deadline instanceof Date) {\n        return deadline.toISOString();\n    }\n    else {\n        const dateDeadline = new Date(deadline);\n        if (Number.isNaN(dateDeadline.getTime())) {\n            return '' + deadline;\n        }\n        else {\n            return dateDeadline.toISOString();\n        }\n    }\n}\nexports.deadlineToString = deadlineToString;\n", "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.restrictControlPlaneStatusCode = void 0;\nconst constants_1 = require(\"./constants\");\nconst INAPPROPRIATE_CONTROL_PLANE_CODES = [\n    constants_1.Status.OK,\n    constants_1.Status.INVALID_ARGUMENT,\n    constants_1.Status.NOT_FOUND,\n    constants_1.Status.ALREADY_EXISTS,\n    constants_1.Status.FAILED_PRECONDITION,\n    constants_1.Status.ABORTED,\n    constants_1.Status.OUT_OF_RANGE,\n    constants_1.Status.DATA_LOSS,\n];\nfunction restrictControlPlaneStatusCode(code, details) {\n    if (INAPPROPRIATE_CONTROL_PLANE_CODES.includes(code)) {\n        return {\n            code: constants_1.Status.INTERNAL,\n            details: `Invalid status from control plane: ${code} ${constants_1.Status[code]} ${details}`,\n        };\n    }\n    else {\n        return { code, details };\n    }\n}\nexports.restrictControlPlaneStatusCode = restrictControlPlaneStatusCode;\n", "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoadBalancingCall = void 0;\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst constants_1 = require(\"./constants\");\nconst deadline_1 = require(\"./deadline\");\nconst metadata_1 = require(\"./metadata\");\nconst picker_1 = require(\"./picker\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst logging = require(\"./logging\");\nconst control_plane_status_1 = require(\"./control-plane-status\");\nconst http2 = require(\"http2\");\nconst TRACER_NAME = 'load_balancing_call';\nclass LoadBalancingCall {\n    constructor(channel, callConfig, methodName, host, credentials, deadline, callNumber) {\n        var _a, _b;\n        this.channel = channel;\n        this.callConfig = callConfig;\n        this.methodName = methodName;\n        this.host = host;\n        this.credentials = credentials;\n        this.deadline = deadline;\n        this.callNumber = callNumber;\n        this.child = null;\n        this.readPending = false;\n        this.pendingMessage = null;\n        this.pendingHalfClose = false;\n        this.ended = false;\n        this.metadata = null;\n        this.listener = null;\n        this.onCallEnded = null;\n        const splitPath = this.methodName.split('/');\n        let serviceName = '';\n        /* The standard path format is \"/{serviceName}/{methodName}\", so if we split\n         * by '/', the first item should be empty and the second should be the\n         * service name */\n        if (splitPath.length >= 2) {\n            serviceName = splitPath[1];\n        }\n        const hostname = (_b = (_a = (0, uri_parser_1.splitHostPort)(this.host)) === null || _a === void 0 ? void 0 : _a.host) !== null && _b !== void 0 ? _b : 'localhost';\n        /* Currently, call credentials are only allowed on HTTPS connections, so we\n         * can assume that the scheme is \"https\" */\n        this.serviceUrl = `https://${hostname}/${serviceName}`;\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '[' + this.callNumber + '] ' + text);\n    }\n    outputStatus(status, progress) {\n        var _a, _b;\n        if (!this.ended) {\n            this.ended = true;\n            this.trace('ended with status: code=' +\n                status.code +\n                ' details=\"' +\n                status.details +\n                '\"');\n            const finalStatus = Object.assign(Object.assign({}, status), { progress });\n            (_a = this.listener) === null || _a === void 0 ? void 0 : _a.onReceiveStatus(finalStatus);\n            (_b = this.onCallEnded) === null || _b === void 0 ? void 0 : _b.call(this, finalStatus.code);\n        }\n    }\n    doPick() {\n        var _a, _b;\n        if (this.ended) {\n            return;\n        }\n        if (!this.metadata) {\n            throw new Error('doPick called before start');\n        }\n        this.trace('Pick called');\n        const pickResult = this.channel.doPick(this.metadata, this.callConfig.pickInformation);\n        const subchannelString = pickResult.subchannel\n            ? '(' +\n                pickResult.subchannel.getChannelzRef().id +\n                ') ' +\n                pickResult.subchannel.getAddress()\n            : '' + pickResult.subchannel;\n        this.trace('Pick result: ' +\n            picker_1.PickResultType[pickResult.pickResultType] +\n            ' subchannel: ' +\n            subchannelString +\n            ' status: ' +\n            ((_a = pickResult.status) === null || _a === void 0 ? void 0 : _a.code) +\n            ' ' +\n            ((_b = pickResult.status) === null || _b === void 0 ? void 0 : _b.details));\n        switch (pickResult.pickResultType) {\n            case picker_1.PickResultType.COMPLETE:\n                this.credentials\n                    .generateMetadata({ service_url: this.serviceUrl })\n                    .then(credsMetadata => {\n                    var _a, _b, _c;\n                    /* If this call was cancelled (e.g. by the deadline) before\n                     * metadata generation finished, we shouldn't do anything with\n                     * it. */\n                    if (this.ended) {\n                        this.trace('Credentials metadata generation finished after call ended');\n                        return;\n                    }\n                    const finalMetadata = this.metadata.clone();\n                    finalMetadata.merge(credsMetadata);\n                    if (finalMetadata.get('authorization').length > 1) {\n                        this.outputStatus({\n                            code: constants_1.Status.INTERNAL,\n                            details: '\"authorization\" metadata cannot have multiple values',\n                            metadata: new metadata_1.Metadata(),\n                        }, 'PROCESSED');\n                    }\n                    if (pickResult.subchannel.getConnectivityState() !==\n                        connectivity_state_1.ConnectivityState.READY) {\n                        this.trace('Picked subchannel ' +\n                            subchannelString +\n                            ' has state ' +\n                            connectivity_state_1.ConnectivityState[pickResult.subchannel.getConnectivityState()] +\n                            ' after getting credentials metadata. Retrying pick');\n                        this.doPick();\n                        return;\n                    }\n                    if (this.deadline !== Infinity) {\n                        finalMetadata.set('grpc-timeout', (0, deadline_1.getDeadlineTimeoutString)(this.deadline));\n                    }\n                    try {\n                        this.child = pickResult\n                            .subchannel.getRealSubchannel()\n                            .createCall(finalMetadata, this.host, this.methodName, {\n                            onReceiveMetadata: metadata => {\n                                this.trace('Received metadata');\n                                this.listener.onReceiveMetadata(metadata);\n                            },\n                            onReceiveMessage: message => {\n                                this.trace('Received message');\n                                this.listener.onReceiveMessage(message);\n                            },\n                            onReceiveStatus: status => {\n                                this.trace('Received status');\n                                if (status.rstCode ===\n                                    http2.constants.NGHTTP2_REFUSED_STREAM) {\n                                    this.outputStatus(status, 'REFUSED');\n                                }\n                                else {\n                                    this.outputStatus(status, 'PROCESSED');\n                                }\n                            },\n                        });\n                    }\n                    catch (error) {\n                        this.trace('Failed to start call on picked subchannel ' +\n                            subchannelString +\n                            ' with error ' +\n                            error.message);\n                        this.outputStatus({\n                            code: constants_1.Status.INTERNAL,\n                            details: 'Failed to start HTTP/2 stream with error ' +\n                                error.message,\n                            metadata: new metadata_1.Metadata(),\n                        }, 'NOT_STARTED');\n                        return;\n                    }\n                    (_b = (_a = this.callConfig).onCommitted) === null || _b === void 0 ? void 0 : _b.call(_a);\n                    (_c = pickResult.onCallStarted) === null || _c === void 0 ? void 0 : _c.call(pickResult);\n                    this.onCallEnded = pickResult.onCallEnded;\n                    this.trace('Created child call [' + this.child.getCallNumber() + ']');\n                    if (this.readPending) {\n                        this.child.startRead();\n                    }\n                    if (this.pendingMessage) {\n                        this.child.sendMessageWithContext(this.pendingMessage.context, this.pendingMessage.message);\n                    }\n                    if (this.pendingHalfClose) {\n                        this.child.halfClose();\n                    }\n                }, (error) => {\n                    // We assume the error code isn't 0 (Status.OK)\n                    const { code, details } = (0, control_plane_status_1.restrictControlPlaneStatusCode)(typeof error.code === 'number' ? error.code : constants_1.Status.UNKNOWN, `Getting metadata from plugin failed with error: ${error.message}`);\n                    this.outputStatus({\n                        code: code,\n                        details: details,\n                        metadata: new metadata_1.Metadata(),\n                    }, 'PROCESSED');\n                });\n                break;\n            case picker_1.PickResultType.DROP:\n                const { code, details } = (0, control_plane_status_1.restrictControlPlaneStatusCode)(pickResult.status.code, pickResult.status.details);\n                setImmediate(() => {\n                    this.outputStatus({ code, details, metadata: pickResult.status.metadata }, 'DROP');\n                });\n                break;\n            case picker_1.PickResultType.TRANSIENT_FAILURE:\n                if (this.metadata.getOptions().waitForReady) {\n                    this.channel.queueCallForPick(this);\n                }\n                else {\n                    const { code, details } = (0, control_plane_status_1.restrictControlPlaneStatusCode)(pickResult.status.code, pickResult.status.details);\n                    setImmediate(() => {\n                        this.outputStatus({ code, details, metadata: pickResult.status.metadata }, 'PROCESSED');\n                    });\n                }\n                break;\n            case picker_1.PickResultType.QUEUE:\n                this.channel.queueCallForPick(this);\n        }\n    }\n    cancelWithStatus(status, details) {\n        var _a;\n        this.trace('cancelWithStatus code: ' + status + ' details: \"' + details + '\"');\n        (_a = this.child) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(status, details);\n        this.outputStatus({ code: status, details: details, metadata: new metadata_1.Metadata() }, 'PROCESSED');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.child) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : this.channel.getTarget();\n    }\n    start(metadata, listener) {\n        this.trace('start called');\n        this.listener = listener;\n        this.metadata = metadata;\n        this.doPick();\n    }\n    sendMessageWithContext(context, message) {\n        this.trace('write() called with message of length ' + message.length);\n        if (this.child) {\n            this.child.sendMessageWithContext(context, message);\n        }\n        else {\n            this.pendingMessage = { context, message };\n        }\n    }\n    startRead() {\n        this.trace('startRead called');\n        if (this.child) {\n            this.child.startRead();\n        }\n        else {\n            this.readPending = true;\n        }\n    }\n    halfClose() {\n        this.trace('halfClose called');\n        if (this.child) {\n            this.child.halfClose();\n        }\n        else {\n            this.pendingHalfClose = true;\n        }\n    }\n    setCredentials(credentials) {\n        throw new Error('Method not implemented.');\n    }\n    getCallNumber() {\n        return this.callNumber;\n    }\n}\nexports.LoadBalancingCall = LoadBalancingCall;\n", "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResolvingCall = void 0;\nconst constants_1 = require(\"./constants\");\nconst deadline_1 = require(\"./deadline\");\nconst metadata_1 = require(\"./metadata\");\nconst logging = require(\"./logging\");\nconst control_plane_status_1 = require(\"./control-plane-status\");\nconst TRACER_NAME = 'resolving_call';\nclass ResolvingCall {\n    constructor(channel, method, options, filterStackFactory, credentials, callNumber) {\n        this.channel = channel;\n        this.method = method;\n        this.filterStackFactory = filterStackFactory;\n        this.credentials = credentials;\n        this.callNumber = callNumber;\n        this.child = null;\n        this.readPending = false;\n        this.pendingMessage = null;\n        this.pendingHalfClose = false;\n        this.ended = false;\n        this.readFilterPending = false;\n        this.writeFilterPending = false;\n        this.pendingChildStatus = null;\n        this.metadata = null;\n        this.listener = null;\n        this.statusWatchers = [];\n        this.deadlineTimer = setTimeout(() => { }, 0);\n        this.filterStack = null;\n        this.deadline = options.deadline;\n        this.host = options.host;\n        if (options.parentCall) {\n            if (options.flags & constants_1.Propagate.CANCELLATION) {\n                options.parentCall.on('cancelled', () => {\n                    this.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled by parent call');\n                });\n            }\n            if (options.flags & constants_1.Propagate.DEADLINE) {\n                this.trace('Propagating deadline from parent: ' +\n                    options.parentCall.getDeadline());\n                this.deadline = (0, deadline_1.minDeadline)(this.deadline, options.parentCall.getDeadline());\n            }\n        }\n        this.trace('Created');\n        this.runDeadlineTimer();\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '[' + this.callNumber + '] ' + text);\n    }\n    runDeadlineTimer() {\n        clearTimeout(this.deadlineTimer);\n        this.trace('Deadline: ' + (0, deadline_1.deadlineToString)(this.deadline));\n        const timeout = (0, deadline_1.getRelativeTimeout)(this.deadline);\n        if (timeout !== Infinity) {\n            this.trace('Deadline will be reached in ' + timeout + 'ms');\n            const handleDeadline = () => {\n                this.cancelWithStatus(constants_1.Status.DEADLINE_EXCEEDED, 'Deadline exceeded');\n            };\n            if (timeout <= 0) {\n                process.nextTick(handleDeadline);\n            }\n            else {\n                this.deadlineTimer = setTimeout(handleDeadline, timeout);\n            }\n        }\n    }\n    outputStatus(status) {\n        if (!this.ended) {\n            this.ended = true;\n            if (!this.filterStack) {\n                this.filterStack = this.filterStackFactory.createFilter();\n            }\n            clearTimeout(this.deadlineTimer);\n            const filteredStatus = this.filterStack.receiveTrailers(status);\n            this.trace('ended with status: code=' +\n                filteredStatus.code +\n                ' details=\"' +\n                filteredStatus.details +\n                '\"');\n            this.statusWatchers.forEach(watcher => watcher(filteredStatus));\n            process.nextTick(() => {\n                var _a;\n                (_a = this.listener) === null || _a === void 0 ? void 0 : _a.onReceiveStatus(filteredStatus);\n            });\n        }\n    }\n    sendMessageOnChild(context, message) {\n        if (!this.child) {\n            throw new Error('sendMessageonChild called with child not populated');\n        }\n        const child = this.child;\n        this.writeFilterPending = true;\n        this.filterStack.sendMessage(Promise.resolve({ message: message, flags: context.flags })).then(filteredMessage => {\n            this.writeFilterPending = false;\n            child.sendMessageWithContext(context, filteredMessage.message);\n            if (this.pendingHalfClose) {\n                child.halfClose();\n            }\n        }, (status) => {\n            this.cancelWithStatus(status.code, status.details);\n        });\n    }\n    getConfig() {\n        if (this.ended) {\n            return;\n        }\n        if (!this.metadata || !this.listener) {\n            throw new Error('getConfig called before start');\n        }\n        const configResult = this.channel.getConfig(this.method, this.metadata);\n        if (configResult.type === 'NONE') {\n            this.channel.queueCallForConfig(this);\n            return;\n        }\n        else if (configResult.type === 'ERROR') {\n            if (this.metadata.getOptions().waitForReady) {\n                this.channel.queueCallForConfig(this);\n            }\n            else {\n                this.outputStatus(configResult.error);\n            }\n            return;\n        }\n        // configResult.type === 'SUCCESS'\n        const config = configResult.config;\n        if (config.status !== constants_1.Status.OK) {\n            const { code, details } = (0, control_plane_status_1.restrictControlPlaneStatusCode)(config.status, 'Failed to route call to method ' + this.method);\n            this.outputStatus({\n                code: code,\n                details: details,\n                metadata: new metadata_1.Metadata(),\n            });\n            return;\n        }\n        if (config.methodConfig.timeout) {\n            const configDeadline = new Date();\n            configDeadline.setSeconds(configDeadline.getSeconds() + config.methodConfig.timeout.seconds);\n            configDeadline.setMilliseconds(configDeadline.getMilliseconds() +\n                config.methodConfig.timeout.nanos / 1000000);\n            this.deadline = (0, deadline_1.minDeadline)(this.deadline, configDeadline);\n            this.runDeadlineTimer();\n        }\n        this.filterStackFactory.push(config.dynamicFilterFactories);\n        this.filterStack = this.filterStackFactory.createFilter();\n        this.filterStack.sendMetadata(Promise.resolve(this.metadata)).then(filteredMetadata => {\n            this.child = this.channel.createInnerCall(config, this.method, this.host, this.credentials, this.deadline);\n            this.trace('Created child [' + this.child.getCallNumber() + ']');\n            this.child.start(filteredMetadata, {\n                onReceiveMetadata: metadata => {\n                    this.trace('Received metadata');\n                    this.listener.onReceiveMetadata(this.filterStack.receiveMetadata(metadata));\n                },\n                onReceiveMessage: message => {\n                    this.trace('Received message');\n                    this.readFilterPending = true;\n                    this.filterStack.receiveMessage(message).then(filteredMesssage => {\n                        this.trace('Finished filtering received message');\n                        this.readFilterPending = false;\n                        this.listener.onReceiveMessage(filteredMesssage);\n                        if (this.pendingChildStatus) {\n                            this.outputStatus(this.pendingChildStatus);\n                        }\n                    }, (status) => {\n                        this.cancelWithStatus(status.code, status.details);\n                    });\n                },\n                onReceiveStatus: status => {\n                    this.trace('Received status');\n                    if (this.readFilterPending) {\n                        this.pendingChildStatus = status;\n                    }\n                    else {\n                        this.outputStatus(status);\n                    }\n                },\n            });\n            if (this.readPending) {\n                this.child.startRead();\n            }\n            if (this.pendingMessage) {\n                this.sendMessageOnChild(this.pendingMessage.context, this.pendingMessage.message);\n            }\n            else if (this.pendingHalfClose) {\n                this.child.halfClose();\n            }\n        }, (status) => {\n            this.outputStatus(status);\n        });\n    }\n    reportResolverError(status) {\n        var _a;\n        if ((_a = this.metadata) === null || _a === void 0 ? void 0 : _a.getOptions().waitForReady) {\n            this.channel.queueCallForConfig(this);\n        }\n        else {\n            this.outputStatus(status);\n        }\n    }\n    cancelWithStatus(status, details) {\n        var _a;\n        this.trace('cancelWithStatus code: ' + status + ' details: \"' + details + '\"');\n        (_a = this.child) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(status, details);\n        this.outputStatus({\n            code: status,\n            details: details,\n            metadata: new metadata_1.Metadata(),\n        });\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.child) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : this.channel.getTarget();\n    }\n    start(metadata, listener) {\n        this.trace('start called');\n        this.metadata = metadata.clone();\n        this.listener = listener;\n        this.getConfig();\n    }\n    sendMessageWithContext(context, message) {\n        this.trace('write() called with message of length ' + message.length);\n        if (this.child) {\n            this.sendMessageOnChild(context, message);\n        }\n        else {\n            this.pendingMessage = { context, message };\n        }\n    }\n    startRead() {\n        this.trace('startRead called');\n        if (this.child) {\n            this.child.startRead();\n        }\n        else {\n            this.readPending = true;\n        }\n    }\n    halfClose() {\n        this.trace('halfClose called');\n        if (this.child && !this.writeFilterPending) {\n            this.child.halfClose();\n        }\n        else {\n            this.pendingHalfClose = true;\n        }\n    }\n    setCredentials(credentials) {\n        this.credentials = this.credentials.compose(credentials);\n    }\n    addStatusWatcher(watcher) {\n        this.statusWatchers.push(watcher);\n    }\n    getCallNumber() {\n        return this.callNumber;\n    }\n}\nexports.ResolvingCall = ResolvingCall;\n", "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RetryingCall = exports.MessageBufferTracker = exports.RetryThrottler = void 0;\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst logging = require(\"./logging\");\nconst TRACER_NAME = 'retrying_call';\nclass RetryThrottler {\n    constructor(maxTokens, tokenRatio, previousRetryThrottler) {\n        this.maxTokens = maxTokens;\n        this.tokenRatio = tokenRatio;\n        if (previousRetryThrottler) {\n            /* When carrying over tokens from a previous config, rescale them to the\n             * new max value */\n            this.tokens =\n                previousRetryThrottler.tokens *\n                    (maxTokens / previousRetryThrottler.maxTokens);\n        }\n        else {\n            this.tokens = maxTokens;\n        }\n    }\n    addCallSucceeded() {\n        this.tokens = Math.max(this.tokens + this.tokenRatio, this.maxTokens);\n    }\n    addCallFailed() {\n        this.tokens = Math.min(this.tokens - 1, 0);\n    }\n    canRetryCall() {\n        return this.tokens > this.maxTokens / 2;\n    }\n}\nexports.RetryThrottler = RetryThrottler;\nclass MessageBufferTracker {\n    constructor(totalLimit, limitPerCall) {\n        this.totalLimit = totalLimit;\n        this.limitPerCall = limitPerCall;\n        this.totalAllocated = 0;\n        this.allocatedPerCall = new Map();\n    }\n    allocate(size, callId) {\n        var _a;\n        const currentPerCall = (_a = this.allocatedPerCall.get(callId)) !== null && _a !== void 0 ? _a : 0;\n        if (this.limitPerCall - currentPerCall < size ||\n            this.totalLimit - this.totalAllocated < size) {\n            return false;\n        }\n        this.allocatedPerCall.set(callId, currentPerCall + size);\n        this.totalAllocated += size;\n        return true;\n    }\n    free(size, callId) {\n        var _a;\n        if (this.totalAllocated < size) {\n            throw new Error(`Invalid buffer allocation state: call ${callId} freed ${size} > total allocated ${this.totalAllocated}`);\n        }\n        this.totalAllocated -= size;\n        const currentPerCall = (_a = this.allocatedPerCall.get(callId)) !== null && _a !== void 0 ? _a : 0;\n        if (currentPerCall < size) {\n            throw new Error(`Invalid buffer allocation state: call ${callId} freed ${size} > allocated for call ${currentPerCall}`);\n        }\n        this.allocatedPerCall.set(callId, currentPerCall - size);\n    }\n    freeAll(callId) {\n        var _a;\n        const currentPerCall = (_a = this.allocatedPerCall.get(callId)) !== null && _a !== void 0 ? _a : 0;\n        if (this.totalAllocated < currentPerCall) {\n            throw new Error(`Invalid buffer allocation state: call ${callId} allocated ${currentPerCall} > total allocated ${this.totalAllocated}`);\n        }\n        this.totalAllocated -= currentPerCall;\n        this.allocatedPerCall.delete(callId);\n    }\n}\nexports.MessageBufferTracker = MessageBufferTracker;\nconst PREVIONS_RPC_ATTEMPTS_METADATA_KEY = 'grpc-previous-rpc-attempts';\nclass RetryingCall {\n    constructor(channel, callConfig, methodName, host, credentials, deadline, callNumber, bufferTracker, retryThrottler) {\n        this.channel = channel;\n        this.callConfig = callConfig;\n        this.methodName = methodName;\n        this.host = host;\n        this.credentials = credentials;\n        this.deadline = deadline;\n        this.callNumber = callNumber;\n        this.bufferTracker = bufferTracker;\n        this.retryThrottler = retryThrottler;\n        this.listener = null;\n        this.initialMetadata = null;\n        this.underlyingCalls = [];\n        this.writeBuffer = [];\n        /**\n         * The offset of message indices in the writeBuffer. For example, if\n         * writeBufferOffset is 10, message 10 is in writeBuffer[0] and message 15\n         * is in writeBuffer[5].\n         */\n        this.writeBufferOffset = 0;\n        /**\n         * Tracks whether a read has been started, so that we know whether to start\n         * reads on new child calls. This only matters for the first read, because\n         * once a message comes in the child call becomes committed and there will\n         * be no new child calls.\n         */\n        this.readStarted = false;\n        this.transparentRetryUsed = false;\n        /**\n         * Number of attempts so far\n         */\n        this.attempts = 0;\n        this.hedgingTimer = null;\n        this.committedCallIndex = null;\n        this.initialRetryBackoffSec = 0;\n        this.nextRetryBackoffSec = 0;\n        if (callConfig.methodConfig.retryPolicy) {\n            this.state = 'RETRY';\n            const retryPolicy = callConfig.methodConfig.retryPolicy;\n            this.nextRetryBackoffSec = this.initialRetryBackoffSec = Number(retryPolicy.initialBackoff.substring(0, retryPolicy.initialBackoff.length - 1));\n        }\n        else if (callConfig.methodConfig.hedgingPolicy) {\n            this.state = 'HEDGING';\n        }\n        else {\n            this.state = 'TRANSPARENT_ONLY';\n        }\n    }\n    getCallNumber() {\n        return this.callNumber;\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '[' + this.callNumber + '] ' + text);\n    }\n    reportStatus(statusObject) {\n        this.trace('ended with status: code=' +\n            statusObject.code +\n            ' details=\"' +\n            statusObject.details +\n            '\"');\n        this.bufferTracker.freeAll(this.callNumber);\n        this.writeBufferOffset = this.writeBufferOffset + this.writeBuffer.length;\n        this.writeBuffer = [];\n        process.nextTick(() => {\n            var _a;\n            // Explicitly construct status object to remove progress field\n            (_a = this.listener) === null || _a === void 0 ? void 0 : _a.onReceiveStatus({\n                code: statusObject.code,\n                details: statusObject.details,\n                metadata: statusObject.metadata,\n            });\n        });\n    }\n    cancelWithStatus(status, details) {\n        this.trace('cancelWithStatus code: ' + status + ' details: \"' + details + '\"');\n        this.reportStatus({ code: status, details, metadata: new metadata_1.Metadata() });\n        for (const { call } of this.underlyingCalls) {\n            call.cancelWithStatus(status, details);\n        }\n    }\n    getPeer() {\n        if (this.committedCallIndex !== null) {\n            return this.underlyingCalls[this.committedCallIndex].call.getPeer();\n        }\n        else {\n            return 'unknown';\n        }\n    }\n    getBufferEntry(messageIndex) {\n        var _a;\n        return ((_a = this.writeBuffer[messageIndex - this.writeBufferOffset]) !== null && _a !== void 0 ? _a : {\n            entryType: 'FREED',\n            allocated: false,\n        });\n    }\n    getNextBufferIndex() {\n        return this.writeBufferOffset + this.writeBuffer.length;\n    }\n    clearSentMessages() {\n        if (this.state !== 'COMMITTED') {\n            return;\n        }\n        const earliestNeededMessageIndex = this.underlyingCalls[this.committedCallIndex].nextMessageToSend;\n        for (let messageIndex = this.writeBufferOffset; messageIndex < earliestNeededMessageIndex; messageIndex++) {\n            const bufferEntry = this.getBufferEntry(messageIndex);\n            if (bufferEntry.allocated) {\n                this.bufferTracker.free(bufferEntry.message.message.length, this.callNumber);\n            }\n        }\n        this.writeBuffer = this.writeBuffer.slice(earliestNeededMessageIndex - this.writeBufferOffset);\n        this.writeBufferOffset = earliestNeededMessageIndex;\n    }\n    commitCall(index) {\n        if (this.state === 'COMMITTED') {\n            return;\n        }\n        if (this.underlyingCalls[index].state === 'COMPLETED') {\n            return;\n        }\n        this.trace('Committing call [' +\n            this.underlyingCalls[index].call.getCallNumber() +\n            '] at index ' +\n            index);\n        this.state = 'COMMITTED';\n        this.committedCallIndex = index;\n        for (let i = 0; i < this.underlyingCalls.length; i++) {\n            if (i === index) {\n                continue;\n            }\n            if (this.underlyingCalls[i].state === 'COMPLETED') {\n                continue;\n            }\n            this.underlyingCalls[i].state = 'COMPLETED';\n            this.underlyingCalls[i].call.cancelWithStatus(constants_1.Status.CANCELLED, 'Discarded in favor of other hedged attempt');\n        }\n        this.clearSentMessages();\n    }\n    commitCallWithMostMessages() {\n        if (this.state === 'COMMITTED') {\n            return;\n        }\n        let mostMessages = -1;\n        let callWithMostMessages = -1;\n        for (const [index, childCall] of this.underlyingCalls.entries()) {\n            if (childCall.state === 'ACTIVE' &&\n                childCall.nextMessageToSend > mostMessages) {\n                mostMessages = childCall.nextMessageToSend;\n                callWithMostMessages = index;\n            }\n        }\n        if (callWithMostMessages === -1) {\n            /* There are no active calls, disable retries to force the next call that\n             * is started to be committed. */\n            this.state = 'TRANSPARENT_ONLY';\n        }\n        else {\n            this.commitCall(callWithMostMessages);\n        }\n    }\n    isStatusCodeInList(list, code) {\n        return list.some(value => value === code ||\n            value.toString().toLowerCase() === constants_1.Status[code].toLowerCase());\n    }\n    getNextRetryBackoffMs() {\n        var _a;\n        const retryPolicy = (_a = this.callConfig) === null || _a === void 0 ? void 0 : _a.methodConfig.retryPolicy;\n        if (!retryPolicy) {\n            return 0;\n        }\n        const nextBackoffMs = Math.random() * this.nextRetryBackoffSec * 1000;\n        const maxBackoffSec = Number(retryPolicy.maxBackoff.substring(0, retryPolicy.maxBackoff.length - 1));\n        this.nextRetryBackoffSec = Math.min(this.nextRetryBackoffSec * retryPolicy.backoffMultiplier, maxBackoffSec);\n        return nextBackoffMs;\n    }\n    maybeRetryCall(pushback, callback) {\n        if (this.state !== 'RETRY') {\n            callback(false);\n            return;\n        }\n        const retryPolicy = this.callConfig.methodConfig.retryPolicy;\n        if (this.attempts >= Math.min(retryPolicy.maxAttempts, 5)) {\n            callback(false);\n            return;\n        }\n        let retryDelayMs;\n        if (pushback === null) {\n            retryDelayMs = this.getNextRetryBackoffMs();\n        }\n        else if (pushback < 0) {\n            this.state = 'TRANSPARENT_ONLY';\n            callback(false);\n            return;\n        }\n        else {\n            retryDelayMs = pushback;\n            this.nextRetryBackoffSec = this.initialRetryBackoffSec;\n        }\n        setTimeout(() => {\n            var _a, _b;\n            if (this.state !== 'RETRY') {\n                callback(false);\n                return;\n            }\n            if ((_b = (_a = this.retryThrottler) === null || _a === void 0 ? void 0 : _a.canRetryCall()) !== null && _b !== void 0 ? _b : true) {\n                callback(true);\n                this.attempts += 1;\n                this.startNewAttempt();\n            }\n        }, retryDelayMs);\n    }\n    countActiveCalls() {\n        let count = 0;\n        for (const call of this.underlyingCalls) {\n            if ((call === null || call === void 0 ? void 0 : call.state) === 'ACTIVE') {\n                count += 1;\n            }\n        }\n        return count;\n    }\n    handleProcessedStatus(status, callIndex, pushback) {\n        var _a, _b, _c;\n        switch (this.state) {\n            case 'COMMITTED':\n            case 'TRANSPARENT_ONLY':\n                this.commitCall(callIndex);\n                this.reportStatus(status);\n                break;\n            case 'HEDGING':\n                if (this.isStatusCodeInList((_a = this.callConfig.methodConfig.hedgingPolicy.nonFatalStatusCodes) !== null && _a !== void 0 ? _a : [], status.code)) {\n                    (_b = this.retryThrottler) === null || _b === void 0 ? void 0 : _b.addCallFailed();\n                    let delayMs;\n                    if (pushback === null) {\n                        delayMs = 0;\n                    }\n                    else if (pushback < 0) {\n                        this.state = 'TRANSPARENT_ONLY';\n                        this.commitCall(callIndex);\n                        this.reportStatus(status);\n                        return;\n                    }\n                    else {\n                        delayMs = pushback;\n                    }\n                    setTimeout(() => {\n                        this.maybeStartHedgingAttempt();\n                        // If after trying to start a call there are no active calls, this was the last one\n                        if (this.countActiveCalls() === 0) {\n                            this.commitCall(callIndex);\n                            this.reportStatus(status);\n                        }\n                    }, delayMs);\n                }\n                else {\n                    this.commitCall(callIndex);\n                    this.reportStatus(status);\n                }\n                break;\n            case 'RETRY':\n                if (this.isStatusCodeInList(this.callConfig.methodConfig.retryPolicy.retryableStatusCodes, status.code)) {\n                    (_c = this.retryThrottler) === null || _c === void 0 ? void 0 : _c.addCallFailed();\n                    this.maybeRetryCall(pushback, retried => {\n                        if (!retried) {\n                            this.commitCall(callIndex);\n                            this.reportStatus(status);\n                        }\n                    });\n                }\n                else {\n                    this.commitCall(callIndex);\n                    this.reportStatus(status);\n                }\n                break;\n        }\n    }\n    getPushback(metadata) {\n        const mdValue = metadata.get('grpc-retry-pushback-ms');\n        if (mdValue.length === 0) {\n            return null;\n        }\n        try {\n            return parseInt(mdValue[0]);\n        }\n        catch (e) {\n            return -1;\n        }\n    }\n    handleChildStatus(status, callIndex) {\n        var _a;\n        if (this.underlyingCalls[callIndex].state === 'COMPLETED') {\n            return;\n        }\n        this.trace('state=' +\n            this.state +\n            ' handling status with progress ' +\n            status.progress +\n            ' from child [' +\n            this.underlyingCalls[callIndex].call.getCallNumber() +\n            '] in state ' +\n            this.underlyingCalls[callIndex].state);\n        this.underlyingCalls[callIndex].state = 'COMPLETED';\n        if (status.code === constants_1.Status.OK) {\n            (_a = this.retryThrottler) === null || _a === void 0 ? void 0 : _a.addCallSucceeded();\n            this.commitCall(callIndex);\n            this.reportStatus(status);\n            return;\n        }\n        if (this.state === 'COMMITTED') {\n            this.reportStatus(status);\n            return;\n        }\n        const pushback = this.getPushback(status.metadata);\n        switch (status.progress) {\n            case 'NOT_STARTED':\n                // RPC never leaves the client, always safe to retry\n                this.startNewAttempt();\n                break;\n            case 'REFUSED':\n                // RPC reaches the server library, but not the server application logic\n                if (this.transparentRetryUsed) {\n                    this.handleProcessedStatus(status, callIndex, pushback);\n                }\n                else {\n                    this.transparentRetryUsed = true;\n                    this.startNewAttempt();\n                }\n                break;\n            case 'DROP':\n                this.commitCall(callIndex);\n                this.reportStatus(status);\n                break;\n            case 'PROCESSED':\n                this.handleProcessedStatus(status, callIndex, pushback);\n                break;\n        }\n    }\n    maybeStartHedgingAttempt() {\n        if (this.state !== 'HEDGING') {\n            return;\n        }\n        if (!this.callConfig.methodConfig.hedgingPolicy) {\n            return;\n        }\n        const hedgingPolicy = this.callConfig.methodConfig.hedgingPolicy;\n        if (this.attempts >= Math.min(hedgingPolicy.maxAttempts, 5)) {\n            return;\n        }\n        this.attempts += 1;\n        this.startNewAttempt();\n        this.maybeStartHedgingTimer();\n    }\n    maybeStartHedgingTimer() {\n        var _a, _b, _c;\n        if (this.hedgingTimer) {\n            clearTimeout(this.hedgingTimer);\n        }\n        if (this.state !== 'HEDGING') {\n            return;\n        }\n        if (!this.callConfig.methodConfig.hedgingPolicy) {\n            return;\n        }\n        const hedgingPolicy = this.callConfig.methodConfig.hedgingPolicy;\n        if (this.attempts >= Math.min(hedgingPolicy.maxAttempts, 5)) {\n            return;\n        }\n        const hedgingDelayString = (_a = hedgingPolicy.hedgingDelay) !== null && _a !== void 0 ? _a : '0s';\n        const hedgingDelaySec = Number(hedgingDelayString.substring(0, hedgingDelayString.length - 1));\n        this.hedgingTimer = setTimeout(() => {\n            this.maybeStartHedgingAttempt();\n        }, hedgingDelaySec * 1000);\n        (_c = (_b = this.hedgingTimer).unref) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    startNewAttempt() {\n        const child = this.channel.createLoadBalancingCall(this.callConfig, this.methodName, this.host, this.credentials, this.deadline);\n        this.trace('Created child call [' +\n            child.getCallNumber() +\n            '] for attempt ' +\n            this.attempts);\n        const index = this.underlyingCalls.length;\n        this.underlyingCalls.push({\n            state: 'ACTIVE',\n            call: child,\n            nextMessageToSend: 0,\n        });\n        const previousAttempts = this.attempts - 1;\n        const initialMetadata = this.initialMetadata.clone();\n        if (previousAttempts > 0) {\n            initialMetadata.set(PREVIONS_RPC_ATTEMPTS_METADATA_KEY, `${previousAttempts}`);\n        }\n        let receivedMetadata = false;\n        child.start(initialMetadata, {\n            onReceiveMetadata: metadata => {\n                this.trace('Received metadata from child [' + child.getCallNumber() + ']');\n                this.commitCall(index);\n                receivedMetadata = true;\n                if (previousAttempts > 0) {\n                    metadata.set(PREVIONS_RPC_ATTEMPTS_METADATA_KEY, `${previousAttempts}`);\n                }\n                if (this.underlyingCalls[index].state === 'ACTIVE') {\n                    this.listener.onReceiveMetadata(metadata);\n                }\n            },\n            onReceiveMessage: message => {\n                this.trace('Received message from child [' + child.getCallNumber() + ']');\n                this.commitCall(index);\n                if (this.underlyingCalls[index].state === 'ACTIVE') {\n                    this.listener.onReceiveMessage(message);\n                }\n            },\n            onReceiveStatus: status => {\n                this.trace('Received status from child [' + child.getCallNumber() + ']');\n                if (!receivedMetadata && previousAttempts > 0) {\n                    status.metadata.set(PREVIONS_RPC_ATTEMPTS_METADATA_KEY, `${previousAttempts}`);\n                }\n                this.handleChildStatus(status, index);\n            },\n        });\n        this.sendNextChildMessage(index);\n        if (this.readStarted) {\n            child.startRead();\n        }\n    }\n    start(metadata, listener) {\n        this.trace('start called');\n        this.listener = listener;\n        this.initialMetadata = metadata;\n        this.attempts += 1;\n        this.startNewAttempt();\n        this.maybeStartHedgingTimer();\n    }\n    handleChildWriteCompleted(childIndex) {\n        var _a, _b;\n        const childCall = this.underlyingCalls[childIndex];\n        const messageIndex = childCall.nextMessageToSend;\n        (_b = (_a = this.getBufferEntry(messageIndex)).callback) === null || _b === void 0 ? void 0 : _b.call(_a);\n        this.clearSentMessages();\n        childCall.nextMessageToSend += 1;\n        this.sendNextChildMessage(childIndex);\n    }\n    sendNextChildMessage(childIndex) {\n        const childCall = this.underlyingCalls[childIndex];\n        if (childCall.state === 'COMPLETED') {\n            return;\n        }\n        if (this.getBufferEntry(childCall.nextMessageToSend)) {\n            const bufferEntry = this.getBufferEntry(childCall.nextMessageToSend);\n            switch (bufferEntry.entryType) {\n                case 'MESSAGE':\n                    childCall.call.sendMessageWithContext({\n                        callback: error => {\n                            // Ignore error\n                            this.handleChildWriteCompleted(childIndex);\n                        },\n                    }, bufferEntry.message.message);\n                    break;\n                case 'HALF_CLOSE':\n                    childCall.nextMessageToSend += 1;\n                    childCall.call.halfClose();\n                    break;\n                case 'FREED':\n                    // Should not be possible\n                    break;\n            }\n        }\n    }\n    sendMessageWithContext(context, message) {\n        var _a;\n        this.trace('write() called with message of length ' + message.length);\n        const writeObj = {\n            message,\n            flags: context.flags,\n        };\n        const messageIndex = this.getNextBufferIndex();\n        const bufferEntry = {\n            entryType: 'MESSAGE',\n            message: writeObj,\n            allocated: this.bufferTracker.allocate(message.length, this.callNumber),\n        };\n        this.writeBuffer.push(bufferEntry);\n        if (bufferEntry.allocated) {\n            (_a = context.callback) === null || _a === void 0 ? void 0 : _a.call(context);\n            for (const [callIndex, call] of this.underlyingCalls.entries()) {\n                if (call.state === 'ACTIVE' &&\n                    call.nextMessageToSend === messageIndex) {\n                    call.call.sendMessageWithContext({\n                        callback: error => {\n                            // Ignore error\n                            this.handleChildWriteCompleted(callIndex);\n                        },\n                    }, message);\n                }\n            }\n        }\n        else {\n            this.commitCallWithMostMessages();\n            // commitCallWithMostMessages can fail if we are between ping attempts\n            if (this.committedCallIndex === null) {\n                return;\n            }\n            const call = this.underlyingCalls[this.committedCallIndex];\n            bufferEntry.callback = context.callback;\n            if (call.state === 'ACTIVE' && call.nextMessageToSend === messageIndex) {\n                call.call.sendMessageWithContext({\n                    callback: error => {\n                        // Ignore error\n                        this.handleChildWriteCompleted(this.committedCallIndex);\n                    },\n                }, message);\n            }\n        }\n    }\n    startRead() {\n        this.trace('startRead called');\n        this.readStarted = true;\n        for (const underlyingCall of this.underlyingCalls) {\n            if ((underlyingCall === null || underlyingCall === void 0 ? void 0 : underlyingCall.state) === 'ACTIVE') {\n                underlyingCall.call.startRead();\n            }\n        }\n    }\n    halfClose() {\n        this.trace('halfClose called');\n        const halfCloseIndex = this.getNextBufferIndex();\n        this.writeBuffer.push({\n            entryType: 'HALF_CLOSE',\n            allocated: false,\n        });\n        for (const call of this.underlyingCalls) {\n            if ((call === null || call === void 0 ? void 0 : call.state) === 'ACTIVE' &&\n                call.nextMessageToSend === halfCloseIndex) {\n                call.nextMessageToSend += 1;\n                call.call.halfClose();\n            }\n        }\n    }\n    setCredentials(newCredentials) {\n        throw new Error('Method not implemented.');\n    }\n    getMethod() {\n        return this.methodName;\n    }\n    getHost() {\n        return this.host;\n    }\n}\nexports.RetryingCall = RetryingCall;\n", "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseSubchannelWrapper = void 0;\nclass BaseSubchannelWrapper {\n    constructor(child) {\n        this.child = child;\n    }\n    getConnectivityState() {\n        return this.child.getConnectivityState();\n    }\n    addConnectivityStateListener(listener) {\n        this.child.addConnectivityStateListener(listener);\n    }\n    removeConnectivityStateListener(listener) {\n        this.child.removeConnectivityStateListener(listener);\n    }\n    startConnecting() {\n        this.child.startConnecting();\n    }\n    getAddress() {\n        return this.child.getAddress();\n    }\n    throttleKeepalive(newKeepaliveTime) {\n        this.child.throttleKeepalive(newKeepaliveTime);\n    }\n    ref() {\n        this.child.ref();\n    }\n    unref() {\n        this.child.unref();\n    }\n    getChannelzRef() {\n        return this.child.getChannelzRef();\n    }\n    getRealSubchannel() {\n        return this.child.getRealSubchannel();\n    }\n    realSubchannelEquals(other) {\n        return this.getRealSubchannel() === other.getRealSubchannel();\n    }\n}\nexports.BaseSubchannelWrapper = BaseSubchannelWrapper;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalChannel = void 0;\nconst channel_credentials_1 = require(\"./channel-credentials\");\nconst resolving_load_balancer_1 = require(\"./resolving-load-balancer\");\nconst subchannel_pool_1 = require(\"./subchannel-pool\");\nconst picker_1 = require(\"./picker\");\nconst constants_1 = require(\"./constants\");\nconst filter_stack_1 = require(\"./filter-stack\");\nconst compression_filter_1 = require(\"./compression-filter\");\nconst resolver_1 = require(\"./resolver\");\nconst logging_1 = require(\"./logging\");\nconst http_proxy_1 = require(\"./http_proxy\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst channelz_1 = require(\"./channelz\");\nconst load_balancing_call_1 = require(\"./load-balancing-call\");\nconst deadline_1 = require(\"./deadline\");\nconst resolving_call_1 = require(\"./resolving-call\");\nconst call_number_1 = require(\"./call-number\");\nconst control_plane_status_1 = require(\"./control-plane-status\");\nconst retrying_call_1 = require(\"./retrying-call\");\nconst subchannel_interface_1 = require(\"./subchannel-interface\");\n/**\n * See https://nodejs.org/api/timers.html#timers_setinterval_callback_delay_args\n */\nconst MAX_TIMEOUT_TIME = 2147483647;\nconst MIN_IDLE_TIMEOUT_MS = 1000;\n// 30 minutes\nconst DEFAULT_IDLE_TIMEOUT_MS = 30 * 60 * 1000;\nconst RETRY_THROTTLER_MAP = new Map();\nconst DEFAULT_RETRY_BUFFER_SIZE_BYTES = 1 << 24; // 16 MB\nconst DEFAULT_PER_RPC_RETRY_BUFFER_SIZE_BYTES = 1 << 20; // 1 MB\nclass ChannelSubchannelWrapper extends subchannel_interface_1.BaseSubchannelWrapper {\n    constructor(childSubchannel, channel) {\n        super(childSubchannel);\n        this.channel = channel;\n        this.refCount = 0;\n        this.subchannelStateListener = (subchannel, previousState, newState, keepaliveTime) => {\n            channel.throttleKeepalive(keepaliveTime);\n        };\n        childSubchannel.addConnectivityStateListener(this.subchannelStateListener);\n    }\n    ref() {\n        this.child.ref();\n        this.refCount += 1;\n    }\n    unref() {\n        this.child.unref();\n        this.refCount -= 1;\n        if (this.refCount <= 0) {\n            this.child.removeConnectivityStateListener(this.subchannelStateListener);\n            this.channel.removeWrappedSubchannel(this);\n        }\n    }\n}\nclass InternalChannel {\n    constructor(target, credentials, options) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this.credentials = credentials;\n        this.options = options;\n        this.connectivityState = connectivity_state_1.ConnectivityState.IDLE;\n        this.currentPicker = new picker_1.UnavailablePicker();\n        /**\n         * Calls queued up to get a call config. Should only be populated before the\n         * first time the resolver returns a result, which includes the ConfigSelector.\n         */\n        this.configSelectionQueue = [];\n        this.pickQueue = [];\n        this.connectivityStateWatchers = [];\n        this.configSelector = null;\n        /**\n         * This is the error from the name resolver if it failed most recently. It\n         * is only used to end calls that start while there is no config selector\n         * and the name resolver is in backoff, so it should be nulled if\n         * configSelector becomes set or the channel state becomes anything other\n         * than TRANSIENT_FAILURE.\n         */\n        this.currentResolutionError = null;\n        this.wrappedSubchannels = new Set();\n        this.callCount = 0;\n        this.idleTimer = null;\n        // Channelz info\n        this.channelzEnabled = true;\n        this.callTracker = new channelz_1.ChannelzCallTracker();\n        this.childrenTracker = new channelz_1.ChannelzChildrenTracker();\n        if (typeof target !== 'string') {\n            throw new TypeError('Channel target must be a string');\n        }\n        if (!(credentials instanceof channel_credentials_1.ChannelCredentials)) {\n            throw new TypeError('Channel credentials must be a ChannelCredentials object');\n        }\n        if (options) {\n            if (typeof options !== 'object') {\n                throw new TypeError('Channel options must be an object');\n            }\n        }\n        this.originalTarget = target;\n        const originalTargetUri = (0, uri_parser_1.parseUri)(target);\n        if (originalTargetUri === null) {\n            throw new Error(`Could not parse target name \"${target}\"`);\n        }\n        /* This ensures that the target has a scheme that is registered with the\n         * resolver */\n        const defaultSchemeMapResult = (0, resolver_1.mapUriDefaultScheme)(originalTargetUri);\n        if (defaultSchemeMapResult === null) {\n            throw new Error(`Could not find a default scheme for target name \"${target}\"`);\n        }\n        this.callRefTimer = setInterval(() => { }, MAX_TIMEOUT_TIME);\n        (_b = (_a = this.callRefTimer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        if (this.options['grpc.enable_channelz'] === 0) {\n            this.channelzEnabled = false;\n        }\n        this.channelzTrace = new channelz_1.ChannelzTrace();\n        this.channelzRef = (0, channelz_1.registerChannelzChannel)(target, () => this.getChannelzInfo(), this.channelzEnabled);\n        if (this.channelzEnabled) {\n            this.channelzTrace.addTrace('CT_INFO', 'Channel created');\n        }\n        if (this.options['grpc.default_authority']) {\n            this.defaultAuthority = this.options['grpc.default_authority'];\n        }\n        else {\n            this.defaultAuthority = (0, resolver_1.getDefaultAuthority)(defaultSchemeMapResult);\n        }\n        const proxyMapResult = (0, http_proxy_1.mapProxyName)(defaultSchemeMapResult, options);\n        this.target = proxyMapResult.target;\n        this.options = Object.assign({}, this.options, proxyMapResult.extraOptions);\n        /* The global boolean parameter to getSubchannelPool has the inverse meaning to what\n         * the grpc.use_local_subchannel_pool channel option means. */\n        this.subchannelPool = (0, subchannel_pool_1.getSubchannelPool)(((_c = options['grpc.use_local_subchannel_pool']) !== null && _c !== void 0 ? _c : 0) === 0);\n        this.retryBufferTracker = new retrying_call_1.MessageBufferTracker((_d = options['grpc.retry_buffer_size']) !== null && _d !== void 0 ? _d : DEFAULT_RETRY_BUFFER_SIZE_BYTES, (_e = options['grpc.per_rpc_retry_buffer_size']) !== null && _e !== void 0 ? _e : DEFAULT_PER_RPC_RETRY_BUFFER_SIZE_BYTES);\n        this.keepaliveTime = (_f = options['grpc.keepalive_time_ms']) !== null && _f !== void 0 ? _f : -1;\n        this.idleTimeoutMs = Math.max((_g = options['grpc.client_idle_timeout_ms']) !== null && _g !== void 0 ? _g : DEFAULT_IDLE_TIMEOUT_MS, MIN_IDLE_TIMEOUT_MS);\n        const channelControlHelper = {\n            createSubchannel: (subchannelAddress, subchannelArgs) => {\n                const subchannel = this.subchannelPool.getOrCreateSubchannel(this.target, subchannelAddress, Object.assign({}, this.options, subchannelArgs), this.credentials);\n                subchannel.throttleKeepalive(this.keepaliveTime);\n                if (this.channelzEnabled) {\n                    this.channelzTrace.addTrace('CT_INFO', 'Created subchannel or used existing subchannel', subchannel.getChannelzRef());\n                }\n                const wrappedSubchannel = new ChannelSubchannelWrapper(subchannel, this);\n                this.wrappedSubchannels.add(wrappedSubchannel);\n                return wrappedSubchannel;\n            },\n            updateState: (connectivityState, picker) => {\n                this.currentPicker = picker;\n                const queueCopy = this.pickQueue.slice();\n                this.pickQueue = [];\n                if (queueCopy.length > 0) {\n                    this.callRefTimerUnref();\n                }\n                for (const call of queueCopy) {\n                    call.doPick();\n                }\n                this.updateState(connectivityState);\n            },\n            requestReresolution: () => {\n                // This should never be called.\n                throw new Error('Resolving load balancer should never call requestReresolution');\n            },\n            addChannelzChild: (child) => {\n                if (this.channelzEnabled) {\n                    this.childrenTracker.refChild(child);\n                }\n            },\n            removeChannelzChild: (child) => {\n                if (this.channelzEnabled) {\n                    this.childrenTracker.unrefChild(child);\n                }\n            },\n        };\n        this.resolvingLoadBalancer = new resolving_load_balancer_1.ResolvingLoadBalancer(this.target, channelControlHelper, options, (serviceConfig, configSelector) => {\n            if (serviceConfig.retryThrottling) {\n                RETRY_THROTTLER_MAP.set(this.getTarget(), new retrying_call_1.RetryThrottler(serviceConfig.retryThrottling.maxTokens, serviceConfig.retryThrottling.tokenRatio, RETRY_THROTTLER_MAP.get(this.getTarget())));\n            }\n            else {\n                RETRY_THROTTLER_MAP.delete(this.getTarget());\n            }\n            if (this.channelzEnabled) {\n                this.channelzTrace.addTrace('CT_INFO', 'Address resolution succeeded');\n            }\n            this.configSelector = configSelector;\n            this.currentResolutionError = null;\n            /* We process the queue asynchronously to ensure that the corresponding\n             * load balancer update has completed. */\n            process.nextTick(() => {\n                const localQueue = this.configSelectionQueue;\n                this.configSelectionQueue = [];\n                if (localQueue.length > 0) {\n                    this.callRefTimerUnref();\n                }\n                for (const call of localQueue) {\n                    call.getConfig();\n                }\n            });\n        }, status => {\n            if (this.channelzEnabled) {\n                this.channelzTrace.addTrace('CT_WARNING', 'Address resolution failed with code ' +\n                    status.code +\n                    ' and details \"' +\n                    status.details +\n                    '\"');\n            }\n            if (this.configSelectionQueue.length > 0) {\n                this.trace('Name resolution failed with calls queued for config selection');\n            }\n            if (this.configSelector === null) {\n                this.currentResolutionError = Object.assign(Object.assign({}, (0, control_plane_status_1.restrictControlPlaneStatusCode)(status.code, status.details)), { metadata: status.metadata });\n            }\n            const localQueue = this.configSelectionQueue;\n            this.configSelectionQueue = [];\n            if (localQueue.length > 0) {\n                this.callRefTimerUnref();\n            }\n            for (const call of localQueue) {\n                call.reportResolverError(status);\n            }\n        });\n        this.filterStackFactory = new filter_stack_1.FilterStackFactory([\n            new compression_filter_1.CompressionFilterFactory(this, this.options),\n        ]);\n        this.trace('Channel constructed with options ' +\n            JSON.stringify(options, undefined, 2));\n        const error = new Error();\n        (0, logging_1.trace)(constants_1.LogVerbosity.DEBUG, 'channel_stacktrace', '(' +\n            this.channelzRef.id +\n            ') ' +\n            'Channel constructed \\n' +\n            ((_h = error.stack) === null || _h === void 0 ? void 0 : _h.substring(error.stack.indexOf('\\n') + 1)));\n        this.lastActivityTimestamp = new Date();\n    }\n    getChannelzInfo() {\n        return {\n            target: this.originalTarget,\n            state: this.connectivityState,\n            trace: this.channelzTrace,\n            callTracker: this.callTracker,\n            children: this.childrenTracker.getChildLists(),\n        };\n    }\n    trace(text, verbosityOverride) {\n        (0, logging_1.trace)(verbosityOverride !== null && verbosityOverride !== void 0 ? verbosityOverride : constants_1.LogVerbosity.DEBUG, 'channel', '(' + this.channelzRef.id + ') ' + (0, uri_parser_1.uriToString)(this.target) + ' ' + text);\n    }\n    callRefTimerRef() {\n        var _a, _b, _c, _d;\n        // If the hasRef function does not exist, always run the code\n        if (!((_b = (_a = this.callRefTimer).hasRef) === null || _b === void 0 ? void 0 : _b.call(_a))) {\n            this.trace('callRefTimer.ref | configSelectionQueue.length=' +\n                this.configSelectionQueue.length +\n                ' pickQueue.length=' +\n                this.pickQueue.length);\n            (_d = (_c = this.callRefTimer).ref) === null || _d === void 0 ? void 0 : _d.call(_c);\n        }\n    }\n    callRefTimerUnref() {\n        var _a, _b;\n        // If the hasRef function does not exist, always run the code\n        if (!this.callRefTimer.hasRef || this.callRefTimer.hasRef()) {\n            this.trace('callRefTimer.unref | configSelectionQueue.length=' +\n                this.configSelectionQueue.length +\n                ' pickQueue.length=' +\n                this.pickQueue.length);\n            (_b = (_a = this.callRefTimer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n    }\n    removeConnectivityStateWatcher(watcherObject) {\n        const watcherIndex = this.connectivityStateWatchers.findIndex(value => value === watcherObject);\n        if (watcherIndex >= 0) {\n            this.connectivityStateWatchers.splice(watcherIndex, 1);\n        }\n    }\n    updateState(newState) {\n        (0, logging_1.trace)(constants_1.LogVerbosity.DEBUG, 'connectivity_state', '(' +\n            this.channelzRef.id +\n            ') ' +\n            (0, uri_parser_1.uriToString)(this.target) +\n            ' ' +\n            connectivity_state_1.ConnectivityState[this.connectivityState] +\n            ' -> ' +\n            connectivity_state_1.ConnectivityState[newState]);\n        if (this.channelzEnabled) {\n            this.channelzTrace.addTrace('CT_INFO', 'Connectivity state change to ' + connectivity_state_1.ConnectivityState[newState]);\n        }\n        this.connectivityState = newState;\n        const watchersCopy = this.connectivityStateWatchers.slice();\n        for (const watcherObject of watchersCopy) {\n            if (newState !== watcherObject.currentState) {\n                if (watcherObject.timer) {\n                    clearTimeout(watcherObject.timer);\n                }\n                this.removeConnectivityStateWatcher(watcherObject);\n                watcherObject.callback();\n            }\n        }\n        if (newState !== connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n            this.currentResolutionError = null;\n        }\n    }\n    throttleKeepalive(newKeepaliveTime) {\n        if (newKeepaliveTime > this.keepaliveTime) {\n            this.keepaliveTime = newKeepaliveTime;\n            for (const wrappedSubchannel of this.wrappedSubchannels) {\n                wrappedSubchannel.throttleKeepalive(newKeepaliveTime);\n            }\n        }\n    }\n    removeWrappedSubchannel(wrappedSubchannel) {\n        this.wrappedSubchannels.delete(wrappedSubchannel);\n    }\n    doPick(metadata, extraPickInfo) {\n        return this.currentPicker.pick({\n            metadata: metadata,\n            extraPickInfo: extraPickInfo,\n        });\n    }\n    queueCallForPick(call) {\n        this.pickQueue.push(call);\n        this.callRefTimerRef();\n    }\n    getConfig(method, metadata) {\n        this.resolvingLoadBalancer.exitIdle();\n        if (this.configSelector) {\n            return {\n                type: 'SUCCESS',\n                config: this.configSelector(method, metadata),\n            };\n        }\n        else {\n            if (this.currentResolutionError) {\n                return {\n                    type: 'ERROR',\n                    error: this.currentResolutionError,\n                };\n            }\n            else {\n                return {\n                    type: 'NONE',\n                };\n            }\n        }\n    }\n    queueCallForConfig(call) {\n        this.configSelectionQueue.push(call);\n        this.callRefTimerRef();\n    }\n    enterIdle() {\n        this.resolvingLoadBalancer.destroy();\n        this.updateState(connectivity_state_1.ConnectivityState.IDLE);\n        this.currentPicker = new picker_1.QueuePicker(this.resolvingLoadBalancer);\n        if (this.idleTimer) {\n            clearTimeout(this.idleTimer);\n            this.idleTimer = null;\n        }\n    }\n    startIdleTimeout(timeoutMs) {\n        var _a, _b;\n        this.idleTimer = setTimeout(() => {\n            if (this.callCount > 0) {\n                /* If there is currently a call, the channel will not go idle for a\n                 * period of at least idleTimeoutMs, so check again after that time.\n                 */\n                this.startIdleTimeout(this.idleTimeoutMs);\n                return;\n            }\n            const now = new Date();\n            const timeSinceLastActivity = now.valueOf() - this.lastActivityTimestamp.valueOf();\n            if (timeSinceLastActivity >= this.idleTimeoutMs) {\n                this.trace('Idle timer triggered after ' +\n                    this.idleTimeoutMs +\n                    'ms of inactivity');\n                this.enterIdle();\n            }\n            else {\n                /* Whenever the timer fires with the latest activity being too recent,\n                 * set the timer again for the time when the time since the last\n                 * activity is equal to the timeout. This should result in the timer\n                 * firing no more than once every idleTimeoutMs/2 on average. */\n                this.startIdleTimeout(this.idleTimeoutMs - timeSinceLastActivity);\n            }\n        }, timeoutMs);\n        (_b = (_a = this.idleTimer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    maybeStartIdleTimer() {\n        if (this.connectivityState !== connectivity_state_1.ConnectivityState.SHUTDOWN && !this.idleTimer) {\n            this.startIdleTimeout(this.idleTimeoutMs);\n        }\n    }\n    onCallStart() {\n        if (this.channelzEnabled) {\n            this.callTracker.addCallStarted();\n        }\n        this.callCount += 1;\n    }\n    onCallEnd(status) {\n        if (this.channelzEnabled) {\n            if (status.code === constants_1.Status.OK) {\n                this.callTracker.addCallSucceeded();\n            }\n            else {\n                this.callTracker.addCallFailed();\n            }\n        }\n        this.callCount -= 1;\n        this.lastActivityTimestamp = new Date();\n        this.maybeStartIdleTimer();\n    }\n    createLoadBalancingCall(callConfig, method, host, credentials, deadline) {\n        const callNumber = (0, call_number_1.getNextCallNumber)();\n        this.trace('createLoadBalancingCall [' + callNumber + '] method=\"' + method + '\"');\n        return new load_balancing_call_1.LoadBalancingCall(this, callConfig, method, host, credentials, deadline, callNumber);\n    }\n    createRetryingCall(callConfig, method, host, credentials, deadline) {\n        const callNumber = (0, call_number_1.getNextCallNumber)();\n        this.trace('createRetryingCall [' + callNumber + '] method=\"' + method + '\"');\n        return new retrying_call_1.RetryingCall(this, callConfig, method, host, credentials, deadline, callNumber, this.retryBufferTracker, RETRY_THROTTLER_MAP.get(this.getTarget()));\n    }\n    createInnerCall(callConfig, method, host, credentials, deadline) {\n        // Create a RetryingCall if retries are enabled\n        if (this.options['grpc.enable_retries'] === 0) {\n            return this.createLoadBalancingCall(callConfig, method, host, credentials, deadline);\n        }\n        else {\n            return this.createRetryingCall(callConfig, method, host, credentials, deadline);\n        }\n    }\n    createResolvingCall(method, deadline, host, parentCall, propagateFlags) {\n        const callNumber = (0, call_number_1.getNextCallNumber)();\n        this.trace('createResolvingCall [' +\n            callNumber +\n            '] method=\"' +\n            method +\n            '\", deadline=' +\n            (0, deadline_1.deadlineToString)(deadline));\n        const finalOptions = {\n            deadline: deadline,\n            flags: propagateFlags !== null && propagateFlags !== void 0 ? propagateFlags : constants_1.Propagate.DEFAULTS,\n            host: host !== null && host !== void 0 ? host : this.defaultAuthority,\n            parentCall: parentCall,\n        };\n        const call = new resolving_call_1.ResolvingCall(this, method, finalOptions, this.filterStackFactory.clone(), this.credentials._getCallCredentials(), callNumber);\n        this.onCallStart();\n        call.addStatusWatcher(status => {\n            this.onCallEnd(status);\n        });\n        return call;\n    }\n    close() {\n        this.resolvingLoadBalancer.destroy();\n        this.updateState(connectivity_state_1.ConnectivityState.SHUTDOWN);\n        clearInterval(this.callRefTimer);\n        if (this.idleTimer) {\n            clearTimeout(this.idleTimer);\n        }\n        if (this.channelzEnabled) {\n            (0, channelz_1.unregisterChannelzRef)(this.channelzRef);\n        }\n        this.subchannelPool.unrefUnusedSubchannels();\n    }\n    getTarget() {\n        return (0, uri_parser_1.uriToString)(this.target);\n    }\n    getConnectivityState(tryToConnect) {\n        const connectivityState = this.connectivityState;\n        if (tryToConnect) {\n            this.resolvingLoadBalancer.exitIdle();\n            this.lastActivityTimestamp = new Date();\n            this.maybeStartIdleTimer();\n        }\n        return connectivityState;\n    }\n    watchConnectivityState(currentState, deadline, callback) {\n        if (this.connectivityState === connectivity_state_1.ConnectivityState.SHUTDOWN) {\n            throw new Error('Channel has been shut down');\n        }\n        let timer = null;\n        if (deadline !== Infinity) {\n            const deadlineDate = deadline instanceof Date ? deadline : new Date(deadline);\n            const now = new Date();\n            if (deadline === -Infinity || deadlineDate <= now) {\n                process.nextTick(callback, new Error('Deadline passed without connectivity state change'));\n                return;\n            }\n            timer = setTimeout(() => {\n                this.removeConnectivityStateWatcher(watcherObject);\n                callback(new Error('Deadline passed without connectivity state change'));\n            }, deadlineDate.getTime() - now.getTime());\n        }\n        const watcherObject = {\n            currentState,\n            callback,\n            timer,\n        };\n        this.connectivityStateWatchers.push(watcherObject);\n    }\n    /**\n     * Get the channelz reference object for this channel. The returned value is\n     * garbage if channelz is disabled for this channel.\n     * @returns\n     */\n    getChannelzRef() {\n        return this.channelzRef;\n    }\n    createCall(method, deadline, host, parentCall, propagateFlags) {\n        if (typeof method !== 'string') {\n            throw new TypeError('Channel#createCall: method must be a string');\n        }\n        if (!(typeof deadline === 'number' || deadline instanceof Date)) {\n            throw new TypeError('Channel#createCall: deadline must be a number or Date');\n        }\n        if (this.connectivityState === connectivity_state_1.ConnectivityState.SHUTDOWN) {\n            throw new Error('Channel has been shut down');\n        }\n        return this.createResolvingCall(method, deadline, host, parentCall, propagateFlags);\n    }\n}\nexports.InternalChannel = InternalChannel;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChannelImplementation = void 0;\nconst channel_credentials_1 = require(\"./channel-credentials\");\nconst internal_channel_1 = require(\"./internal-channel\");\nclass ChannelImplementation {\n    constructor(target, credentials, options) {\n        if (typeof target !== 'string') {\n            throw new TypeError('Channel target must be a string');\n        }\n        if (!(credentials instanceof channel_credentials_1.ChannelCredentials)) {\n            throw new TypeError('Channel credentials must be a ChannelCredentials object');\n        }\n        if (options) {\n            if (typeof options !== 'object') {\n                throw new TypeError('Channel options must be an object');\n            }\n        }\n        this.internalChannel = new internal_channel_1.InternalChannel(target, credentials, options);\n    }\n    close() {\n        this.internalChannel.close();\n    }\n    getTarget() {\n        return this.internalChannel.getTarget();\n    }\n    getConnectivityState(tryToConnect) {\n        return this.internalChannel.getConnectivityState(tryToConnect);\n    }\n    watchConnectivityState(currentState, deadline, callback) {\n        this.internalChannel.watchConnectivityState(currentState, deadline, callback);\n    }\n    /**\n     * Get the channelz reference object for this channel. The returned value is\n     * garbage if channelz is disabled for this channel.\n     * @returns\n     */\n    getChannelzRef() {\n        return this.internalChannel.getChannelzRef();\n    }\n    createCall(method, deadline, host, parentCall, propagateFlags) {\n        if (typeof method !== 'string') {\n            throw new TypeError('Channel#createCall: method must be a string');\n        }\n        if (!(typeof deadline === 'number' || deadline instanceof Date)) {\n            throw new TypeError('Channel#createCall: deadline must be a number or Date');\n        }\n        return this.internalChannel.createCall(method, deadline, host, parentCall, propagateFlags);\n    }\n}\nexports.ChannelImplementation = ChannelImplementation;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Http2ServerCallStream = exports.ServerDuplexStreamImpl = exports.ServerWritableStreamImpl = exports.ServerReadableStreamImpl = exports.ServerUnaryCallImpl = void 0;\nconst events_1 = require(\"events\");\nconst http2 = require(\"http2\");\nconst stream_1 = require(\"stream\");\nconst zlib = require(\"zlib\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst stream_decoder_1 = require(\"./stream-decoder\");\nconst logging = require(\"./logging\");\nconst error_1 = require(\"./error\");\nconst TRACER_NAME = 'server_call';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nconst GRPC_ACCEPT_ENCODING_HEADER = 'grpc-accept-encoding';\nconst GRPC_ENCODING_HEADER = 'grpc-encoding';\nconst GRPC_MESSAGE_HEADER = 'grpc-message';\nconst GRPC_STATUS_HEADER = 'grpc-status';\nconst GRPC_TIMEOUT_HEADER = 'grpc-timeout';\nconst DEADLINE_REGEX = /(\\d{1,8})\\s*([HMSmun])/;\nconst deadlineUnitsToMs = {\n    H: 3600000,\n    M: 60000,\n    S: 1000,\n    m: 1,\n    u: 0.001,\n    n: 0.000001,\n};\nconst defaultCompressionHeaders = {\n    // TODO(cjihrig): Remove these encoding headers from the default response\n    // once compression is integrated.\n    [GRPC_ACCEPT_ENCODING_HEADER]: 'identity,deflate,gzip',\n    [GRPC_ENCODING_HEADER]: 'identity',\n};\nconst defaultResponseHeaders = {\n    [http2.constants.HTTP2_HEADER_STATUS]: http2.constants.HTTP_STATUS_OK,\n    [http2.constants.HTTP2_HEADER_CONTENT_TYPE]: 'application/grpc+proto',\n};\nconst defaultResponseOptions = {\n    waitForTrailers: true,\n};\nclass ServerUnaryCallImpl extends events_1.EventEmitter {\n    constructor(call, metadata, request) {\n        super();\n        this.call = call;\n        this.metadata = metadata;\n        this.request = request;\n        this.cancelled = false;\n        this.call.setupSurfaceCall(this);\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    sendMetadata(responseMetadata) {\n        this.call.sendMetadata(responseMetadata);\n    }\n    getDeadline() {\n        return this.call.getDeadline();\n    }\n    getPath() {\n        return this.call.getPath();\n    }\n}\nexports.ServerUnaryCallImpl = ServerUnaryCallImpl;\nclass ServerReadableStreamImpl extends stream_1.Readable {\n    constructor(call, metadata, deserialize, encoding) {\n        super({ objectMode: true });\n        this.call = call;\n        this.metadata = metadata;\n        this.deserialize = deserialize;\n        this.cancelled = false;\n        this.call.setupSurfaceCall(this);\n        this.call.setupReadable(this, encoding);\n    }\n    _read(size) {\n        if (!this.call.consumeUnpushedMessages(this)) {\n            return;\n        }\n        this.call.resume();\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    sendMetadata(responseMetadata) {\n        this.call.sendMetadata(responseMetadata);\n    }\n    getDeadline() {\n        return this.call.getDeadline();\n    }\n    getPath() {\n        return this.call.getPath();\n    }\n}\nexports.ServerReadableStreamImpl = ServerReadableStreamImpl;\nclass ServerWritableStreamImpl extends stream_1.Writable {\n    constructor(call, metadata, serialize, request) {\n        super({ objectMode: true });\n        this.call = call;\n        this.metadata = metadata;\n        this.serialize = serialize;\n        this.request = request;\n        this.cancelled = false;\n        this.trailingMetadata = new metadata_1.Metadata();\n        this.call.setupSurfaceCall(this);\n        this.on('error', err => {\n            this.call.sendError(err);\n            this.end();\n        });\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    sendMetadata(responseMetadata) {\n        this.call.sendMetadata(responseMetadata);\n    }\n    getDeadline() {\n        return this.call.getDeadline();\n    }\n    getPath() {\n        return this.call.getPath();\n    }\n    _write(chunk, encoding, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callback) {\n        try {\n            const response = this.call.serializeMessage(chunk);\n            if (!this.call.write(response)) {\n                this.call.once('drain', callback);\n                return;\n            }\n        }\n        catch (err) {\n            this.emit('error', {\n                details: (0, error_1.getErrorMessage)(err),\n                code: constants_1.Status.INTERNAL,\n            });\n        }\n        callback();\n    }\n    _final(callback) {\n        this.call.sendStatus({\n            code: constants_1.Status.OK,\n            details: 'OK',\n            metadata: this.trailingMetadata,\n        });\n        callback(null);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    end(metadata) {\n        if (metadata) {\n            this.trailingMetadata = metadata;\n        }\n        return super.end();\n    }\n}\nexports.ServerWritableStreamImpl = ServerWritableStreamImpl;\nclass ServerDuplexStreamImpl extends stream_1.Duplex {\n    constructor(call, metadata, serialize, deserialize, encoding) {\n        super({ objectMode: true });\n        this.call = call;\n        this.metadata = metadata;\n        this.serialize = serialize;\n        this.deserialize = deserialize;\n        this.cancelled = false;\n        this.trailingMetadata = new metadata_1.Metadata();\n        this.call.setupSurfaceCall(this);\n        this.call.setupReadable(this, encoding);\n        this.on('error', err => {\n            this.call.sendError(err);\n            this.end();\n        });\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    sendMetadata(responseMetadata) {\n        this.call.sendMetadata(responseMetadata);\n    }\n    getDeadline() {\n        return this.call.getDeadline();\n    }\n    getPath() {\n        return this.call.getPath();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    end(metadata) {\n        if (metadata) {\n            this.trailingMetadata = metadata;\n        }\n        return super.end();\n    }\n}\nexports.ServerDuplexStreamImpl = ServerDuplexStreamImpl;\nServerDuplexStreamImpl.prototype._read =\n    ServerReadableStreamImpl.prototype._read;\nServerDuplexStreamImpl.prototype._write =\n    ServerWritableStreamImpl.prototype._write;\nServerDuplexStreamImpl.prototype._final =\n    ServerWritableStreamImpl.prototype._final;\n// Internal class that wraps the HTTP2 request.\nclass Http2ServerCallStream extends events_1.EventEmitter {\n    constructor(stream, handler, options) {\n        super();\n        this.stream = stream;\n        this.handler = handler;\n        this.cancelled = false;\n        this.deadlineTimer = null;\n        this.statusSent = false;\n        this.deadline = Infinity;\n        this.wantTrailers = false;\n        this.metadataSent = false;\n        this.canPush = false;\n        this.isPushPending = false;\n        this.bufferedMessages = [];\n        this.messagesToPush = [];\n        this.maxSendMessageSize = constants_1.DEFAULT_MAX_SEND_MESSAGE_LENGTH;\n        this.maxReceiveMessageSize = constants_1.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH;\n        this.stream.once('error', (err) => {\n            /* We need an error handler to avoid uncaught error event exceptions, but\n             * there is nothing we can reasonably do here. Any error event should\n             * have a corresponding close event, which handles emitting the cancelled\n             * event. And the stream is now in a bad state, so we can't reasonably\n             * expect to be able to send an error over it. */\n        });\n        this.stream.once('close', () => {\n            var _a;\n            trace('Request to method ' +\n                ((_a = this.handler) === null || _a === void 0 ? void 0 : _a.path) +\n                ' stream closed with rstCode ' +\n                this.stream.rstCode);\n            if (!this.statusSent) {\n                this.cancelled = true;\n                this.emit('cancelled', 'cancelled');\n                this.emit('streamEnd', false);\n                this.sendStatus({\n                    code: constants_1.Status.CANCELLED,\n                    details: 'Cancelled by client',\n                    metadata: null,\n                });\n                if (this.deadlineTimer)\n                    clearTimeout(this.deadlineTimer);\n            }\n        });\n        this.stream.on('drain', () => {\n            this.emit('drain');\n        });\n        if ('grpc.max_send_message_length' in options) {\n            this.maxSendMessageSize = options['grpc.max_send_message_length'];\n        }\n        if ('grpc.max_receive_message_length' in options) {\n            this.maxReceiveMessageSize = options['grpc.max_receive_message_length'];\n        }\n    }\n    checkCancelled() {\n        /* In some cases the stream can become destroyed before the close event\n         * fires. That creates a race condition that this check works around */\n        if (this.stream.destroyed || this.stream.closed) {\n            this.cancelled = true;\n        }\n        return this.cancelled;\n    }\n    getDecompressedMessage(message, encoding) {\n        const messageContents = message.subarray(5);\n        if (encoding === 'identity') {\n            return messageContents;\n        }\n        else if (encoding === 'deflate' || encoding === 'gzip') {\n            let decompresser;\n            if (encoding === 'deflate') {\n                decompresser = zlib.createInflate();\n            }\n            else {\n                decompresser = zlib.createGunzip();\n            }\n            return new Promise((resolve, reject) => {\n                let totalLength = 0;\n                const messageParts = [];\n                decompresser.on('data', (chunk) => {\n                    messageParts.push(chunk);\n                    totalLength += chunk.byteLength;\n                    if (this.maxReceiveMessageSize !== -1 && totalLength > this.maxReceiveMessageSize) {\n                        decompresser.destroy();\n                        reject({\n                            code: constants_1.Status.RESOURCE_EXHAUSTED,\n                            details: `Received message that decompresses to a size larger than ${this.maxReceiveMessageSize}`\n                        });\n                    }\n                });\n                decompresser.on('end', () => {\n                    resolve(Buffer.concat(messageParts));\n                });\n                decompresser.write(messageContents);\n                decompresser.end();\n            });\n        }\n        else {\n            return Promise.reject({\n                code: constants_1.Status.UNIMPLEMENTED,\n                details: `Received message compressed with unsupported encoding \"${encoding}\"`,\n            });\n        }\n    }\n    sendMetadata(customMetadata) {\n        if (this.checkCancelled()) {\n            return;\n        }\n        if (this.metadataSent) {\n            return;\n        }\n        this.metadataSent = true;\n        const custom = customMetadata ? customMetadata.toHttp2Headers() : null;\n        // TODO(cjihrig): Include compression headers.\n        const headers = Object.assign(Object.assign(Object.assign({}, defaultResponseHeaders), defaultCompressionHeaders), custom);\n        this.stream.respond(headers, defaultResponseOptions);\n    }\n    receiveMetadata(headers) {\n        const metadata = metadata_1.Metadata.fromHttp2Headers(headers);\n        if (logging.isTracerEnabled(TRACER_NAME)) {\n            trace('Request to ' +\n                this.handler.path +\n                ' received headers ' +\n                JSON.stringify(metadata.toJSON()));\n        }\n        // TODO(cjihrig): Receive compression metadata.\n        const timeoutHeader = metadata.get(GRPC_TIMEOUT_HEADER);\n        if (timeoutHeader.length > 0) {\n            const match = timeoutHeader[0].toString().match(DEADLINE_REGEX);\n            if (match === null) {\n                const err = new Error('Invalid deadline');\n                err.code = constants_1.Status.OUT_OF_RANGE;\n                this.sendError(err);\n                return metadata;\n            }\n            const timeout = (+match[1] * deadlineUnitsToMs[match[2]]) | 0;\n            const now = new Date();\n            this.deadline = now.setMilliseconds(now.getMilliseconds() + timeout);\n            this.deadlineTimer = setTimeout(handleExpiredDeadline, timeout, this);\n            metadata.remove(GRPC_TIMEOUT_HEADER);\n        }\n        // Remove several headers that should not be propagated to the application\n        metadata.remove(http2.constants.HTTP2_HEADER_ACCEPT_ENCODING);\n        metadata.remove(http2.constants.HTTP2_HEADER_TE);\n        metadata.remove(http2.constants.HTTP2_HEADER_CONTENT_TYPE);\n        metadata.remove('grpc-accept-encoding');\n        return metadata;\n    }\n    receiveUnaryMessage(encoding) {\n        return new Promise((resolve, reject) => {\n            const { stream } = this;\n            let receivedLength = 0;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const call = this;\n            const body = [];\n            const limit = this.maxReceiveMessageSize;\n            this.stream.on('data', onData);\n            this.stream.on('end', onEnd);\n            this.stream.on('error', onEnd);\n            function onData(chunk) {\n                receivedLength += chunk.byteLength;\n                if (limit !== -1 && receivedLength > limit) {\n                    stream.removeListener('data', onData);\n                    stream.removeListener('end', onEnd);\n                    stream.removeListener('error', onEnd);\n                    reject({\n                        code: constants_1.Status.RESOURCE_EXHAUSTED,\n                        details: `Received message larger than max (${receivedLength} vs. ${limit})`,\n                    });\n                    return;\n                }\n                body.push(chunk);\n            }\n            function onEnd(err) {\n                stream.removeListener('data', onData);\n                stream.removeListener('end', onEnd);\n                stream.removeListener('error', onEnd);\n                if (err !== undefined) {\n                    reject({ code: constants_1.Status.INTERNAL, details: err.message });\n                    return;\n                }\n                if (receivedLength === 0) {\n                    reject({\n                        code: constants_1.Status.INTERNAL,\n                        details: 'received empty unary message',\n                    });\n                    return;\n                }\n                call.emit('receiveMessage');\n                const requestBytes = Buffer.concat(body, receivedLength);\n                const compressed = requestBytes.readUInt8(0) === 1;\n                const compressedMessageEncoding = compressed ? encoding : 'identity';\n                const decompressedMessage = call.getDecompressedMessage(requestBytes, compressedMessageEncoding);\n                if (Buffer.isBuffer(decompressedMessage)) {\n                    resolve(call.deserializeMessageWithInternalError(decompressedMessage));\n                    return;\n                }\n                decompressedMessage.then(decompressed => resolve(call.deserializeMessageWithInternalError(decompressed)), (err) => reject(err.code\n                    ? err\n                    : {\n                        code: constants_1.Status.INTERNAL,\n                        details: `Received \"grpc-encoding\" header \"${encoding}\" but ${encoding} decompression failed`,\n                    }));\n            }\n        });\n    }\n    async deserializeMessageWithInternalError(buffer) {\n        try {\n            return this.deserializeMessage(buffer);\n        }\n        catch (err) {\n            throw {\n                details: (0, error_1.getErrorMessage)(err),\n                code: constants_1.Status.INTERNAL,\n            };\n        }\n    }\n    serializeMessage(value) {\n        const messageBuffer = this.handler.serialize(value);\n        // TODO(cjihrig): Call compression aware serializeMessage().\n        const byteLength = messageBuffer.byteLength;\n        const output = Buffer.allocUnsafe(byteLength + 5);\n        output.writeUInt8(0, 0);\n        output.writeUInt32BE(byteLength, 1);\n        messageBuffer.copy(output, 5);\n        return output;\n    }\n    deserializeMessage(bytes) {\n        return this.handler.deserialize(bytes);\n    }\n    async sendUnaryMessage(err, value, metadata, flags) {\n        if (this.checkCancelled()) {\n            return;\n        }\n        if (metadata === undefined) {\n            metadata = null;\n        }\n        if (err) {\n            if (!Object.prototype.hasOwnProperty.call(err, 'metadata') && metadata) {\n                err.metadata = metadata;\n            }\n            this.sendError(err);\n            return;\n        }\n        try {\n            const response = this.serializeMessage(value);\n            this.write(response);\n            this.sendStatus({ code: constants_1.Status.OK, details: 'OK', metadata });\n        }\n        catch (err) {\n            this.sendError({\n                details: (0, error_1.getErrorMessage)(err),\n                code: constants_1.Status.INTERNAL,\n            });\n        }\n    }\n    sendStatus(statusObj) {\n        var _a, _b;\n        this.emit('callEnd', statusObj.code);\n        this.emit('streamEnd', statusObj.code === constants_1.Status.OK);\n        if (this.checkCancelled()) {\n            return;\n        }\n        trace('Request to method ' +\n            ((_a = this.handler) === null || _a === void 0 ? void 0 : _a.path) +\n            ' ended with status code: ' +\n            constants_1.Status[statusObj.code] +\n            ' details: ' +\n            statusObj.details);\n        if (this.deadlineTimer)\n            clearTimeout(this.deadlineTimer);\n        if (this.stream.headersSent) {\n            if (!this.wantTrailers) {\n                this.wantTrailers = true;\n                this.stream.once('wantTrailers', () => {\n                    var _a;\n                    const trailersToSend = Object.assign({ [GRPC_STATUS_HEADER]: statusObj.code, [GRPC_MESSAGE_HEADER]: encodeURI(statusObj.details) }, (_a = statusObj.metadata) === null || _a === void 0 ? void 0 : _a.toHttp2Headers());\n                    this.stream.sendTrailers(trailersToSend);\n                    this.statusSent = true;\n                });\n                this.stream.end();\n            }\n        }\n        else {\n            // Trailers-only response\n            const trailersToSend = Object.assign(Object.assign({ [GRPC_STATUS_HEADER]: statusObj.code, [GRPC_MESSAGE_HEADER]: encodeURI(statusObj.details) }, defaultResponseHeaders), (_b = statusObj.metadata) === null || _b === void 0 ? void 0 : _b.toHttp2Headers());\n            this.stream.respond(trailersToSend, { endStream: true });\n            this.statusSent = true;\n        }\n    }\n    sendError(error) {\n        const status = {\n            code: constants_1.Status.UNKNOWN,\n            details: 'message' in error ? error.message : 'Unknown Error',\n            metadata: 'metadata' in error && error.metadata !== undefined\n                ? error.metadata\n                : null,\n        };\n        if ('code' in error &&\n            typeof error.code === 'number' &&\n            Number.isInteger(error.code)) {\n            status.code = error.code;\n            if ('details' in error && typeof error.details === 'string') {\n                status.details = error.details;\n            }\n        }\n        this.sendStatus(status);\n    }\n    write(chunk) {\n        if (this.checkCancelled()) {\n            return;\n        }\n        if (this.maxSendMessageSize !== -1 &&\n            chunk.length > this.maxSendMessageSize) {\n            this.sendError({\n                code: constants_1.Status.RESOURCE_EXHAUSTED,\n                details: `Sent message larger than max (${chunk.length} vs. ${this.maxSendMessageSize})`,\n            });\n            return;\n        }\n        this.sendMetadata();\n        this.emit('sendMessage');\n        return this.stream.write(chunk);\n    }\n    resume() {\n        this.stream.resume();\n    }\n    setupSurfaceCall(call) {\n        this.once('cancelled', reason => {\n            call.cancelled = true;\n            call.emit('cancelled', reason);\n        });\n        this.once('callEnd', status => call.emit('callEnd', status));\n    }\n    setupReadable(readable, encoding) {\n        const decoder = new stream_decoder_1.StreamDecoder(this.maxReceiveMessageSize);\n        let readsDone = false;\n        let pendingMessageProcessing = false;\n        let pushedEnd = false;\n        const maybePushEnd = async () => {\n            if (!pushedEnd && readsDone && !pendingMessageProcessing) {\n                pushedEnd = true;\n                await this.pushOrBufferMessage(readable, null);\n            }\n        };\n        this.stream.on('data', async (data) => {\n            let messages;\n            try {\n                messages = decoder.write(data);\n            }\n            catch (e) {\n                this.sendError({\n                    code: constants_1.Status.RESOURCE_EXHAUSTED,\n                    details: e.message\n                });\n                return;\n            }\n            pendingMessageProcessing = true;\n            this.stream.pause();\n            for (const message of messages) {\n                this.emit('receiveMessage');\n                const compressed = message.readUInt8(0) === 1;\n                const compressedMessageEncoding = compressed ? encoding : 'identity';\n                let decompressedMessage;\n                try {\n                    decompressedMessage = await this.getDecompressedMessage(message, compressedMessageEncoding);\n                }\n                catch (e) {\n                    this.sendError(e);\n                    return;\n                }\n                // Encountered an error with decompression; it'll already have been propogated back\n                // Just return early\n                if (!decompressedMessage)\n                    return;\n                await this.pushOrBufferMessage(readable, decompressedMessage);\n            }\n            pendingMessageProcessing = false;\n            this.stream.resume();\n            await maybePushEnd();\n        });\n        this.stream.once('end', async () => {\n            readsDone = true;\n            await maybePushEnd();\n        });\n    }\n    consumeUnpushedMessages(readable) {\n        this.canPush = true;\n        while (this.messagesToPush.length > 0) {\n            const nextMessage = this.messagesToPush.shift();\n            const canPush = readable.push(nextMessage);\n            if (nextMessage === null || canPush === false) {\n                this.canPush = false;\n                break;\n            }\n        }\n        return this.canPush;\n    }\n    async pushOrBufferMessage(readable, messageBytes) {\n        if (this.isPushPending) {\n            this.bufferedMessages.push(messageBytes);\n        }\n        else {\n            await this.pushMessage(readable, messageBytes);\n        }\n    }\n    async pushMessage(readable, messageBytes) {\n        if (messageBytes === null) {\n            trace('Received end of stream');\n            if (this.canPush) {\n                readable.push(null);\n            }\n            else {\n                this.messagesToPush.push(null);\n            }\n            return;\n        }\n        trace('Received message of length ' + messageBytes.length);\n        this.isPushPending = true;\n        try {\n            const deserialized = await this.deserializeMessage(messageBytes);\n            if (this.canPush) {\n                if (!readable.push(deserialized)) {\n                    this.canPush = false;\n                    this.stream.pause();\n                }\n            }\n            else {\n                this.messagesToPush.push(deserialized);\n            }\n        }\n        catch (error) {\n            // Ignore any remaining messages when errors occur.\n            this.bufferedMessages.length = 0;\n            let code = (0, error_1.getErrorCode)(error);\n            if (code === null || code < constants_1.Status.OK || code > constants_1.Status.UNAUTHENTICATED) {\n                code = constants_1.Status.INTERNAL;\n            }\n            readable.emit('error', {\n                details: (0, error_1.getErrorMessage)(error),\n                code: code,\n            });\n        }\n        this.isPushPending = false;\n        if (this.bufferedMessages.length > 0) {\n            await this.pushMessage(readable, this.bufferedMessages.shift());\n        }\n    }\n    getPeer() {\n        var _a;\n        const socket = (_a = this.stream.session) === null || _a === void 0 ? void 0 : _a.socket;\n        if (socket === null || socket === void 0 ? void 0 : socket.remoteAddress) {\n            if (socket.remotePort) {\n                return `${socket.remoteAddress}:${socket.remotePort}`;\n            }\n            else {\n                return socket.remoteAddress;\n            }\n        }\n        else {\n            return 'unknown';\n        }\n    }\n    getDeadline() {\n        return this.deadline;\n    }\n    getPath() {\n        return this.handler.path;\n    }\n}\nexports.Http2ServerCallStream = Http2ServerCallStream;\nfunction handleExpiredDeadline(call) {\n    const err = new Error('Deadline exceeded');\n    err.code = constants_1.Status.DEADLINE_EXCEEDED;\n    call.sendError(err);\n    call.cancelled = true;\n    call.emit('cancelled', 'deadline');\n}\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServerCredentials = void 0;\nconst tls_helpers_1 = require(\"./tls-helpers\");\nclass ServerCredentials {\n    static createInsecure() {\n        return new InsecureServerCredentials();\n    }\n    static createSsl(rootCerts, keyCertPairs, checkClientCertificate = false) {\n        if (rootCerts !== null && !Buffer.isBuffer(rootCerts)) {\n            throw new TypeError('rootCerts must be null or a Buffer');\n        }\n        if (!Array.isArray(keyCertPairs)) {\n            throw new TypeError('keyCertPairs must be an array');\n        }\n        if (typeof checkClientCertificate !== 'boolean') {\n            throw new TypeError('checkClientCertificate must be a boolean');\n        }\n        const cert = [];\n        const key = [];\n        for (let i = 0; i < keyCertPairs.length; i++) {\n            const pair = keyCertPairs[i];\n            if (pair === null || typeof pair !== 'object') {\n                throw new TypeError(`keyCertPair[${i}] must be an object`);\n            }\n            if (!Buffer.isBuffer(pair.private_key)) {\n                throw new TypeError(`keyCertPair[${i}].private_key must be a Buffer`);\n            }\n            if (!Buffer.isBuffer(pair.cert_chain)) {\n                throw new TypeError(`keyCertPair[${i}].cert_chain must be a Buffer`);\n            }\n            cert.push(pair.cert_chain);\n            key.push(pair.private_key);\n        }\n        return new SecureServerCredentials({\n            ca: rootCerts || (0, tls_helpers_1.getDefaultRootsData)() || undefined,\n            cert,\n            key,\n            requestCert: checkClientCertificate,\n            ciphers: tls_helpers_1.CIPHER_SUITES,\n        });\n    }\n}\nexports.ServerCredentials = ServerCredentials;\nclass InsecureServerCredentials extends ServerCredentials {\n    _isSecure() {\n        return false;\n    }\n    _getSettings() {\n        return null;\n    }\n}\nclass SecureServerCredentials extends ServerCredentials {\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    _isSecure() {\n        return true;\n    }\n    _getSettings() {\n        return this.options;\n    }\n}\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Server = void 0;\nconst http2 = require(\"http2\");\nconst constants_1 = require(\"./constants\");\nconst server_call_1 = require(\"./server-call\");\nconst server_credentials_1 = require(\"./server-credentials\");\nconst resolver_1 = require(\"./resolver\");\nconst logging = require(\"./logging\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst channelz_1 = require(\"./channelz\");\nconst UNLIMITED_CONNECTION_AGE_MS = ~(1 << 31);\nconst KEEPALIVE_MAX_TIME_MS = ~(1 << 31);\nconst KEEPALIVE_TIMEOUT_MS = 20000;\nconst { HTTP2_HEADER_PATH } = http2.constants;\nconst TRACER_NAME = 'server';\nfunction noop() { }\nfunction getUnimplementedStatusResponse(methodName) {\n    return {\n        code: constants_1.Status.UNIMPLEMENTED,\n        details: `The server does not implement the method ${methodName}`,\n    };\n}\nfunction getDefaultHandler(handlerType, methodName) {\n    const unimplementedStatusResponse = getUnimplementedStatusResponse(methodName);\n    switch (handlerType) {\n        case 'unary':\n            return (call, callback) => {\n                callback(unimplementedStatusResponse, null);\n            };\n        case 'clientStream':\n            return (call, callback) => {\n                callback(unimplementedStatusResponse, null);\n            };\n        case 'serverStream':\n            return (call) => {\n                call.emit('error', unimplementedStatusResponse);\n            };\n        case 'bidi':\n            return (call) => {\n                call.emit('error', unimplementedStatusResponse);\n            };\n        default:\n            throw new Error(`Invalid handlerType ${handlerType}`);\n    }\n}\nclass Server {\n    constructor(options) {\n        var _a, _b, _c, _d;\n        this.http2ServerList = [];\n        this.handlers = new Map();\n        this.sessions = new Map();\n        this.started = false;\n        this.shutdown = false;\n        this.serverAddressString = 'null';\n        // Channelz Info\n        this.channelzEnabled = true;\n        this.channelzTrace = new channelz_1.ChannelzTrace();\n        this.callTracker = new channelz_1.ChannelzCallTracker();\n        this.listenerChildrenTracker = new channelz_1.ChannelzChildrenTracker();\n        this.sessionChildrenTracker = new channelz_1.ChannelzChildrenTracker();\n        this.options = options !== null && options !== void 0 ? options : {};\n        if (this.options['grpc.enable_channelz'] === 0) {\n            this.channelzEnabled = false;\n        }\n        this.channelzRef = (0, channelz_1.registerChannelzServer)(() => this.getChannelzInfo(), this.channelzEnabled);\n        if (this.channelzEnabled) {\n            this.channelzTrace.addTrace('CT_INFO', 'Server created');\n        }\n        this.maxConnectionAgeMs =\n            (_a = this.options['grpc.max_connection_age_ms']) !== null && _a !== void 0 ? _a : UNLIMITED_CONNECTION_AGE_MS;\n        this.maxConnectionAgeGraceMs =\n            (_b = this.options['grpc.max_connection_age_grace_ms']) !== null && _b !== void 0 ? _b : UNLIMITED_CONNECTION_AGE_MS;\n        this.keepaliveTimeMs =\n            (_c = this.options['grpc.keepalive_time_ms']) !== null && _c !== void 0 ? _c : KEEPALIVE_MAX_TIME_MS;\n        this.keepaliveTimeoutMs =\n            (_d = this.options['grpc.keepalive_timeout_ms']) !== null && _d !== void 0 ? _d : KEEPALIVE_TIMEOUT_MS;\n        this.trace('Server constructed');\n    }\n    getChannelzInfo() {\n        return {\n            trace: this.channelzTrace,\n            callTracker: this.callTracker,\n            listenerChildren: this.listenerChildrenTracker.getChildLists(),\n            sessionChildren: this.sessionChildrenTracker.getChildLists(),\n        };\n    }\n    getChannelzSessionInfoGetter(session) {\n        return () => {\n            var _a, _b, _c;\n            const sessionInfo = this.sessions.get(session);\n            const sessionSocket = session.socket;\n            const remoteAddress = sessionSocket.remoteAddress\n                ? (0, subchannel_address_1.stringToSubchannelAddress)(sessionSocket.remoteAddress, sessionSocket.remotePort)\n                : null;\n            const localAddress = sessionSocket.localAddress\n                ? (0, subchannel_address_1.stringToSubchannelAddress)(sessionSocket.localAddress, sessionSocket.localPort)\n                : null;\n            let tlsInfo;\n            if (session.encrypted) {\n                const tlsSocket = sessionSocket;\n                const cipherInfo = tlsSocket.getCipher();\n                const certificate = tlsSocket.getCertificate();\n                const peerCertificate = tlsSocket.getPeerCertificate();\n                tlsInfo = {\n                    cipherSuiteStandardName: (_a = cipherInfo.standardName) !== null && _a !== void 0 ? _a : null,\n                    cipherSuiteOtherName: cipherInfo.standardName\n                        ? null\n                        : cipherInfo.name,\n                    localCertificate: certificate && 'raw' in certificate ? certificate.raw : null,\n                    remoteCertificate: peerCertificate && 'raw' in peerCertificate\n                        ? peerCertificate.raw\n                        : null,\n                };\n            }\n            else {\n                tlsInfo = null;\n            }\n            const socketInfo = {\n                remoteAddress: remoteAddress,\n                localAddress: localAddress,\n                security: tlsInfo,\n                remoteName: null,\n                streamsStarted: sessionInfo.streamTracker.callsStarted,\n                streamsSucceeded: sessionInfo.streamTracker.callsSucceeded,\n                streamsFailed: sessionInfo.streamTracker.callsFailed,\n                messagesSent: sessionInfo.messagesSent,\n                messagesReceived: sessionInfo.messagesReceived,\n                keepAlivesSent: 0,\n                lastLocalStreamCreatedTimestamp: null,\n                lastRemoteStreamCreatedTimestamp: sessionInfo.streamTracker.lastCallStartedTimestamp,\n                lastMessageSentTimestamp: sessionInfo.lastMessageSentTimestamp,\n                lastMessageReceivedTimestamp: sessionInfo.lastMessageReceivedTimestamp,\n                localFlowControlWindow: (_b = session.state.localWindowSize) !== null && _b !== void 0 ? _b : null,\n                remoteFlowControlWindow: (_c = session.state.remoteWindowSize) !== null && _c !== void 0 ? _c : null,\n            };\n            return socketInfo;\n        };\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '(' + this.channelzRef.id + ') ' + text);\n    }\n    addProtoService() {\n        throw new Error('Not implemented. Use addService() instead');\n    }\n    addService(service, implementation) {\n        if (service === null ||\n            typeof service !== 'object' ||\n            implementation === null ||\n            typeof implementation !== 'object') {\n            throw new Error('addService() requires two objects as arguments');\n        }\n        const serviceKeys = Object.keys(service);\n        if (serviceKeys.length === 0) {\n            throw new Error('Cannot add an empty service to a server');\n        }\n        serviceKeys.forEach(name => {\n            const attrs = service[name];\n            let methodType;\n            if (attrs.requestStream) {\n                if (attrs.responseStream) {\n                    methodType = 'bidi';\n                }\n                else {\n                    methodType = 'clientStream';\n                }\n            }\n            else {\n                if (attrs.responseStream) {\n                    methodType = 'serverStream';\n                }\n                else {\n                    methodType = 'unary';\n                }\n            }\n            let implFn = implementation[name];\n            let impl;\n            if (implFn === undefined && typeof attrs.originalName === 'string') {\n                implFn = implementation[attrs.originalName];\n            }\n            if (implFn !== undefined) {\n                impl = implFn.bind(implementation);\n            }\n            else {\n                impl = getDefaultHandler(methodType, name);\n            }\n            const success = this.register(attrs.path, impl, attrs.responseSerialize, attrs.requestDeserialize, methodType);\n            if (success === false) {\n                throw new Error(`Method handler for ${attrs.path} already provided.`);\n            }\n        });\n    }\n    removeService(service) {\n        if (service === null || typeof service !== 'object') {\n            throw new Error('removeService() requires object as argument');\n        }\n        const serviceKeys = Object.keys(service);\n        serviceKeys.forEach(name => {\n            const attrs = service[name];\n            this.unregister(attrs.path);\n        });\n    }\n    bind(port, creds) {\n        throw new Error('Not implemented. Use bindAsync() instead');\n    }\n    bindAsync(port, creds, callback) {\n        if (this.started === true) {\n            throw new Error('server is already started');\n        }\n        if (this.shutdown) {\n            throw new Error('bindAsync called after shutdown');\n        }\n        if (typeof port !== 'string') {\n            throw new TypeError('port must be a string');\n        }\n        if (creds === null || !(creds instanceof server_credentials_1.ServerCredentials)) {\n            throw new TypeError('creds must be a ServerCredentials object');\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError('callback must be a function');\n        }\n        const initialPortUri = (0, uri_parser_1.parseUri)(port);\n        if (initialPortUri === null) {\n            throw new Error(`Could not parse port \"${port}\"`);\n        }\n        const portUri = (0, resolver_1.mapUriDefaultScheme)(initialPortUri);\n        if (portUri === null) {\n            throw new Error(`Could not get a default scheme for port \"${port}\"`);\n        }\n        const serverOptions = {\n            maxSendHeaderBlockLength: Number.MAX_SAFE_INTEGER,\n        };\n        if ('grpc-node.max_session_memory' in this.options) {\n            serverOptions.maxSessionMemory =\n                this.options['grpc-node.max_session_memory'];\n        }\n        else {\n            /* By default, set a very large max session memory limit, to effectively\n             * disable enforcement of the limit. Some testing indicates that Node's\n             * behavior degrades badly when this limit is reached, so we solve that\n             * by disabling the check entirely. */\n            serverOptions.maxSessionMemory = Number.MAX_SAFE_INTEGER;\n        }\n        if ('grpc.max_concurrent_streams' in this.options) {\n            serverOptions.settings = {\n                maxConcurrentStreams: this.options['grpc.max_concurrent_streams'],\n            };\n        }\n        const deferredCallback = (error, port) => {\n            process.nextTick(() => callback(error, port));\n        };\n        const setupServer = () => {\n            let http2Server;\n            if (creds._isSecure()) {\n                const secureServerOptions = Object.assign(serverOptions, creds._getSettings());\n                secureServerOptions.enableTrace =\n                    this.options['grpc-node.tls_enable_trace'] === 1;\n                http2Server = http2.createSecureServer(secureServerOptions);\n                http2Server.on('secureConnection', (socket) => {\n                    /* These errors need to be handled by the user of Http2SecureServer,\n                     * according to https://github.com/nodejs/node/issues/35824 */\n                    socket.on('error', (e) => {\n                        this.trace('An incoming TLS connection closed with error: ' + e.message);\n                    });\n                });\n            }\n            else {\n                http2Server = http2.createServer(serverOptions);\n            }\n            http2Server.setTimeout(0, noop);\n            this._setupHandlers(http2Server);\n            return http2Server;\n        };\n        const bindSpecificPort = (addressList, portNum, previousCount) => {\n            if (addressList.length === 0) {\n                return Promise.resolve({ port: portNum, count: previousCount });\n            }\n            return Promise.all(addressList.map(address => {\n                this.trace('Attempting to bind ' + (0, subchannel_address_1.subchannelAddressToString)(address));\n                let addr;\n                if ((0, subchannel_address_1.isTcpSubchannelAddress)(address)) {\n                    addr = {\n                        host: address.host,\n                        port: portNum,\n                    };\n                }\n                else {\n                    addr = address;\n                }\n                const http2Server = setupServer();\n                return new Promise((resolve, reject) => {\n                    const onError = (err) => {\n                        this.trace('Failed to bind ' +\n                            (0, subchannel_address_1.subchannelAddressToString)(address) +\n                            ' with error ' +\n                            err.message);\n                        resolve(err);\n                    };\n                    http2Server.once('error', onError);\n                    http2Server.listen(addr, () => {\n                        if (this.shutdown) {\n                            http2Server.close();\n                            resolve(new Error('bindAsync failed because server is shutdown'));\n                            return;\n                        }\n                        const boundAddress = http2Server.address();\n                        let boundSubchannelAddress;\n                        if (typeof boundAddress === 'string') {\n                            boundSubchannelAddress = {\n                                path: boundAddress,\n                            };\n                        }\n                        else {\n                            boundSubchannelAddress = {\n                                host: boundAddress.address,\n                                port: boundAddress.port,\n                            };\n                        }\n                        const channelzRef = (0, channelz_1.registerChannelzSocket)((0, subchannel_address_1.subchannelAddressToString)(boundSubchannelAddress), () => {\n                            return {\n                                localAddress: boundSubchannelAddress,\n                                remoteAddress: null,\n                                security: null,\n                                remoteName: null,\n                                streamsStarted: 0,\n                                streamsSucceeded: 0,\n                                streamsFailed: 0,\n                                messagesSent: 0,\n                                messagesReceived: 0,\n                                keepAlivesSent: 0,\n                                lastLocalStreamCreatedTimestamp: null,\n                                lastRemoteStreamCreatedTimestamp: null,\n                                lastMessageSentTimestamp: null,\n                                lastMessageReceivedTimestamp: null,\n                                localFlowControlWindow: null,\n                                remoteFlowControlWindow: null,\n                            };\n                        }, this.channelzEnabled);\n                        if (this.channelzEnabled) {\n                            this.listenerChildrenTracker.refChild(channelzRef);\n                        }\n                        this.http2ServerList.push({\n                            server: http2Server,\n                            channelzRef: channelzRef,\n                        });\n                        this.trace('Successfully bound ' +\n                            (0, subchannel_address_1.subchannelAddressToString)(boundSubchannelAddress));\n                        resolve('port' in boundSubchannelAddress\n                            ? boundSubchannelAddress.port\n                            : portNum);\n                        http2Server.removeListener('error', onError);\n                    });\n                });\n            })).then(results => {\n                let count = 0;\n                for (const result of results) {\n                    if (typeof result === 'number') {\n                        count += 1;\n                        if (result !== portNum) {\n                            throw new Error('Invalid state: multiple port numbers added from single address');\n                        }\n                    }\n                }\n                return {\n                    port: portNum,\n                    count: count + previousCount,\n                };\n            });\n        };\n        const bindWildcardPort = (addressList) => {\n            if (addressList.length === 0) {\n                return Promise.resolve({ port: 0, count: 0 });\n            }\n            const address = addressList[0];\n            const http2Server = setupServer();\n            return new Promise((resolve, reject) => {\n                const onError = (err) => {\n                    this.trace('Failed to bind ' +\n                        (0, subchannel_address_1.subchannelAddressToString)(address) +\n                        ' with error ' +\n                        err.message);\n                    resolve(bindWildcardPort(addressList.slice(1)));\n                };\n                http2Server.once('error', onError);\n                http2Server.listen(address, () => {\n                    if (this.shutdown) {\n                        http2Server.close();\n                        resolve({ port: 0, count: 0 });\n                        return;\n                    }\n                    const boundAddress = http2Server.address();\n                    const boundSubchannelAddress = {\n                        host: boundAddress.address,\n                        port: boundAddress.port,\n                    };\n                    const channelzRef = (0, channelz_1.registerChannelzSocket)((0, subchannel_address_1.subchannelAddressToString)(boundSubchannelAddress), () => {\n                        return {\n                            localAddress: boundSubchannelAddress,\n                            remoteAddress: null,\n                            security: null,\n                            remoteName: null,\n                            streamsStarted: 0,\n                            streamsSucceeded: 0,\n                            streamsFailed: 0,\n                            messagesSent: 0,\n                            messagesReceived: 0,\n                            keepAlivesSent: 0,\n                            lastLocalStreamCreatedTimestamp: null,\n                            lastRemoteStreamCreatedTimestamp: null,\n                            lastMessageSentTimestamp: null,\n                            lastMessageReceivedTimestamp: null,\n                            localFlowControlWindow: null,\n                            remoteFlowControlWindow: null,\n                        };\n                    }, this.channelzEnabled);\n                    if (this.channelzEnabled) {\n                        this.listenerChildrenTracker.refChild(channelzRef);\n                    }\n                    this.http2ServerList.push({\n                        server: http2Server,\n                        channelzRef: channelzRef,\n                    });\n                    this.trace('Successfully bound ' +\n                        (0, subchannel_address_1.subchannelAddressToString)(boundSubchannelAddress));\n                    resolve(bindSpecificPort(addressList.slice(1), boundAddress.port, 1));\n                    http2Server.removeListener('error', onError);\n                });\n            });\n        };\n        const resolverListener = {\n            onSuccessfulResolution: (addressList, serviceConfig, serviceConfigError) => {\n                // We only want one resolution result. Discard all future results\n                resolverListener.onSuccessfulResolution = () => { };\n                if (this.shutdown) {\n                    deferredCallback(new Error(`bindAsync failed because server is shutdown`), 0);\n                }\n                if (addressList.length === 0) {\n                    deferredCallback(new Error(`No addresses resolved for port ${port}`), 0);\n                    return;\n                }\n                let bindResultPromise;\n                if ((0, subchannel_address_1.isTcpSubchannelAddress)(addressList[0])) {\n                    if (addressList[0].port === 0) {\n                        bindResultPromise = bindWildcardPort(addressList);\n                    }\n                    else {\n                        bindResultPromise = bindSpecificPort(addressList, addressList[0].port, 0);\n                    }\n                }\n                else {\n                    // Use an arbitrary non-zero port for non-TCP addresses\n                    bindResultPromise = bindSpecificPort(addressList, 1, 0);\n                }\n                bindResultPromise.then(bindResult => {\n                    if (bindResult.count === 0) {\n                        const errorString = `No address added out of total ${addressList.length} resolved`;\n                        logging.log(constants_1.LogVerbosity.ERROR, errorString);\n                        deferredCallback(new Error(errorString), 0);\n                    }\n                    else {\n                        if (bindResult.count < addressList.length) {\n                            logging.log(constants_1.LogVerbosity.INFO, `WARNING Only ${bindResult.count} addresses added out of total ${addressList.length} resolved`);\n                        }\n                        deferredCallback(null, bindResult.port);\n                    }\n                }, error => {\n                    const errorString = `No address added out of total ${addressList.length} resolved`;\n                    logging.log(constants_1.LogVerbosity.ERROR, errorString);\n                    deferredCallback(new Error(errorString), 0);\n                });\n            },\n            onError: error => {\n                deferredCallback(new Error(error.details), 0);\n            },\n        };\n        const resolver = (0, resolver_1.createResolver)(portUri, resolverListener, this.options);\n        resolver.updateResolution();\n    }\n    forceShutdown() {\n        // Close the server if it is still running.\n        for (const { server: http2Server, channelzRef: ref } of this\n            .http2ServerList) {\n            if (http2Server.listening) {\n                http2Server.close(() => {\n                    if (this.channelzEnabled) {\n                        this.listenerChildrenTracker.unrefChild(ref);\n                        (0, channelz_1.unregisterChannelzRef)(ref);\n                    }\n                });\n            }\n        }\n        this.started = false;\n        this.shutdown = true;\n        // Always destroy any available sessions. It's possible that one or more\n        // tryShutdown() calls are in progress. Don't wait on them to finish.\n        this.sessions.forEach((channelzInfo, session) => {\n            // Cast NGHTTP2_CANCEL to any because TypeScript doesn't seem to\n            // recognize destroy(code) as a valid signature.\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            session.destroy(http2.constants.NGHTTP2_CANCEL);\n        });\n        this.sessions.clear();\n        if (this.channelzEnabled) {\n            (0, channelz_1.unregisterChannelzRef)(this.channelzRef);\n        }\n    }\n    register(name, handler, serialize, deserialize, type) {\n        if (this.handlers.has(name)) {\n            return false;\n        }\n        this.handlers.set(name, {\n            func: handler,\n            serialize,\n            deserialize,\n            type,\n            path: name,\n        });\n        return true;\n    }\n    unregister(name) {\n        return this.handlers.delete(name);\n    }\n    start() {\n        if (this.http2ServerList.length === 0 ||\n            this.http2ServerList.every(({ server: http2Server }) => http2Server.listening !== true)) {\n            throw new Error('server must be bound in order to start');\n        }\n        if (this.started === true) {\n            throw new Error('server is already started');\n        }\n        if (this.channelzEnabled) {\n            this.channelzTrace.addTrace('CT_INFO', 'Starting');\n        }\n        this.started = true;\n    }\n    tryShutdown(callback) {\n        const wrappedCallback = (error) => {\n            if (this.channelzEnabled) {\n                (0, channelz_1.unregisterChannelzRef)(this.channelzRef);\n            }\n            callback(error);\n        };\n        let pendingChecks = 0;\n        function maybeCallback() {\n            pendingChecks--;\n            if (pendingChecks === 0) {\n                wrappedCallback();\n            }\n        }\n        // Close the server if necessary.\n        this.started = false;\n        this.shutdown = true;\n        for (const { server: http2Server, channelzRef: ref } of this\n            .http2ServerList) {\n            if (http2Server.listening) {\n                pendingChecks++;\n                http2Server.close(() => {\n                    if (this.channelzEnabled) {\n                        this.listenerChildrenTracker.unrefChild(ref);\n                        (0, channelz_1.unregisterChannelzRef)(ref);\n                    }\n                    maybeCallback();\n                });\n            }\n        }\n        this.sessions.forEach((channelzInfo, session) => {\n            if (!session.closed) {\n                pendingChecks += 1;\n                session.close(maybeCallback);\n            }\n        });\n        if (pendingChecks === 0) {\n            wrappedCallback();\n        }\n    }\n    addHttp2Port() {\n        throw new Error('Not yet implemented');\n    }\n    /**\n     * Get the channelz reference object for this server. The returned value is\n     * garbage if channelz is disabled for this server.\n     * @returns\n     */\n    getChannelzRef() {\n        return this.channelzRef;\n    }\n    _verifyContentType(stream, headers) {\n        const contentType = headers[http2.constants.HTTP2_HEADER_CONTENT_TYPE];\n        if (typeof contentType !== 'string' ||\n            !contentType.startsWith('application/grpc')) {\n            stream.respond({\n                [http2.constants.HTTP2_HEADER_STATUS]: http2.constants.HTTP_STATUS_UNSUPPORTED_MEDIA_TYPE,\n            }, { endStream: true });\n            return false;\n        }\n        return true;\n    }\n    _retrieveHandler(path) {\n        this.trace('Received call to method ' +\n            path +\n            ' at address ' +\n            this.serverAddressString);\n        const handler = this.handlers.get(path);\n        if (handler === undefined) {\n            this.trace('No handler registered for method ' +\n                path +\n                '. Sending UNIMPLEMENTED status.');\n            return null;\n        }\n        return handler;\n    }\n    _respondWithError(err, stream, channelzSessionInfo = null) {\n        const call = new server_call_1.Http2ServerCallStream(stream, null, this.options);\n        if (err.code === undefined) {\n            err.code = constants_1.Status.INTERNAL;\n        }\n        if (this.channelzEnabled) {\n            this.callTracker.addCallFailed();\n            channelzSessionInfo === null || channelzSessionInfo === void 0 ? void 0 : channelzSessionInfo.streamTracker.addCallFailed();\n        }\n        call.sendError(err);\n    }\n    _channelzHandler(stream, headers) {\n        const channelzSessionInfo = this.sessions.get(stream.session);\n        this.callTracker.addCallStarted();\n        channelzSessionInfo === null || channelzSessionInfo === void 0 ? void 0 : channelzSessionInfo.streamTracker.addCallStarted();\n        if (!this._verifyContentType(stream, headers)) {\n            this.callTracker.addCallFailed();\n            channelzSessionInfo === null || channelzSessionInfo === void 0 ? void 0 : channelzSessionInfo.streamTracker.addCallFailed();\n            return;\n        }\n        const path = headers[HTTP2_HEADER_PATH];\n        const handler = this._retrieveHandler(path);\n        if (!handler) {\n            this._respondWithError(getUnimplementedStatusResponse(path), stream, channelzSessionInfo);\n            return;\n        }\n        const call = new server_call_1.Http2ServerCallStream(stream, handler, this.options);\n        call.once('callEnd', (code) => {\n            if (code === constants_1.Status.OK) {\n                this.callTracker.addCallSucceeded();\n            }\n            else {\n                this.callTracker.addCallFailed();\n            }\n        });\n        if (channelzSessionInfo) {\n            call.once('streamEnd', (success) => {\n                if (success) {\n                    channelzSessionInfo.streamTracker.addCallSucceeded();\n                }\n                else {\n                    channelzSessionInfo.streamTracker.addCallFailed();\n                }\n            });\n            call.on('sendMessage', () => {\n                channelzSessionInfo.messagesSent += 1;\n                channelzSessionInfo.lastMessageSentTimestamp = new Date();\n            });\n            call.on('receiveMessage', () => {\n                channelzSessionInfo.messagesReceived += 1;\n                channelzSessionInfo.lastMessageReceivedTimestamp = new Date();\n            });\n        }\n        if (!this._runHandlerForCall(call, handler, headers)) {\n            this.callTracker.addCallFailed();\n            channelzSessionInfo === null || channelzSessionInfo === void 0 ? void 0 : channelzSessionInfo.streamTracker.addCallFailed();\n            call.sendError({\n                code: constants_1.Status.INTERNAL,\n                details: `Unknown handler type: ${handler.type}`,\n            });\n        }\n    }\n    _streamHandler(stream, headers) {\n        if (this._verifyContentType(stream, headers) !== true) {\n            return;\n        }\n        const path = headers[HTTP2_HEADER_PATH];\n        const handler = this._retrieveHandler(path);\n        if (!handler) {\n            this._respondWithError(getUnimplementedStatusResponse(path), stream, null);\n            return;\n        }\n        const call = new server_call_1.Http2ServerCallStream(stream, handler, this.options);\n        if (!this._runHandlerForCall(call, handler, headers)) {\n            call.sendError({\n                code: constants_1.Status.INTERNAL,\n                details: `Unknown handler type: ${handler.type}`,\n            });\n        }\n    }\n    _runHandlerForCall(call, handler, headers) {\n        var _a;\n        const metadata = call.receiveMetadata(headers);\n        const encoding = (_a = metadata.get('grpc-encoding')[0]) !== null && _a !== void 0 ? _a : 'identity';\n        metadata.remove('grpc-encoding');\n        const { type } = handler;\n        if (type === 'unary') {\n            handleUnary(call, handler, metadata, encoding);\n        }\n        else if (type === 'clientStream') {\n            handleClientStreaming(call, handler, metadata, encoding);\n        }\n        else if (type === 'serverStream') {\n            handleServerStreaming(call, handler, metadata, encoding);\n        }\n        else if (type === 'bidi') {\n            handleBidiStreaming(call, handler, metadata, encoding);\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    _setupHandlers(http2Server) {\n        if (http2Server === null) {\n            return;\n        }\n        const serverAddress = http2Server.address();\n        let serverAddressString = 'null';\n        if (serverAddress) {\n            if (typeof serverAddress === 'string') {\n                serverAddressString = serverAddress;\n            }\n            else {\n                serverAddressString = serverAddress.address + ':' + serverAddress.port;\n            }\n        }\n        this.serverAddressString = serverAddressString;\n        const handler = this.channelzEnabled\n            ? this._channelzHandler\n            : this._streamHandler;\n        http2Server.on('stream', handler.bind(this));\n        http2Server.on('session', session => {\n            var _a, _b, _c, _d, _e;\n            if (!this.started) {\n                session.destroy();\n                return;\n            }\n            const channelzRef = (0, channelz_1.registerChannelzSocket)((_a = session.socket.remoteAddress) !== null && _a !== void 0 ? _a : 'unknown', this.getChannelzSessionInfoGetter(session), this.channelzEnabled);\n            const channelzSessionInfo = {\n                ref: channelzRef,\n                streamTracker: new channelz_1.ChannelzCallTracker(),\n                messagesSent: 0,\n                messagesReceived: 0,\n                lastMessageSentTimestamp: null,\n                lastMessageReceivedTimestamp: null,\n            };\n            this.sessions.set(session, channelzSessionInfo);\n            const clientAddress = session.socket.remoteAddress;\n            if (this.channelzEnabled) {\n                this.channelzTrace.addTrace('CT_INFO', 'Connection established by client ' + clientAddress);\n                this.sessionChildrenTracker.refChild(channelzRef);\n            }\n            let connectionAgeTimer = null;\n            let connectionAgeGraceTimer = null;\n            let sessionClosedByServer = false;\n            if (this.maxConnectionAgeMs !== UNLIMITED_CONNECTION_AGE_MS) {\n                // Apply a random jitter within a +/-10% range\n                const jitterMagnitude = this.maxConnectionAgeMs / 10;\n                const jitter = Math.random() * jitterMagnitude * 2 - jitterMagnitude;\n                connectionAgeTimer = (_c = (_b = setTimeout(() => {\n                    var _a, _b;\n                    sessionClosedByServer = true;\n                    if (this.channelzEnabled) {\n                        this.channelzTrace.addTrace('CT_INFO', 'Connection dropped by max connection age from ' + clientAddress);\n                    }\n                    try {\n                        session.goaway(http2.constants.NGHTTP2_NO_ERROR, ~(1 << 31), Buffer.from('max_age'));\n                    }\n                    catch (e) {\n                        // The goaway can't be sent because the session is already closed\n                        session.destroy();\n                        return;\n                    }\n                    session.close();\n                    /* Allow a grace period after sending the GOAWAY before forcibly\n                     * closing the connection. */\n                    if (this.maxConnectionAgeGraceMs !== UNLIMITED_CONNECTION_AGE_MS) {\n                        connectionAgeGraceTimer = (_b = (_a = setTimeout(() => {\n                            session.destroy();\n                        }, this.maxConnectionAgeGraceMs)).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n                    }\n                }, this.maxConnectionAgeMs + jitter)).unref) === null || _c === void 0 ? void 0 : _c.call(_b);\n            }\n            const keeapliveTimeTimer = (_e = (_d = setInterval(() => {\n                var _a, _b;\n                const timeoutTImer = (_b = (_a = setTimeout(() => {\n                    sessionClosedByServer = true;\n                    if (this.channelzEnabled) {\n                        this.channelzTrace.addTrace('CT_INFO', 'Connection dropped by keepalive timeout from ' + clientAddress);\n                    }\n                    session.close();\n                }, this.keepaliveTimeoutMs)).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n                try {\n                    session.ping((err, duration, payload) => {\n                        clearTimeout(timeoutTImer);\n                    });\n                }\n                catch (e) {\n                    // The ping can't be sent because the session is already closed\n                    session.destroy();\n                }\n            }, this.keepaliveTimeMs)).unref) === null || _e === void 0 ? void 0 : _e.call(_d);\n            session.on('close', () => {\n                if (this.channelzEnabled) {\n                    if (!sessionClosedByServer) {\n                        this.channelzTrace.addTrace('CT_INFO', 'Connection dropped by client ' + clientAddress);\n                    }\n                    this.sessionChildrenTracker.unrefChild(channelzRef);\n                    (0, channelz_1.unregisterChannelzRef)(channelzRef);\n                }\n                if (connectionAgeTimer) {\n                    clearTimeout(connectionAgeTimer);\n                }\n                if (connectionAgeGraceTimer) {\n                    clearTimeout(connectionAgeGraceTimer);\n                }\n                if (keeapliveTimeTimer) {\n                    clearTimeout(keeapliveTimeTimer);\n                }\n                this.sessions.delete(session);\n            });\n        });\n    }\n}\nexports.Server = Server;\nasync function handleUnary(call, handler, metadata, encoding) {\n    try {\n        const request = await call.receiveUnaryMessage(encoding);\n        if (request === undefined || call.cancelled) {\n            return;\n        }\n        const emitter = new server_call_1.ServerUnaryCallImpl(call, metadata, request);\n        handler.func(emitter, (err, value, trailer, flags) => {\n            call.sendUnaryMessage(err, value, trailer, flags);\n        });\n    }\n    catch (err) {\n        call.sendError(err);\n    }\n}\nfunction handleClientStreaming(call, handler, metadata, encoding) {\n    const stream = new server_call_1.ServerReadableStreamImpl(call, metadata, handler.deserialize, encoding);\n    function respond(err, value, trailer, flags) {\n        stream.destroy();\n        call.sendUnaryMessage(err, value, trailer, flags);\n    }\n    if (call.cancelled) {\n        return;\n    }\n    stream.on('error', respond);\n    handler.func(stream, respond);\n}\nasync function handleServerStreaming(call, handler, metadata, encoding) {\n    try {\n        const request = await call.receiveUnaryMessage(encoding);\n        if (request === undefined || call.cancelled) {\n            return;\n        }\n        const stream = new server_call_1.ServerWritableStreamImpl(call, metadata, handler.serialize, request);\n        handler.func(stream);\n    }\n    catch (err) {\n        call.sendError(err);\n    }\n}\nfunction handleBidiStreaming(call, handler, metadata, encoding) {\n    const stream = new server_call_1.ServerDuplexStreamImpl(call, metadata, handler.serialize, handler.deserialize, encoding);\n    if (call.cancelled) {\n        return;\n    }\n    handler.func(stream);\n}\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StatusBuilder = void 0;\n/**\n * A builder for gRPC status objects.\n */\nclass StatusBuilder {\n    constructor() {\n        this.code = null;\n        this.details = null;\n        this.metadata = null;\n    }\n    /**\n     * Adds a status code to the builder.\n     */\n    withCode(code) {\n        this.code = code;\n        return this;\n    }\n    /**\n     * Adds details to the builder.\n     */\n    withDetails(details) {\n        this.details = details;\n        return this;\n    }\n    /**\n     * Adds metadata to the builder.\n     */\n    withMetadata(metadata) {\n        this.metadata = metadata;\n        return this;\n    }\n    /**\n     * Builds the status object.\n     */\n    build() {\n        const status = {};\n        if (this.code !== null) {\n            status.code = this.code;\n        }\n        if (this.details !== null) {\n            status.details = this.details;\n        }\n        if (this.metadata !== null) {\n            status.metadata = this.metadata;\n        }\n        return status;\n    }\n}\nexports.StatusBuilder = StatusBuilder;\n", "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isDuration = exports.durationToMs = exports.msToDuration = void 0;\nfunction msToDuration(millis) {\n    return {\n        seconds: (millis / 1000) | 0,\n        nanos: ((millis % 1000) * 1000000) | 0,\n    };\n}\nexports.msToDuration = msToDuration;\nfunction durationToMs(duration) {\n    return (duration.seconds * 1000 + duration.nanos / 1000000) | 0;\n}\nexports.durationToMs = durationToMs;\nfunction isDuration(value) {\n    return typeof value.seconds === 'number' && typeof value.nanos === 'number';\n}\nexports.isDuration = isDuration;\n", "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = exports.OutlierDetectionLoadBalancer = exports.OutlierDetectionLoadBalancingConfig = void 0;\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst constants_1 = require(\"./constants\");\nconst duration_1 = require(\"./duration\");\nconst experimental_1 = require(\"./experimental\");\nconst load_balancer_1 = require(\"./load-balancer\");\nconst load_balancer_child_handler_1 = require(\"./load-balancer-child-handler\");\nconst picker_1 = require(\"./picker\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst subchannel_interface_1 = require(\"./subchannel-interface\");\nconst logging = require(\"./logging\");\nconst TRACER_NAME = 'outlier_detection';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nconst TYPE_NAME = 'outlier_detection';\nconst OUTLIER_DETECTION_ENABLED = ((_a = process.env.GRPC_EXPERIMENTAL_ENABLE_OUTLIER_DETECTION) !== null && _a !== void 0 ? _a : 'true') === 'true';\nconst defaultSuccessRateEjectionConfig = {\n    stdev_factor: 1900,\n    enforcement_percentage: 100,\n    minimum_hosts: 5,\n    request_volume: 100,\n};\nconst defaultFailurePercentageEjectionConfig = {\n    threshold: 85,\n    enforcement_percentage: 100,\n    minimum_hosts: 5,\n    request_volume: 50,\n};\nfunction validateFieldType(obj, fieldName, expectedType, objectName) {\n    if (fieldName in obj && typeof obj[fieldName] !== expectedType) {\n        const fullFieldName = objectName ? `${objectName}.${fieldName}` : fieldName;\n        throw new Error(`outlier detection config ${fullFieldName} parse error: expected ${expectedType}, got ${typeof obj[fieldName]}`);\n    }\n}\nfunction validatePositiveDuration(obj, fieldName, objectName) {\n    const fullFieldName = objectName ? `${objectName}.${fieldName}` : fieldName;\n    if (fieldName in obj) {\n        if (!(0, duration_1.isDuration)(obj[fieldName])) {\n            throw new Error(`outlier detection config ${fullFieldName} parse error: expected Duration, got ${typeof obj[fieldName]}`);\n        }\n        if (!(obj[fieldName].seconds >= 0 &&\n            obj[fieldName].seconds <= 315576000000 &&\n            obj[fieldName].nanos >= 0 &&\n            obj[fieldName].nanos <= 999999999)) {\n            throw new Error(`outlier detection config ${fullFieldName} parse error: values out of range for non-negative Duaration`);\n        }\n    }\n}\nfunction validatePercentage(obj, fieldName, objectName) {\n    const fullFieldName = objectName ? `${objectName}.${fieldName}` : fieldName;\n    validateFieldType(obj, fieldName, 'number', objectName);\n    if (fieldName in obj && !(obj[fieldName] >= 0 && obj[fieldName] <= 100)) {\n        throw new Error(`outlier detection config ${fullFieldName} parse error: value out of range for percentage (0-100)`);\n    }\n}\nclass OutlierDetectionLoadBalancingConfig {\n    constructor(intervalMs, baseEjectionTimeMs, maxEjectionTimeMs, maxEjectionPercent, successRateEjection, failurePercentageEjection, childPolicy) {\n        this.childPolicy = childPolicy;\n        if (childPolicy.length > 0 &&\n            childPolicy[0].getLoadBalancerName() === 'pick_first') {\n            throw new Error('outlier_detection LB policy cannot have a pick_first child policy');\n        }\n        this.intervalMs = intervalMs !== null && intervalMs !== void 0 ? intervalMs : 10000;\n        this.baseEjectionTimeMs = baseEjectionTimeMs !== null && baseEjectionTimeMs !== void 0 ? baseEjectionTimeMs : 30000;\n        this.maxEjectionTimeMs = maxEjectionTimeMs !== null && maxEjectionTimeMs !== void 0 ? maxEjectionTimeMs : 300000;\n        this.maxEjectionPercent = maxEjectionPercent !== null && maxEjectionPercent !== void 0 ? maxEjectionPercent : 10;\n        this.successRateEjection = successRateEjection\n            ? Object.assign(Object.assign({}, defaultSuccessRateEjectionConfig), successRateEjection) : null;\n        this.failurePercentageEjection = failurePercentageEjection\n            ? Object.assign(Object.assign({}, defaultFailurePercentageEjectionConfig), failurePercentageEjection) : null;\n    }\n    getLoadBalancerName() {\n        return TYPE_NAME;\n    }\n    toJsonObject() {\n        return {\n            interval: (0, duration_1.msToDuration)(this.intervalMs),\n            base_ejection_time: (0, duration_1.msToDuration)(this.baseEjectionTimeMs),\n            max_ejection_time: (0, duration_1.msToDuration)(this.maxEjectionTimeMs),\n            max_ejection_percent: this.maxEjectionPercent,\n            success_rate_ejection: this.successRateEjection,\n            failure_percentage_ejection: this.failurePercentageEjection,\n            child_policy: this.childPolicy.map(policy => policy.toJsonObject()),\n        };\n    }\n    getIntervalMs() {\n        return this.intervalMs;\n    }\n    getBaseEjectionTimeMs() {\n        return this.baseEjectionTimeMs;\n    }\n    getMaxEjectionTimeMs() {\n        return this.maxEjectionTimeMs;\n    }\n    getMaxEjectionPercent() {\n        return this.maxEjectionPercent;\n    }\n    getSuccessRateEjectionConfig() {\n        return this.successRateEjection;\n    }\n    getFailurePercentageEjectionConfig() {\n        return this.failurePercentageEjection;\n    }\n    getChildPolicy() {\n        return this.childPolicy;\n    }\n    copyWithChildPolicy(childPolicy) {\n        return new OutlierDetectionLoadBalancingConfig(this.intervalMs, this.baseEjectionTimeMs, this.maxEjectionTimeMs, this.maxEjectionPercent, this.successRateEjection, this.failurePercentageEjection, childPolicy);\n    }\n    static createFromJson(obj) {\n        var _a;\n        validatePositiveDuration(obj, 'interval');\n        validatePositiveDuration(obj, 'base_ejection_time');\n        validatePositiveDuration(obj, 'max_ejection_time');\n        validatePercentage(obj, 'max_ejection_percent');\n        if ('success_rate_ejection' in obj) {\n            if (typeof obj.success_rate_ejection !== 'object') {\n                throw new Error('outlier detection config success_rate_ejection must be an object');\n            }\n            validateFieldType(obj.success_rate_ejection, 'stdev_factor', 'number', 'success_rate_ejection');\n            validatePercentage(obj.success_rate_ejection, 'enforcement_percentage', 'success_rate_ejection');\n            validateFieldType(obj.success_rate_ejection, 'minimum_hosts', 'number', 'success_rate_ejection');\n            validateFieldType(obj.success_rate_ejection, 'request_volume', 'number', 'success_rate_ejection');\n        }\n        if ('failure_percentage_ejection' in obj) {\n            if (typeof obj.failure_percentage_ejection !== 'object') {\n                throw new Error('outlier detection config failure_percentage_ejection must be an object');\n            }\n            validatePercentage(obj.failure_percentage_ejection, 'threshold', 'failure_percentage_ejection');\n            validatePercentage(obj.failure_percentage_ejection, 'enforcement_percentage', 'failure_percentage_ejection');\n            validateFieldType(obj.failure_percentage_ejection, 'minimum_hosts', 'number', 'failure_percentage_ejection');\n            validateFieldType(obj.failure_percentage_ejection, 'request_volume', 'number', 'failure_percentage_ejection');\n        }\n        return new OutlierDetectionLoadBalancingConfig(obj.interval ? (0, duration_1.durationToMs)(obj.interval) : null, obj.base_ejection_time ? (0, duration_1.durationToMs)(obj.base_ejection_time) : null, obj.max_ejection_time ? (0, duration_1.durationToMs)(obj.max_ejection_time) : null, (_a = obj.max_ejection_percent) !== null && _a !== void 0 ? _a : null, obj.success_rate_ejection, obj.failure_percentage_ejection, obj.child_policy.map(load_balancer_1.validateLoadBalancingConfig));\n    }\n}\nexports.OutlierDetectionLoadBalancingConfig = OutlierDetectionLoadBalancingConfig;\nclass OutlierDetectionSubchannelWrapper extends subchannel_interface_1.BaseSubchannelWrapper {\n    constructor(childSubchannel, mapEntry) {\n        super(childSubchannel);\n        this.mapEntry = mapEntry;\n        this.stateListeners = [];\n        this.ejected = false;\n        this.refCount = 0;\n        this.childSubchannelState = childSubchannel.getConnectivityState();\n        childSubchannel.addConnectivityStateListener((subchannel, previousState, newState, keepaliveTime) => {\n            this.childSubchannelState = newState;\n            if (!this.ejected) {\n                for (const listener of this.stateListeners) {\n                    listener(this, previousState, newState, keepaliveTime);\n                }\n            }\n        });\n    }\n    getConnectivityState() {\n        if (this.ejected) {\n            return connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE;\n        }\n        else {\n            return this.childSubchannelState;\n        }\n    }\n    /**\n     * Add a listener function to be called whenever the wrapper's\n     * connectivity state changes.\n     * @param listener\n     */\n    addConnectivityStateListener(listener) {\n        this.stateListeners.push(listener);\n    }\n    /**\n     * Remove a listener previously added with `addConnectivityStateListener`\n     * @param listener A reference to a function previously passed to\n     *     `addConnectivityStateListener`\n     */\n    removeConnectivityStateListener(listener) {\n        const listenerIndex = this.stateListeners.indexOf(listener);\n        if (listenerIndex > -1) {\n            this.stateListeners.splice(listenerIndex, 1);\n        }\n    }\n    ref() {\n        this.child.ref();\n        this.refCount += 1;\n    }\n    unref() {\n        this.child.unref();\n        this.refCount -= 1;\n        if (this.refCount <= 0) {\n            if (this.mapEntry) {\n                const index = this.mapEntry.subchannelWrappers.indexOf(this);\n                if (index >= 0) {\n                    this.mapEntry.subchannelWrappers.splice(index, 1);\n                }\n            }\n        }\n    }\n    eject() {\n        this.ejected = true;\n        for (const listener of this.stateListeners) {\n            listener(this, this.childSubchannelState, connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, -1);\n        }\n    }\n    uneject() {\n        this.ejected = false;\n        for (const listener of this.stateListeners) {\n            listener(this, connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, this.childSubchannelState, -1);\n        }\n    }\n    getMapEntry() {\n        return this.mapEntry;\n    }\n    getWrappedSubchannel() {\n        return this.child;\n    }\n}\nfunction createEmptyBucket() {\n    return {\n        success: 0,\n        failure: 0,\n    };\n}\nclass CallCounter {\n    constructor() {\n        this.activeBucket = createEmptyBucket();\n        this.inactiveBucket = createEmptyBucket();\n    }\n    addSuccess() {\n        this.activeBucket.success += 1;\n    }\n    addFailure() {\n        this.activeBucket.failure += 1;\n    }\n    switchBuckets() {\n        this.inactiveBucket = this.activeBucket;\n        this.activeBucket = createEmptyBucket();\n    }\n    getLastSuccesses() {\n        return this.inactiveBucket.success;\n    }\n    getLastFailures() {\n        return this.inactiveBucket.failure;\n    }\n}\nclass OutlierDetectionPicker {\n    constructor(wrappedPicker, countCalls) {\n        this.wrappedPicker = wrappedPicker;\n        this.countCalls = countCalls;\n    }\n    pick(pickArgs) {\n        const wrappedPick = this.wrappedPicker.pick(pickArgs);\n        if (wrappedPick.pickResultType === picker_1.PickResultType.COMPLETE) {\n            const subchannelWrapper = wrappedPick.subchannel;\n            const mapEntry = subchannelWrapper.getMapEntry();\n            if (mapEntry) {\n                let onCallEnded = wrappedPick.onCallEnded;\n                if (this.countCalls) {\n                    onCallEnded = statusCode => {\n                        var _a;\n                        if (statusCode === constants_1.Status.OK) {\n                            mapEntry.counter.addSuccess();\n                        }\n                        else {\n                            mapEntry.counter.addFailure();\n                        }\n                        (_a = wrappedPick.onCallEnded) === null || _a === void 0 ? void 0 : _a.call(wrappedPick, statusCode);\n                    };\n                }\n                return Object.assign(Object.assign({}, wrappedPick), { subchannel: subchannelWrapper.getWrappedSubchannel(), onCallEnded: onCallEnded });\n            }\n            else {\n                return Object.assign(Object.assign({}, wrappedPick), { subchannel: subchannelWrapper.getWrappedSubchannel() });\n            }\n        }\n        else {\n            return wrappedPick;\n        }\n    }\n}\nclass OutlierDetectionLoadBalancer {\n    constructor(channelControlHelper) {\n        this.addressMap = new Map();\n        this.latestConfig = null;\n        this.timerStartTime = null;\n        this.childBalancer = new load_balancer_child_handler_1.ChildLoadBalancerHandler((0, experimental_1.createChildChannelControlHelper)(channelControlHelper, {\n            createSubchannel: (subchannelAddress, subchannelArgs) => {\n                const originalSubchannel = channelControlHelper.createSubchannel(subchannelAddress, subchannelArgs);\n                const mapEntry = this.addressMap.get((0, subchannel_address_1.subchannelAddressToString)(subchannelAddress));\n                const subchannelWrapper = new OutlierDetectionSubchannelWrapper(originalSubchannel, mapEntry);\n                if ((mapEntry === null || mapEntry === void 0 ? void 0 : mapEntry.currentEjectionTimestamp) !== null) {\n                    // If the address is ejected, propagate that to the new subchannel wrapper\n                    subchannelWrapper.eject();\n                }\n                mapEntry === null || mapEntry === void 0 ? void 0 : mapEntry.subchannelWrappers.push(subchannelWrapper);\n                return subchannelWrapper;\n            },\n            updateState: (connectivityState, picker) => {\n                if (connectivityState === connectivity_state_1.ConnectivityState.READY) {\n                    channelControlHelper.updateState(connectivityState, new OutlierDetectionPicker(picker, this.isCountingEnabled()));\n                }\n                else {\n                    channelControlHelper.updateState(connectivityState, picker);\n                }\n            },\n        }));\n        this.ejectionTimer = setInterval(() => { }, 0);\n        clearInterval(this.ejectionTimer);\n    }\n    isCountingEnabled() {\n        return (this.latestConfig !== null &&\n            (this.latestConfig.getSuccessRateEjectionConfig() !== null ||\n                this.latestConfig.getFailurePercentageEjectionConfig() !== null));\n    }\n    getCurrentEjectionPercent() {\n        let ejectionCount = 0;\n        for (const mapEntry of this.addressMap.values()) {\n            if (mapEntry.currentEjectionTimestamp !== null) {\n                ejectionCount += 1;\n            }\n        }\n        return (ejectionCount * 100) / this.addressMap.size;\n    }\n    runSuccessRateCheck(ejectionTimestamp) {\n        if (!this.latestConfig) {\n            return;\n        }\n        const successRateConfig = this.latestConfig.getSuccessRateEjectionConfig();\n        if (!successRateConfig) {\n            return;\n        }\n        trace('Running success rate check');\n        // Step 1\n        const targetRequestVolume = successRateConfig.request_volume;\n        let addresesWithTargetVolume = 0;\n        const successRates = [];\n        for (const [address, mapEntry] of this.addressMap) {\n            const successes = mapEntry.counter.getLastSuccesses();\n            const failures = mapEntry.counter.getLastFailures();\n            trace('Stats for ' +\n                address +\n                ': successes=' +\n                successes +\n                ' failures=' +\n                failures +\n                ' targetRequestVolume=' +\n                targetRequestVolume);\n            if (successes + failures >= targetRequestVolume) {\n                addresesWithTargetVolume += 1;\n                successRates.push(successes / (successes + failures));\n            }\n        }\n        trace('Found ' +\n            addresesWithTargetVolume +\n            ' success rate candidates; currentEjectionPercent=' +\n            this.getCurrentEjectionPercent() +\n            ' successRates=[' +\n            successRates +\n            ']');\n        if (addresesWithTargetVolume < successRateConfig.minimum_hosts) {\n            return;\n        }\n        // Step 2\n        const successRateMean = successRates.reduce((a, b) => a + b) / successRates.length;\n        let successRateDeviationSum = 0;\n        for (const rate of successRates) {\n            const deviation = rate - successRateMean;\n            successRateDeviationSum += deviation * deviation;\n        }\n        const successRateVariance = successRateDeviationSum / successRates.length;\n        const successRateStdev = Math.sqrt(successRateVariance);\n        const ejectionThreshold = successRateMean -\n            successRateStdev * (successRateConfig.stdev_factor / 1000);\n        trace('stdev=' + successRateStdev + ' ejectionThreshold=' + ejectionThreshold);\n        // Step 3\n        for (const [address, mapEntry] of this.addressMap.entries()) {\n            // Step 3.i\n            if (this.getCurrentEjectionPercent() >=\n                this.latestConfig.getMaxEjectionPercent()) {\n                break;\n            }\n            // Step 3.ii\n            const successes = mapEntry.counter.getLastSuccesses();\n            const failures = mapEntry.counter.getLastFailures();\n            if (successes + failures < targetRequestVolume) {\n                continue;\n            }\n            // Step 3.iii\n            const successRate = successes / (successes + failures);\n            trace('Checking candidate ' + address + ' successRate=' + successRate);\n            if (successRate < ejectionThreshold) {\n                const randomNumber = Math.random() * 100;\n                trace('Candidate ' +\n                    address +\n                    ' randomNumber=' +\n                    randomNumber +\n                    ' enforcement_percentage=' +\n                    successRateConfig.enforcement_percentage);\n                if (randomNumber < successRateConfig.enforcement_percentage) {\n                    trace('Ejecting candidate ' + address);\n                    this.eject(mapEntry, ejectionTimestamp);\n                }\n            }\n        }\n    }\n    runFailurePercentageCheck(ejectionTimestamp) {\n        if (!this.latestConfig) {\n            return;\n        }\n        const failurePercentageConfig = this.latestConfig.getFailurePercentageEjectionConfig();\n        if (!failurePercentageConfig) {\n            return;\n        }\n        trace('Running failure percentage check. threshold=' +\n            failurePercentageConfig.threshold +\n            ' request volume threshold=' +\n            failurePercentageConfig.request_volume);\n        // Step 1\n        let addressesWithTargetVolume = 0;\n        for (const mapEntry of this.addressMap.values()) {\n            const successes = mapEntry.counter.getLastSuccesses();\n            const failures = mapEntry.counter.getLastFailures();\n            if (successes + failures >= failurePercentageConfig.request_volume) {\n                addressesWithTargetVolume += 1;\n            }\n        }\n        if (addressesWithTargetVolume < failurePercentageConfig.minimum_hosts) {\n            return;\n        }\n        // Step 2\n        for (const [address, mapEntry] of this.addressMap.entries()) {\n            // Step 2.i\n            if (this.getCurrentEjectionPercent() >=\n                this.latestConfig.getMaxEjectionPercent()) {\n                break;\n            }\n            // Step 2.ii\n            const successes = mapEntry.counter.getLastSuccesses();\n            const failures = mapEntry.counter.getLastFailures();\n            trace('Candidate successes=' + successes + ' failures=' + failures);\n            if (successes + failures < failurePercentageConfig.request_volume) {\n                continue;\n            }\n            // Step 2.iii\n            const failurePercentage = (failures * 100) / (failures + successes);\n            if (failurePercentage > failurePercentageConfig.threshold) {\n                const randomNumber = Math.random() * 100;\n                trace('Candidate ' +\n                    address +\n                    ' randomNumber=' +\n                    randomNumber +\n                    ' enforcement_percentage=' +\n                    failurePercentageConfig.enforcement_percentage);\n                if (randomNumber < failurePercentageConfig.enforcement_percentage) {\n                    trace('Ejecting candidate ' + address);\n                    this.eject(mapEntry, ejectionTimestamp);\n                }\n            }\n        }\n    }\n    eject(mapEntry, ejectionTimestamp) {\n        mapEntry.currentEjectionTimestamp = new Date();\n        mapEntry.ejectionTimeMultiplier += 1;\n        for (const subchannelWrapper of mapEntry.subchannelWrappers) {\n            subchannelWrapper.eject();\n        }\n    }\n    uneject(mapEntry) {\n        mapEntry.currentEjectionTimestamp = null;\n        for (const subchannelWrapper of mapEntry.subchannelWrappers) {\n            subchannelWrapper.uneject();\n        }\n    }\n    switchAllBuckets() {\n        for (const mapEntry of this.addressMap.values()) {\n            mapEntry.counter.switchBuckets();\n        }\n    }\n    startTimer(delayMs) {\n        var _a, _b;\n        this.ejectionTimer = setTimeout(() => this.runChecks(), delayMs);\n        (_b = (_a = this.ejectionTimer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    runChecks() {\n        const ejectionTimestamp = new Date();\n        trace('Ejection timer running');\n        this.switchAllBuckets();\n        if (!this.latestConfig) {\n            return;\n        }\n        this.timerStartTime = ejectionTimestamp;\n        this.startTimer(this.latestConfig.getIntervalMs());\n        this.runSuccessRateCheck(ejectionTimestamp);\n        this.runFailurePercentageCheck(ejectionTimestamp);\n        for (const [address, mapEntry] of this.addressMap.entries()) {\n            if (mapEntry.currentEjectionTimestamp === null) {\n                if (mapEntry.ejectionTimeMultiplier > 0) {\n                    mapEntry.ejectionTimeMultiplier -= 1;\n                }\n            }\n            else {\n                const baseEjectionTimeMs = this.latestConfig.getBaseEjectionTimeMs();\n                const maxEjectionTimeMs = this.latestConfig.getMaxEjectionTimeMs();\n                const returnTime = new Date(mapEntry.currentEjectionTimestamp.getTime());\n                returnTime.setMilliseconds(returnTime.getMilliseconds() +\n                    Math.min(baseEjectionTimeMs * mapEntry.ejectionTimeMultiplier, Math.max(baseEjectionTimeMs, maxEjectionTimeMs)));\n                if (returnTime < new Date()) {\n                    trace('Unejecting ' + address);\n                    this.uneject(mapEntry);\n                }\n            }\n        }\n    }\n    updateAddressList(addressList, lbConfig, attributes) {\n        if (!(lbConfig instanceof OutlierDetectionLoadBalancingConfig)) {\n            return;\n        }\n        const subchannelAddresses = new Set();\n        for (const address of addressList) {\n            subchannelAddresses.add((0, subchannel_address_1.subchannelAddressToString)(address));\n        }\n        for (const address of subchannelAddresses) {\n            if (!this.addressMap.has(address)) {\n                trace('Adding map entry for ' + address);\n                this.addressMap.set(address, {\n                    counter: new CallCounter(),\n                    currentEjectionTimestamp: null,\n                    ejectionTimeMultiplier: 0,\n                    subchannelWrappers: [],\n                });\n            }\n        }\n        for (const key of this.addressMap.keys()) {\n            if (!subchannelAddresses.has(key)) {\n                trace('Removing map entry for ' + key);\n                this.addressMap.delete(key);\n            }\n        }\n        const childPolicy = (0, load_balancer_1.getFirstUsableConfig)(lbConfig.getChildPolicy(), true);\n        this.childBalancer.updateAddressList(addressList, childPolicy, attributes);\n        if (lbConfig.getSuccessRateEjectionConfig() ||\n            lbConfig.getFailurePercentageEjectionConfig()) {\n            if (this.timerStartTime) {\n                trace('Previous timer existed. Replacing timer');\n                clearTimeout(this.ejectionTimer);\n                const remainingDelay = lbConfig.getIntervalMs() -\n                    (new Date().getTime() - this.timerStartTime.getTime());\n                this.startTimer(remainingDelay);\n            }\n            else {\n                trace('Starting new timer');\n                this.timerStartTime = new Date();\n                this.startTimer(lbConfig.getIntervalMs());\n                this.switchAllBuckets();\n            }\n        }\n        else {\n            trace('Counting disabled. Cancelling timer.');\n            this.timerStartTime = null;\n            clearTimeout(this.ejectionTimer);\n            for (const mapEntry of this.addressMap.values()) {\n                this.uneject(mapEntry);\n                mapEntry.ejectionTimeMultiplier = 0;\n            }\n        }\n        this.latestConfig = lbConfig;\n    }\n    exitIdle() {\n        this.childBalancer.exitIdle();\n    }\n    resetBackoff() {\n        this.childBalancer.resetBackoff();\n    }\n    destroy() {\n        clearTimeout(this.ejectionTimer);\n        this.childBalancer.destroy();\n    }\n    getTypeName() {\n        return TYPE_NAME;\n    }\n}\nexports.OutlierDetectionLoadBalancer = OutlierDetectionLoadBalancer;\nfunction setup() {\n    if (OUTLIER_DETECTION_ENABLED) {\n        (0, experimental_1.registerLoadBalancerType)(TYPE_NAME, OutlierDetectionLoadBalancer, OutlierDetectionLoadBalancingConfig);\n    }\n}\nexports.setup = setup;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OutlierDetectionLoadBalancingConfig = exports.BaseSubchannelWrapper = exports.registerAdminService = exports.FilterStackFactory = exports.BaseFilter = exports.PickResultType = exports.QueuePicker = exports.UnavailablePicker = exports.ChildLoadBalancerHandler = exports.subchannelAddressToString = exports.validateLoadBalancingConfig = exports.getFirstUsableConfig = exports.registerLoadBalancerType = exports.createChildChannelControlHelper = exports.BackoffTimeout = exports.durationToMs = exports.uriToString = exports.createResolver = exports.registerResolver = exports.log = exports.trace = void 0;\nvar logging_1 = require(\"./logging\");\nObject.defineProperty(exports, \"trace\", { enumerable: true, get: function () { return logging_1.trace; } });\nObject.defineProperty(exports, \"log\", { enumerable: true, get: function () { return logging_1.log; } });\nvar resolver_1 = require(\"./resolver\");\nObject.defineProperty(exports, \"registerResolver\", { enumerable: true, get: function () { return resolver_1.registerResolver; } });\nObject.defineProperty(exports, \"createResolver\", { enumerable: true, get: function () { return resolver_1.createResolver; } });\nvar uri_parser_1 = require(\"./uri-parser\");\nObject.defineProperty(exports, \"uriToString\", { enumerable: true, get: function () { return uri_parser_1.uriToString; } });\nvar duration_1 = require(\"./duration\");\nObject.defineProperty(exports, \"durationToMs\", { enumerable: true, get: function () { return duration_1.durationToMs; } });\nvar backoff_timeout_1 = require(\"./backoff-timeout\");\nObject.defineProperty(exports, \"BackoffTimeout\", { enumerable: true, get: function () { return backoff_timeout_1.BackoffTimeout; } });\nvar load_balancer_1 = require(\"./load-balancer\");\nObject.defineProperty(exports, \"createChildChannelControlHelper\", { enumerable: true, get: function () { return load_balancer_1.createChildChannelControlHelper; } });\nObject.defineProperty(exports, \"registerLoadBalancerType\", { enumerable: true, get: function () { return load_balancer_1.registerLoadBalancerType; } });\nObject.defineProperty(exports, \"getFirstUsableConfig\", { enumerable: true, get: function () { return load_balancer_1.getFirstUsableConfig; } });\nObject.defineProperty(exports, \"validateLoadBalancingConfig\", { enumerable: true, get: function () { return load_balancer_1.validateLoadBalancingConfig; } });\nvar subchannel_address_1 = require(\"./subchannel-address\");\nObject.defineProperty(exports, \"subchannelAddressToString\", { enumerable: true, get: function () { return subchannel_address_1.subchannelAddressToString; } });\nvar load_balancer_child_handler_1 = require(\"./load-balancer-child-handler\");\nObject.defineProperty(exports, \"ChildLoadBalancerHandler\", { enumerable: true, get: function () { return load_balancer_child_handler_1.ChildLoadBalancerHandler; } });\nvar picker_1 = require(\"./picker\");\nObject.defineProperty(exports, \"UnavailablePicker\", { enumerable: true, get: function () { return picker_1.UnavailablePicker; } });\nObject.defineProperty(exports, \"QueuePicker\", { enumerable: true, get: function () { return picker_1.QueuePicker; } });\nObject.defineProperty(exports, \"PickResultType\", { enumerable: true, get: function () { return picker_1.PickResultType; } });\nvar filter_1 = require(\"./filter\");\nObject.defineProperty(exports, \"BaseFilter\", { enumerable: true, get: function () { return filter_1.BaseFilter; } });\nvar filter_stack_1 = require(\"./filter-stack\");\nObject.defineProperty(exports, \"FilterStackFactory\", { enumerable: true, get: function () { return filter_stack_1.FilterStackFactory; } });\nvar admin_1 = require(\"./admin\");\nObject.defineProperty(exports, \"registerAdminService\", { enumerable: true, get: function () { return admin_1.registerAdminService; } });\nvar subchannel_interface_1 = require(\"./subchannel-interface\");\nObject.defineProperty(exports, \"BaseSubchannelWrapper\", { enumerable: true, get: function () { return subchannel_interface_1.BaseSubchannelWrapper; } });\nvar load_balancer_outlier_detection_1 = require(\"./load-balancer-outlier-detection\");\nObject.defineProperty(exports, \"OutlierDetectionLoadBalancingConfig\", { enumerable: true, get: function () { return load_balancer_outlier_detection_1.OutlierDetectionLoadBalancingConfig; } });\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = void 0;\nconst resolver_1 = require(\"./resolver\");\nclass UdsResolver {\n    constructor(target, listener, channelOptions) {\n        this.listener = listener;\n        this.addresses = [];\n        this.hasReturnedResult = false;\n        let path;\n        if (target.authority === '') {\n            path = '/' + target.path;\n        }\n        else {\n            path = target.path;\n        }\n        this.addresses = [{ path }];\n    }\n    updateResolution() {\n        if (!this.hasReturnedResult) {\n            this.hasReturnedResult = true;\n            process.nextTick(this.listener.onSuccessfulResolution, this.addresses, null, null, null, {});\n        }\n    }\n    destroy() {\n        // This resolver owns no resources, so we do nothing here.\n    }\n    static getDefaultAuthority(target) {\n        return 'localhost';\n    }\n}\nfunction setup() {\n    (0, resolver_1.registerResolver)('unix', UdsResolver);\n}\nexports.setup = setup;\n", "\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = void 0;\nconst net_1 = require(\"net\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst resolver_1 = require(\"./resolver\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst logging = require(\"./logging\");\nconst TRACER_NAME = 'ip_resolver';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nconst IPV4_SCHEME = 'ipv4';\nconst IPV6_SCHEME = 'ipv6';\n/**\n * The default TCP port to connect to if not explicitly specified in the target.\n */\nconst DEFAULT_PORT = 443;\nclass IpResolver {\n    constructor(target, listener, channelOptions) {\n        var _a;\n        this.listener = listener;\n        this.addresses = [];\n        this.error = null;\n        this.hasReturnedResult = false;\n        trace('Resolver constructed for target ' + (0, uri_parser_1.uriToString)(target));\n        const addresses = [];\n        if (!(target.scheme === IPV4_SCHEME || target.scheme === IPV6_SCHEME)) {\n            this.error = {\n                code: constants_1.Status.UNAVAILABLE,\n                details: `Unrecognized scheme ${target.scheme} in IP resolver`,\n                metadata: new metadata_1.Metadata(),\n            };\n            return;\n        }\n        const pathList = target.path.split(',');\n        for (const path of pathList) {\n            const hostPort = (0, uri_parser_1.splitHostPort)(path);\n            if (hostPort === null) {\n                this.error = {\n                    code: constants_1.Status.UNAVAILABLE,\n                    details: `Failed to parse ${target.scheme} address ${path}`,\n                    metadata: new metadata_1.Metadata(),\n                };\n                return;\n            }\n            if ((target.scheme === IPV4_SCHEME && !(0, net_1.isIPv4)(hostPort.host)) ||\n                (target.scheme === IPV6_SCHEME && !(0, net_1.isIPv6)(hostPort.host))) {\n                this.error = {\n                    code: constants_1.Status.UNAVAILABLE,\n                    details: `Failed to parse ${target.scheme} address ${path}`,\n                    metadata: new metadata_1.Metadata(),\n                };\n                return;\n            }\n            addresses.push({\n                host: hostPort.host,\n                port: (_a = hostPort.port) !== null && _a !== void 0 ? _a : DEFAULT_PORT,\n            });\n        }\n        this.addresses = addresses;\n        trace('Parsed ' + target.scheme + ' address list ' + this.addresses);\n    }\n    updateResolution() {\n        if (!this.hasReturnedResult) {\n            this.hasReturnedResult = true;\n            process.nextTick(() => {\n                if (this.error) {\n                    this.listener.onError(this.error);\n                }\n                else {\n                    this.listener.onSuccessfulResolution(this.addresses, null, null, null, {});\n                }\n            });\n        }\n    }\n    destroy() {\n        this.hasReturnedResult = false;\n    }\n    static getDefaultAuthority(target) {\n        return target.path.split(',')[0];\n    }\n}\nfunction setup() {\n    (0, resolver_1.registerResolver)(IPV4_SCHEME, IpResolver);\n    (0, resolver_1.registerResolver)(IPV6_SCHEME, IpResolver);\n}\nexports.setup = setup;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = exports.PickFirstLoadBalancer = exports.shuffled = exports.PickFirstLoadBalancingConfig = void 0;\nconst load_balancer_1 = require(\"./load-balancer\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst picker_1 = require(\"./picker\");\nconst logging = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\nconst TRACER_NAME = 'pick_first';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nconst TYPE_NAME = 'pick_first';\n/**\n * Delay after starting a connection on a subchannel before starting a\n * connection on the next subchannel in the list, for Happy Eyeballs algorithm.\n */\nconst CONNECTION_DELAY_INTERVAL_MS = 250;\nclass PickFirstLoadBalancingConfig {\n    constructor(shuffleAddressList) {\n        this.shuffleAddressList = shuffleAddressList;\n    }\n    getLoadBalancerName() {\n        return TYPE_NAME;\n    }\n    toJsonObject() {\n        return {\n            [TYPE_NAME]: {\n                shuffleAddressList: this.shuffleAddressList,\n            },\n        };\n    }\n    getShuffleAddressList() {\n        return this.shuffleAddressList;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static createFromJson(obj) {\n        if ('shuffleAddressList' in obj &&\n            !(typeof obj.shuffleAddressList === 'boolean')) {\n            throw new Error('pick_first config field shuffleAddressList must be a boolean if provided');\n        }\n        return new PickFirstLoadBalancingConfig(obj.shuffleAddressList === true);\n    }\n}\nexports.PickFirstLoadBalancingConfig = PickFirstLoadBalancingConfig;\n/**\n * Picker for a `PickFirstLoadBalancer` in the READY state. Always returns the\n * picked subchannel.\n */\nclass PickFirstPicker {\n    constructor(subchannel) {\n        this.subchannel = subchannel;\n    }\n    pick(pickArgs) {\n        return {\n            pickResultType: picker_1.PickResultType.COMPLETE,\n            subchannel: this.subchannel,\n            status: null,\n            onCallStarted: null,\n            onCallEnded: null,\n        };\n    }\n}\n/**\n * Return a new array with the elements of the input array in a random order\n * @param list The input array\n * @returns A shuffled array of the elements of list\n */\nfunction shuffled(list) {\n    const result = list.slice();\n    for (let i = result.length - 1; i > 1; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = result[i];\n        result[i] = result[j];\n        result[j] = temp;\n    }\n    return result;\n}\nexports.shuffled = shuffled;\nclass PickFirstLoadBalancer {\n    /**\n     * Load balancer that attempts to connect to each backend in the address list\n     * in order, and picks the first one that connects, using it for every\n     * request.\n     * @param channelControlHelper `ChannelControlHelper` instance provided by\n     *     this load balancer's owner.\n     */\n    constructor(channelControlHelper) {\n        this.channelControlHelper = channelControlHelper;\n        /**\n         * The list of subchannels this load balancer is currently attempting to\n         * connect to.\n         */\n        this.children = [];\n        /**\n         * The current connectivity state of the load balancer.\n         */\n        this.currentState = connectivity_state_1.ConnectivityState.IDLE;\n        /**\n         * The index within the `subchannels` array of the subchannel with the most\n         * recently started connection attempt.\n         */\n        this.currentSubchannelIndex = 0;\n        /**\n         * The currently picked subchannel used for making calls. Populated if\n         * and only if the load balancer's current state is READY. In that case,\n         * the subchannel's current state is also READY.\n         */\n        this.currentPick = null;\n        /**\n         * Listener callback attached to each subchannel in the `subchannels` list\n         * while establishing a connection.\n         */\n        this.subchannelStateListener = (subchannel, previousState, newState, keepaliveTime, errorMessage) => {\n            this.onSubchannelStateUpdate(subchannel, previousState, newState, errorMessage);\n        };\n        this.triedAllSubchannels = false;\n        /**\n         * The LB policy enters sticky TRANSIENT_FAILURE mode when all\n         * subchannels have failed to connect at least once, and it stays in that\n         * mode until a connection attempt is successful. While in sticky TF mode,\n         * the LB policy continuously attempts to connect to all of its subchannels.\n         */\n        this.stickyTransientFailureMode = false;\n        /**\n         * Indicates whether we called channelControlHelper.requestReresolution since\n         * the last call to updateAddressList\n         */\n        this.requestedResolutionSinceLastUpdate = false;\n        /**\n         * The most recent error reported by any subchannel as it transitioned to\n         * TRANSIENT_FAILURE.\n         */\n        this.lastError = null;\n        this.latestAddressList = null;\n        this.connectionDelayTimeout = setTimeout(() => { }, 0);\n        clearTimeout(this.connectionDelayTimeout);\n    }\n    allChildrenHaveReportedTF() {\n        return this.children.every(child => child.hasReportedTransientFailure);\n    }\n    calculateAndReportNewState() {\n        if (this.currentPick) {\n            this.updateState(connectivity_state_1.ConnectivityState.READY, new PickFirstPicker(this.currentPick));\n        }\n        else if (this.children.length === 0) {\n            this.updateState(connectivity_state_1.ConnectivityState.IDLE, new picker_1.QueuePicker(this));\n        }\n        else {\n            if (this.stickyTransientFailureMode) {\n                this.updateState(connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, new picker_1.UnavailablePicker({ details: `No connection established. Last error: ${this.lastError}` }));\n            }\n            else {\n                this.updateState(connectivity_state_1.ConnectivityState.CONNECTING, new picker_1.QueuePicker(this));\n            }\n        }\n    }\n    requestReresolution() {\n        this.requestedResolutionSinceLastUpdate = true;\n        this.channelControlHelper.requestReresolution();\n    }\n    maybeEnterStickyTransientFailureMode() {\n        if (!this.allChildrenHaveReportedTF()) {\n            return;\n        }\n        if (!this.requestedResolutionSinceLastUpdate) {\n            /* Each time we get an update we reset each subchannel's\n             * hasReportedTransientFailure flag, so the next time we get to this\n             * point after that, each subchannel has reported TRANSIENT_FAILURE\n             * at least once since then. That is the trigger for requesting\n             * reresolution, whether or not the LB policy is already in sticky TF\n             * mode. */\n            this.requestReresolution();\n        }\n        if (this.stickyTransientFailureMode) {\n            return;\n        }\n        this.stickyTransientFailureMode = true;\n        for (const { subchannel } of this.children) {\n            subchannel.startConnecting();\n        }\n        this.calculateAndReportNewState();\n    }\n    removeCurrentPick() {\n        if (this.currentPick !== null) {\n            /* Unref can cause a state change, which can cause a change in the value\n             * of this.currentPick, so we hold a local reference to make sure that\n             * does not impact this function. */\n            const currentPick = this.currentPick;\n            this.currentPick = null;\n            currentPick.unref();\n            currentPick.removeConnectivityStateListener(this.subchannelStateListener);\n            this.channelControlHelper.removeChannelzChild(currentPick.getChannelzRef());\n        }\n    }\n    onSubchannelStateUpdate(subchannel, previousState, newState, errorMessage) {\n        var _a;\n        if ((_a = this.currentPick) === null || _a === void 0 ? void 0 : _a.realSubchannelEquals(subchannel)) {\n            if (newState !== connectivity_state_1.ConnectivityState.READY) {\n                this.removeCurrentPick();\n                this.calculateAndReportNewState();\n                this.requestReresolution();\n            }\n            return;\n        }\n        for (const [index, child] of this.children.entries()) {\n            if (subchannel.realSubchannelEquals(child.subchannel)) {\n                if (newState === connectivity_state_1.ConnectivityState.READY) {\n                    this.pickSubchannel(child.subchannel);\n                }\n                if (newState === connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n                    child.hasReportedTransientFailure = true;\n                    if (errorMessage) {\n                        this.lastError = errorMessage;\n                    }\n                    this.maybeEnterStickyTransientFailureMode();\n                    if (index === this.currentSubchannelIndex) {\n                        this.startNextSubchannelConnecting(index + 1);\n                    }\n                }\n                child.subchannel.startConnecting();\n                return;\n            }\n        }\n    }\n    startNextSubchannelConnecting(startIndex) {\n        clearTimeout(this.connectionDelayTimeout);\n        if (this.triedAllSubchannels) {\n            return;\n        }\n        for (const [index, child] of this.children.entries()) {\n            if (index >= startIndex) {\n                const subchannelState = child.subchannel.getConnectivityState();\n                if (subchannelState === connectivity_state_1.ConnectivityState.IDLE ||\n                    subchannelState === connectivity_state_1.ConnectivityState.CONNECTING) {\n                    this.startConnecting(index);\n                    return;\n                }\n            }\n        }\n        this.triedAllSubchannels = true;\n        this.maybeEnterStickyTransientFailureMode();\n    }\n    /**\n     * Have a single subchannel in the `subchannels` list start connecting.\n     * @param subchannelIndex The index into the `subchannels` list.\n     */\n    startConnecting(subchannelIndex) {\n        var _a, _b;\n        clearTimeout(this.connectionDelayTimeout);\n        this.currentSubchannelIndex = subchannelIndex;\n        if (this.children[subchannelIndex].subchannel.getConnectivityState() ===\n            connectivity_state_1.ConnectivityState.IDLE) {\n            trace('Start connecting to subchannel with address ' +\n                this.children[subchannelIndex].subchannel.getAddress());\n            process.nextTick(() => {\n                var _a;\n                (_a = this.children[subchannelIndex]) === null || _a === void 0 ? void 0 : _a.subchannel.startConnecting();\n            });\n        }\n        this.connectionDelayTimeout = (_b = (_a = setTimeout(() => {\n            this.startNextSubchannelConnecting(subchannelIndex + 1);\n        }, CONNECTION_DELAY_INTERVAL_MS)).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    pickSubchannel(subchannel) {\n        if (this.currentPick && subchannel.realSubchannelEquals(this.currentPick)) {\n            return;\n        }\n        trace('Pick subchannel with address ' + subchannel.getAddress());\n        this.stickyTransientFailureMode = false;\n        if (this.currentPick !== null) {\n            this.currentPick.unref();\n            this.channelControlHelper.removeChannelzChild(this.currentPick.getChannelzRef());\n            this.currentPick.removeConnectivityStateListener(this.subchannelStateListener);\n        }\n        this.currentPick = subchannel;\n        subchannel.ref();\n        this.channelControlHelper.addChannelzChild(subchannel.getChannelzRef());\n        this.resetSubchannelList();\n        clearTimeout(this.connectionDelayTimeout);\n        this.calculateAndReportNewState();\n    }\n    updateState(newState, picker) {\n        trace(connectivity_state_1.ConnectivityState[this.currentState] +\n            ' -> ' +\n            connectivity_state_1.ConnectivityState[newState]);\n        this.currentState = newState;\n        this.channelControlHelper.updateState(newState, picker);\n    }\n    resetSubchannelList() {\n        for (const child of this.children) {\n            if (!(this.currentPick && child.subchannel.realSubchannelEquals(this.currentPick))) {\n                /* The connectivity state listener is the same whether the subchannel\n                 * is in the list of children or it is the currentPick, so if it is in\n                 * both, removing it here would cause problems. In particular, that\n                 * always happens immediately after the subchannel is picked. */\n                child.subchannel.removeConnectivityStateListener(this.subchannelStateListener);\n            }\n            /* Refs are counted independently for the children list and the\n             * currentPick, so we call unref whether or not the child is the\n             * currentPick. Channelz child references are also refcounted, so\n             * removeChannelzChild can be handled the same way. */\n            child.subchannel.unref();\n            this.channelControlHelper.removeChannelzChild(child.subchannel.getChannelzRef());\n        }\n        this.currentSubchannelIndex = 0;\n        this.children = [];\n        this.triedAllSubchannels = false;\n        this.requestedResolutionSinceLastUpdate = false;\n    }\n    connectToAddressList(addressList) {\n        const newChildrenList = addressList.map(address => ({\n            subchannel: this.channelControlHelper.createSubchannel(address, {}),\n            hasReportedTransientFailure: false,\n        }));\n        /* Ref each subchannel before resetting the list, to ensure that\n         * subchannels shared between the list don't drop to 0 refs during the\n         * transition. */\n        for (const { subchannel } of newChildrenList) {\n            subchannel.ref();\n            this.channelControlHelper.addChannelzChild(subchannel.getChannelzRef());\n        }\n        this.resetSubchannelList();\n        this.children = newChildrenList;\n        for (const { subchannel } of this.children) {\n            subchannel.addConnectivityStateListener(this.subchannelStateListener);\n            if (subchannel.getConnectivityState() === connectivity_state_1.ConnectivityState.READY) {\n                this.pickSubchannel(subchannel);\n                return;\n            }\n        }\n        for (const child of this.children) {\n            if (child.subchannel.getConnectivityState() ===\n                connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n                child.hasReportedTransientFailure = true;\n            }\n        }\n        this.startNextSubchannelConnecting(0);\n        this.calculateAndReportNewState();\n    }\n    updateAddressList(addressList, lbConfig) {\n        if (!(lbConfig instanceof PickFirstLoadBalancingConfig)) {\n            return;\n        }\n        /* Previously, an update would be discarded if it was identical to the\n         * previous update, to minimize churn. Now the DNS resolver is\n         * rate-limited, so that is less of a concern. */\n        if (lbConfig.getShuffleAddressList()) {\n            addressList = shuffled(addressList);\n        }\n        this.latestAddressList = addressList;\n        this.connectToAddressList(addressList);\n    }\n    exitIdle() {\n        if (this.currentState === connectivity_state_1.ConnectivityState.IDLE && this.latestAddressList) {\n            this.connectToAddressList(this.latestAddressList);\n        }\n    }\n    resetBackoff() {\n        /* The pick first load balancer does not have a connection backoff, so this\n         * does nothing */\n    }\n    destroy() {\n        this.resetSubchannelList();\n        this.removeCurrentPick();\n    }\n    getTypeName() {\n        return TYPE_NAME;\n    }\n}\nexports.PickFirstLoadBalancer = PickFirstLoadBalancer;\nfunction setup() {\n    (0, load_balancer_1.registerLoadBalancerType)(TYPE_NAME, PickFirstLoadBalancer, PickFirstLoadBalancingConfig);\n    (0, load_balancer_1.registerDefaultLoadBalancerType)(TYPE_NAME);\n}\nexports.setup = setup;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = exports.RoundRobinLoadBalancer = void 0;\nconst load_balancer_1 = require(\"./load-balancer\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst picker_1 = require(\"./picker\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst logging = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\nconst TRACER_NAME = 'round_robin';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nconst TYPE_NAME = 'round_robin';\nclass RoundRobinLoadBalancingConfig {\n    getLoadBalancerName() {\n        return TYPE_NAME;\n    }\n    constructor() { }\n    toJsonObject() {\n        return {\n            [TYPE_NAME]: {},\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static createFromJson(obj) {\n        return new RoundRobinLoadBalancingConfig();\n    }\n}\nclass RoundRobinPicker {\n    constructor(subchannelList, nextIndex = 0) {\n        this.subchannelList = subchannelList;\n        this.nextIndex = nextIndex;\n    }\n    pick(pickArgs) {\n        const pickedSubchannel = this.subchannelList[this.nextIndex];\n        this.nextIndex = (this.nextIndex + 1) % this.subchannelList.length;\n        return {\n            pickResultType: picker_1.PickResultType.COMPLETE,\n            subchannel: pickedSubchannel,\n            status: null,\n            onCallStarted: null,\n            onCallEnded: null,\n        };\n    }\n    /**\n     * Check what the next subchannel returned would be. Used by the load\n     * balancer implementation to preserve this part of the picker state if\n     * possible when a subchannel connects or disconnects.\n     */\n    peekNextSubchannel() {\n        return this.subchannelList[this.nextIndex];\n    }\n}\nclass RoundRobinLoadBalancer {\n    constructor(channelControlHelper) {\n        this.channelControlHelper = channelControlHelper;\n        this.subchannels = [];\n        this.currentState = connectivity_state_1.ConnectivityState.IDLE;\n        this.currentReadyPicker = null;\n        this.lastError = null;\n        this.subchannelStateListener = (subchannel, previousState, newState, keepaliveTime, errorMessage) => {\n            this.calculateAndUpdateState();\n            if (newState === connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE ||\n                newState === connectivity_state_1.ConnectivityState.IDLE) {\n                if (errorMessage) {\n                    this.lastError = errorMessage;\n                }\n                this.channelControlHelper.requestReresolution();\n                subchannel.startConnecting();\n            }\n        };\n    }\n    countSubchannelsWithState(state) {\n        return this.subchannels.filter(subchannel => subchannel.getConnectivityState() === state).length;\n    }\n    calculateAndUpdateState() {\n        if (this.countSubchannelsWithState(connectivity_state_1.ConnectivityState.READY) > 0) {\n            const readySubchannels = this.subchannels.filter(subchannel => subchannel.getConnectivityState() === connectivity_state_1.ConnectivityState.READY);\n            let index = 0;\n            if (this.currentReadyPicker !== null) {\n                index = readySubchannels.indexOf(this.currentReadyPicker.peekNextSubchannel());\n                if (index < 0) {\n                    index = 0;\n                }\n            }\n            this.updateState(connectivity_state_1.ConnectivityState.READY, new RoundRobinPicker(readySubchannels, index));\n        }\n        else if (this.countSubchannelsWithState(connectivity_state_1.ConnectivityState.CONNECTING) > 0) {\n            this.updateState(connectivity_state_1.ConnectivityState.CONNECTING, new picker_1.QueuePicker(this));\n        }\n        else if (this.countSubchannelsWithState(connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) > 0) {\n            this.updateState(connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, new picker_1.UnavailablePicker({ details: `No connection established. Last error: ${this.lastError}` }));\n        }\n        else {\n            this.updateState(connectivity_state_1.ConnectivityState.IDLE, new picker_1.QueuePicker(this));\n        }\n    }\n    updateState(newState, picker) {\n        trace(connectivity_state_1.ConnectivityState[this.currentState] +\n            ' -> ' +\n            connectivity_state_1.ConnectivityState[newState]);\n        if (newState === connectivity_state_1.ConnectivityState.READY) {\n            this.currentReadyPicker = picker;\n        }\n        else {\n            this.currentReadyPicker = null;\n        }\n        this.currentState = newState;\n        this.channelControlHelper.updateState(newState, picker);\n    }\n    resetSubchannelList() {\n        for (const subchannel of this.subchannels) {\n            subchannel.removeConnectivityStateListener(this.subchannelStateListener);\n            subchannel.unref();\n            this.channelControlHelper.removeChannelzChild(subchannel.getChannelzRef());\n        }\n        this.subchannels = [];\n    }\n    updateAddressList(addressList, lbConfig) {\n        this.resetSubchannelList();\n        trace('Connect to address list ' +\n            addressList.map(address => (0, subchannel_address_1.subchannelAddressToString)(address)));\n        this.subchannels = addressList.map(address => this.channelControlHelper.createSubchannel(address, {}));\n        for (const subchannel of this.subchannels) {\n            subchannel.ref();\n            subchannel.addConnectivityStateListener(this.subchannelStateListener);\n            this.channelControlHelper.addChannelzChild(subchannel.getChannelzRef());\n            const subchannelState = subchannel.getConnectivityState();\n            if (subchannelState === connectivity_state_1.ConnectivityState.IDLE ||\n                subchannelState === connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n                subchannel.startConnecting();\n            }\n        }\n        this.calculateAndUpdateState();\n    }\n    exitIdle() {\n        for (const subchannel of this.subchannels) {\n            subchannel.startConnecting();\n        }\n    }\n    resetBackoff() {\n        /* The pick first load balancer does not have a connection backoff, so this\n         * does nothing */\n    }\n    destroy() {\n        this.resetSubchannelList();\n    }\n    getTypeName() {\n        return TYPE_NAME;\n    }\n}\nexports.RoundRobinLoadBalancer = RoundRobinLoadBalancer;\nfunction setup() {\n    (0, load_balancer_1.registerLoadBalancerType)(TYPE_NAME, RoundRobinLoadBalancer, RoundRobinLoadBalancingConfig);\n}\nexports.setup = setup;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.experimental = exports.addAdminServicesToServer = exports.getChannelzHandlers = exports.getChannelzServiceDefinition = exports.InterceptorConfigurationError = exports.InterceptingCall = exports.RequesterBuilder = exports.ListenerBuilder = exports.StatusBuilder = exports.getClientChannel = exports.ServerCredentials = exports.Server = exports.setLogVerbosity = exports.setLogger = exports.load = exports.loadObject = exports.CallCredentials = exports.ChannelCredentials = exports.waitForClientReady = exports.closeClient = exports.Channel = exports.makeGenericClientConstructor = exports.makeClientConstructor = exports.loadPackageDefinition = exports.Client = exports.compressionAlgorithms = exports.propagate = exports.connectivityState = exports.status = exports.logVerbosity = exports.Metadata = exports.credentials = void 0;\nconst call_credentials_1 = require(\"./call-credentials\");\nObject.defineProperty(exports, \"CallCredentials\", { enumerable: true, get: function () { return call_credentials_1.CallCredentials; } });\nconst channel_1 = require(\"./channel\");\nObject.defineProperty(exports, \"Channel\", { enumerable: true, get: function () { return channel_1.ChannelImplementation; } });\nconst compression_algorithms_1 = require(\"./compression-algorithms\");\nObject.defineProperty(exports, \"compressionAlgorithms\", { enumerable: true, get: function () { return compression_algorithms_1.CompressionAlgorithms; } });\nconst connectivity_state_1 = require(\"./connectivity-state\");\nObject.defineProperty(exports, \"connectivityState\", { enumerable: true, get: function () { return connectivity_state_1.ConnectivityState; } });\nconst channel_credentials_1 = require(\"./channel-credentials\");\nObject.defineProperty(exports, \"ChannelCredentials\", { enumerable: true, get: function () { return channel_credentials_1.ChannelCredentials; } });\nconst client_1 = require(\"./client\");\nObject.defineProperty(exports, \"Client\", { enumerable: true, get: function () { return client_1.Client; } });\nconst constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"logVerbosity\", { enumerable: true, get: function () { return constants_1.LogVerbosity; } });\nObject.defineProperty(exports, \"status\", { enumerable: true, get: function () { return constants_1.Status; } });\nObject.defineProperty(exports, \"propagate\", { enumerable: true, get: function () { return constants_1.Propagate; } });\nconst logging = require(\"./logging\");\nconst make_client_1 = require(\"./make-client\");\nObject.defineProperty(exports, \"loadPackageDefinition\", { enumerable: true, get: function () { return make_client_1.loadPackageDefinition; } });\nObject.defineProperty(exports, \"makeClientConstructor\", { enumerable: true, get: function () { return make_client_1.makeClientConstructor; } });\nObject.defineProperty(exports, \"makeGenericClientConstructor\", { enumerable: true, get: function () { return make_client_1.makeClientConstructor; } });\nconst metadata_1 = require(\"./metadata\");\nObject.defineProperty(exports, \"Metadata\", { enumerable: true, get: function () { return metadata_1.Metadata; } });\nconst server_1 = require(\"./server\");\nObject.defineProperty(exports, \"Server\", { enumerable: true, get: function () { return server_1.Server; } });\nconst server_credentials_1 = require(\"./server-credentials\");\nObject.defineProperty(exports, \"ServerCredentials\", { enumerable: true, get: function () { return server_credentials_1.ServerCredentials; } });\nconst status_builder_1 = require(\"./status-builder\");\nObject.defineProperty(exports, \"StatusBuilder\", { enumerable: true, get: function () { return status_builder_1.StatusBuilder; } });\n/**** Client Credentials ****/\n// Using assign only copies enumerable properties, which is what we want\nexports.credentials = {\n    /**\n     * Combine a ChannelCredentials with any number of CallCredentials into a\n     * single ChannelCredentials object.\n     * @param channelCredentials The ChannelCredentials object.\n     * @param callCredentials Any number of CallCredentials objects.\n     * @return The resulting ChannelCredentials object.\n     */\n    combineChannelCredentials: (channelCredentials, ...callCredentials) => {\n        return callCredentials.reduce((acc, other) => acc.compose(other), channelCredentials);\n    },\n    /**\n     * Combine any number of CallCredentials into a single CallCredentials\n     * object.\n     * @param first The first CallCredentials object.\n     * @param additional Any number of additional CallCredentials objects.\n     * @return The resulting CallCredentials object.\n     */\n    combineCallCredentials: (first, ...additional) => {\n        return additional.reduce((acc, other) => acc.compose(other), first);\n    },\n    // from channel-credentials.ts\n    createInsecure: channel_credentials_1.ChannelCredentials.createInsecure,\n    createSsl: channel_credentials_1.ChannelCredentials.createSsl,\n    createFromSecureContext: channel_credentials_1.ChannelCredentials.createFromSecureContext,\n    // from call-credentials.ts\n    createFromMetadataGenerator: call_credentials_1.CallCredentials.createFromMetadataGenerator,\n    createFromGoogleCredential: call_credentials_1.CallCredentials.createFromGoogleCredential,\n    createEmpty: call_credentials_1.CallCredentials.createEmpty,\n};\n/**\n * Close a Client object.\n * @param client The client to close.\n */\nconst closeClient = (client) => client.close();\nexports.closeClient = closeClient;\nconst waitForClientReady = (client, deadline, callback) => client.waitForReady(deadline, callback);\nexports.waitForClientReady = waitForClientReady;\n/* eslint-enable @typescript-eslint/no-explicit-any */\n/**** Unimplemented function stubs ****/\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst loadObject = (value, options) => {\n    throw new Error('Not available in this library. Use @grpc/proto-loader and loadPackageDefinition instead');\n};\nexports.loadObject = loadObject;\nconst load = (filename, format, options) => {\n    throw new Error('Not available in this library. Use @grpc/proto-loader and loadPackageDefinition instead');\n};\nexports.load = load;\nconst setLogger = (logger) => {\n    logging.setLogger(logger);\n};\nexports.setLogger = setLogger;\nconst setLogVerbosity = (verbosity) => {\n    logging.setLoggerVerbosity(verbosity);\n};\nexports.setLogVerbosity = setLogVerbosity;\nconst getClientChannel = (client) => {\n    return client_1.Client.prototype.getChannel.call(client);\n};\nexports.getClientChannel = getClientChannel;\nvar client_interceptors_1 = require(\"./client-interceptors\");\nObject.defineProperty(exports, \"ListenerBuilder\", { enumerable: true, get: function () { return client_interceptors_1.ListenerBuilder; } });\nObject.defineProperty(exports, \"RequesterBuilder\", { enumerable: true, get: function () { return client_interceptors_1.RequesterBuilder; } });\nObject.defineProperty(exports, \"InterceptingCall\", { enumerable: true, get: function () { return client_interceptors_1.InterceptingCall; } });\nObject.defineProperty(exports, \"InterceptorConfigurationError\", { enumerable: true, get: function () { return client_interceptors_1.InterceptorConfigurationError; } });\nvar channelz_1 = require(\"./channelz\");\nObject.defineProperty(exports, \"getChannelzServiceDefinition\", { enumerable: true, get: function () { return channelz_1.getChannelzServiceDefinition; } });\nObject.defineProperty(exports, \"getChannelzHandlers\", { enumerable: true, get: function () { return channelz_1.getChannelzHandlers; } });\nvar admin_1 = require(\"./admin\");\nObject.defineProperty(exports, \"addAdminServicesToServer\", { enumerable: true, get: function () { return admin_1.addAdminServicesToServer; } });\nconst experimental = require(\"./experimental\");\nexports.experimental = experimental;\nconst resolver_dns = require(\"./resolver-dns\");\nconst resolver_uds = require(\"./resolver-uds\");\nconst resolver_ip = require(\"./resolver-ip\");\nconst load_balancer_pick_first = require(\"./load-balancer-pick-first\");\nconst load_balancer_round_robin = require(\"./load-balancer-round-robin\");\nconst load_balancer_outlier_detection = require(\"./load-balancer-outlier-detection\");\nconst channelz = require(\"./channelz\");\n(() => {\n    resolver_dns.setup();\n    resolver_uds.setup();\n    resolver_ip.setup();\n    load_balancer_pick_first.setup();\n    load_balancer_round_robin.setup();\n    load_balancer_outlier_detection.setup();\n    channelz.setup();\n})();\n"],
  "mappings": "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,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAI;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAChE;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAI;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAI;AAAA,gBAAI;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAChE;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA;AAAA,gBAEZ;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAI;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAChE;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAI;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAI;AAAA,gBAAI;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAChE;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA;AAAA,gBAEZ;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAI;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAChE;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAI;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAI;AAAA,gBAAI;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAChE;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;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",
  "names": ["exports", "module", "Symbol", "exports", "module", "params", "offset", "exports", "i", "exports", "module", "exports", "module", "exports", "exports", "module", "size", "exports", "module", "exports", "Buffer", "i", "exports", "module", "create", "exports", "module", "exports", "module", "create_array", "create", "buffer", "exports", "module", "exports", "module", "self", "err", "exports", "exports", "module", "exports", "exports", "module", "exports", "module", "inquire", "exports", "isAbsolute", "path", "normalize", "exports", "module", "define", "exports", "module", "exports", "module", "require_service", "exports", "module", "exports", "module", "exports", "module", "field", "exports", "module", "exports", "exports", "exports", "module", "exports", "module", "self", "filename", "process", "resolved", "i", "source", "exports", "module", "dst", "path", "value", "exports", "exports", "module", "exports", "module", "self", "exports", "module", "opt", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "token", "value", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "require_descriptor", "exports", "module", "exports", "module", "exports", "module", "require_type", "exports", "module", "require_util", "exports", "exports", "module", "global", "require_src", "exports", "IdempotencyLevel", "exports", "Status", "LogVerbosity", "Propagate", "exports", "module", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "ConnectivityState", "exports", "exports", "exports", "PickResultType", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "metadata", "exports", "metadata", "_a", "_b", "_c", "getCall", "exports", "metadata", "exports", "exports", "channels", "subchannels", "sockets", "exports", "exports", "exports", "_a", "hostPort", "exports", "ReadState", "exports", "_a", "exports", "exports", "exports", "global", "exports", "exports", "CompressionAlgorithms", "exports", "exports", "exports", "exports", "exports", "_a", "_b", "code", "details", "exports", "exports", "exports", "exports", "exports", "exports", "err", "_a", "exports", "exports", "port", "_a", "_b", "exports", "exports", "exports", "_a", "exports", "exports", "exports", "exports", "_a", "exports", "require_src", "exports"]
}
